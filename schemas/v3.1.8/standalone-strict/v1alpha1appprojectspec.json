{
  "type": "object",
  "title": "AppProjectSpec is the specification of an AppProject",
  "properties": {
    "clusterResourceBlacklist": {
      "type": "array",
      "title": "ClusterResourceBlacklist contains list of blacklisted cluster level resources",
      "items": {
        "description": "+protobuf.options.(gogoproto.goproto_stringer)=false",
        "type": "object",
        "title": "GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying\nconcepts during lookup stages without having partially valid types",
        "properties": {
          "group": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    },
    "clusterResourceWhitelist": {
      "type": "array",
      "title": "ClusterResourceWhitelist contains list of whitelisted cluster level resources",
      "items": {
        "description": "+protobuf.options.(gogoproto.goproto_stringer)=false",
        "type": "object",
        "title": "GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying\nconcepts during lookup stages without having partially valid types",
        "properties": {
          "group": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    },
    "description": {
      "type": "string",
      "title": "Description contains optional project description\n+kubebuilder:validation:MaxLength=255"
    },
    "destinationServiceAccounts": {
      "description": "DestinationServiceAccounts holds information about the service accounts to be impersonated for the application sync operation for each destination.",
      "type": "array",
      "items": {
        "description": "ApplicationDestinationServiceAccount holds information about the service account to be impersonated for the application sync operation.",
        "type": "object",
        "properties": {
          "defaultServiceAccount": {
            "type": "string",
            "title": "DefaultServiceAccount to be used for impersonation during the sync operation"
          },
          "namespace": {
            "description": "Namespace specifies the target namespace for the application's resources.",
            "type": "string"
          },
          "server": {
            "description": "Server specifies the URL of the target cluster's Kubernetes control plane API.",
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    },
    "destinations": {
      "type": "array",
      "title": "Destinations contains list of destinations available for deployment",
      "items": {
        "type": "object",
        "title": "ApplicationDestination holds information about the application's destination",
        "properties": {
          "name": {
            "description": "Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.",
            "type": "string"
          },
          "namespace": {
            "type": "string",
            "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
          },
          "server": {
            "description": "Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.",
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    },
    "namespaceResourceBlacklist": {
      "type": "array",
      "title": "NamespaceResourceBlacklist contains list of blacklisted namespace level resources",
      "items": {
        "description": "+protobuf.options.(gogoproto.goproto_stringer)=false",
        "type": "object",
        "title": "GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying\nconcepts during lookup stages without having partially valid types",
        "properties": {
          "group": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    },
    "namespaceResourceWhitelist": {
      "type": "array",
      "title": "NamespaceResourceWhitelist contains list of whitelisted namespace level resources",
      "items": {
        "description": "+protobuf.options.(gogoproto.goproto_stringer)=false",
        "type": "object",
        "title": "GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying\nconcepts during lookup stages without having partially valid types",
        "properties": {
          "group": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    },
    "orphanedResources": {
      "type": "object",
      "title": "OrphanedResourcesMonitorSettings holds settings of orphaned resources monitoring",
      "properties": {
        "ignore": {
          "type": "array",
          "title": "Ignore contains a list of resources that are to be excluded from orphaned resources monitoring",
          "items": {
            "type": "object",
            "title": "OrphanedResourceKey is a reference to a resource to be ignored from",
            "properties": {
              "group": {
                "type": "string"
              },
              "kind": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "warn": {
          "type": "boolean",
          "title": "Warn indicates if warning condition should be created for apps which have orphaned resources"
        }
      },
      "additionalProperties": false
    },
    "permitOnlyProjectScopedClusters": {
      "type": "boolean",
      "title": "PermitOnlyProjectScopedClusters determines whether destinations can only reference clusters which are project-scoped"
    },
    "roles": {
      "type": "array",
      "title": "Roles are user defined RBAC roles associated with this project",
      "items": {
        "type": "object",
        "title": "ProjectRole represents a role that has access to a project",
        "properties": {
          "description": {
            "type": "string",
            "title": "Description is a description of the role"
          },
          "groups": {
            "type": "array",
            "title": "Groups are a list of OIDC group claims bound to this role",
            "items": {
              "type": "string"
            }
          },
          "jwtTokens": {
            "type": "array",
            "title": "JWTTokens are a list of generated JWT tokens bound to this role",
            "items": {
              "type": "object",
              "title": "JWTToken holds the issuedAt and expiresAt values of a token",
              "properties": {
                "exp": {
                  "type": "integer",
                  "format": "int64"
                },
                "iat": {
                  "type": "integer",
                  "format": "int64"
                },
                "id": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "name": {
            "type": "string",
            "title": "Name is a name for this role"
          },
          "policies": {
            "type": "array",
            "title": "Policies Stores a list of casbin formatted strings that define access policies for the role in the project",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      }
    },
    "signatureKeys": {
      "type": "array",
      "title": "SignatureKeys contains a list of PGP key IDs that commits in Git must be signed with in order to be allowed for sync",
      "items": {
        "type": "object",
        "title": "SignatureKey is the specification of a key required to verify commit signatures with",
        "properties": {
          "keyID": {
            "type": "string",
            "title": "The ID of the key in hexadecimal notation"
          }
        },
        "additionalProperties": false
      }
    },
    "sourceNamespaces": {
      "type": "array",
      "title": "SourceNamespaces defines the namespaces application resources are allowed to be created in",
      "items": {
        "type": "string"
      }
    },
    "sourceRepos": {
      "type": "array",
      "title": "SourceRepos contains list of repository URLs which can be used for deployment",
      "items": {
        "type": "string"
      }
    },
    "syncWindows": {
      "type": "array",
      "title": "SyncWindows controls when syncs can be run for apps in this project",
      "items": {
        "type": "object",
        "title": "SyncWindow contains the kind, time, duration and attributes that are used to assign the syncWindows to apps",
        "properties": {
          "andOperator": {
            "type": "boolean",
            "title": "UseAndOperator use AND operator for matching applications, namespaces and clusters instead of the default OR operator"
          },
          "applications": {
            "type": "array",
            "title": "Applications contains a list of applications that the window will apply to",
            "items": {
              "type": "string"
            }
          },
          "clusters": {
            "type": "array",
            "title": "Clusters contains a list of clusters that the window will apply to",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string",
            "title": "Description of the sync that will be applied to the schedule, can be used to add any information such as a ticket number for example"
          },
          "duration": {
            "type": "string",
            "title": "Duration is the amount of time the sync window will be open"
          },
          "kind": {
            "type": "string",
            "title": "Kind defines if the window allows or blocks syncs"
          },
          "manualSync": {
            "type": "boolean",
            "title": "ManualSync enables manual syncs when they would otherwise be blocked"
          },
          "namespaces": {
            "type": "array",
            "title": "Namespaces contains a list of namespaces that the window will apply to",
            "items": {
              "type": "string"
            }
          },
          "schedule": {
            "type": "string",
            "title": "Schedule is the time the window will begin, specified in cron format"
          },
          "timeZone": {
            "type": "string",
            "title": "TimeZone of the sync that will be applied to the schedule"
          }
        },
        "additionalProperties": false
      }
    }
  },
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}