{
  "description": "SyncOperation contains details about a sync operation.",
  "type": "object",
  "properties": {
    "dryRun": {
      "type": "boolean",
      "title": "DryRun specifies to perform a `kubectl apply --dry-run` without actually performing the sync"
    },
    "manifests": {
      "type": "array",
      "title": "Manifests is an optional field that overrides sync source with a local directory for development",
      "items": {
        "type": "string"
      }
    },
    "prune": {
      "type": "boolean",
      "title": "Prune specifies to delete resources from the cluster that are no longer tracked in git"
    },
    "resources": {
      "type": "array",
      "title": "Resources describes which resources shall be part of the sync",
      "items": {
        "description": "SyncOperationResource contains resources to sync.",
        "type": "object",
        "properties": {
          "group": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          }
        }
      }
    },
    "revision": {
      "description": "Revision is the revision (Git) or chart version (Helm) which to sync the application to\nIf omitted, will use the revision specified in app spec.",
      "type": "string"
    },
    "revisions": {
      "description": "Revisions is the list of revision (Git) or chart version (Helm) which to sync each source in sources field for the application to\nIf omitted, will use the revision specified in app spec.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "source": {
      "type": "object",
      "title": "ApplicationSource contains all required information about the source of an application",
      "properties": {
        "chart": {
          "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
          "type": "string"
        },
        "directory": {
          "type": "object",
          "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
          "properties": {
            "exclude": {
              "type": "string",
              "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
            },
            "include": {
              "type": "string",
              "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
            },
            "jsonnet": {
              "type": "object",
              "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
              "properties": {
                "extVars": {
                  "type": "array",
                  "title": "ExtVars is a list of Jsonnet External Variables",
                  "items": {
                    "type": "object",
                    "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                    "properties": {
                      "code": {
                        "type": "boolean"
                      },
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                "libs": {
                  "type": "array",
                  "title": "Additional library search dirs",
                  "items": {
                    "type": "string"
                  }
                },
                "tlas": {
                  "type": "array",
                  "title": "TLAS is a list of Jsonnet Top-level Arguments",
                  "items": {
                    "type": "object",
                    "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                    "properties": {
                      "code": {
                        "type": "boolean"
                      },
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "recurse": {
              "type": "boolean",
              "title": "Recurse specifies whether to scan a directory recursively for manifests"
            }
          }
        },
        "helm": {
          "type": "object",
          "title": "ApplicationSourceHelm holds helm specific options",
          "properties": {
            "fileParameters": {
              "type": "array",
              "title": "FileParameters are file parameters to the helm template",
              "items": {
                "type": "object",
                "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                "properties": {
                  "name": {
                    "type": "string",
                    "title": "Name is the name of the Helm parameter"
                  },
                  "path": {
                    "type": "string",
                    "title": "Path is the path to the file containing the values for the Helm parameter"
                  }
                }
              }
            },
            "ignoreMissingValueFiles": {
              "type": "boolean",
              "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
            },
            "parameters": {
              "type": "array",
              "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
              "items": {
                "type": "object",
                "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                "properties": {
                  "forceString": {
                    "type": "boolean",
                    "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                  },
                  "name": {
                    "type": "string",
                    "title": "Name is the name of the Helm parameter"
                  },
                  "value": {
                    "type": "string",
                    "title": "Value is the value for the Helm parameter"
                  }
                }
              }
            },
            "passCredentials": {
              "type": "boolean",
              "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
            },
            "releaseName": {
              "type": "string",
              "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
            },
            "skipCrds": {
              "type": "boolean",
              "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
            },
            "valueFiles": {
              "type": "array",
              "title": "ValuesFiles is a list of Helm value files to use when generating a template",
              "items": {
                "type": "string"
              }
            },
            "values": {
              "type": "string",
              "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
            },
            "version": {
              "type": "string",
              "title": "Version is the Helm version to use for templating (\"3\")"
            }
          }
        },
        "kustomize": {
          "type": "object",
          "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
          "properties": {
            "commonAnnotations": {
              "type": "object",
              "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
              "additionalProperties": {
                "type": "string"
              }
            },
            "commonAnnotationsEnvsubst": {
              "type": "boolean",
              "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
            },
            "commonLabels": {
              "type": "object",
              "title": "CommonLabels is a list of additional labels to add to rendered manifests",
              "additionalProperties": {
                "type": "string"
              }
            },
            "forceCommonAnnotations": {
              "type": "boolean",
              "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
            },
            "forceCommonLabels": {
              "type": "boolean",
              "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
            },
            "images": {
              "type": "array",
              "title": "Images is a list of Kustomize image override specifications",
              "items": {
                "type": "string"
              }
            },
            "namePrefix": {
              "type": "string",
              "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
            },
            "nameSuffix": {
              "type": "string",
              "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
            },
            "namespace": {
              "type": "string",
              "title": "Namespace sets the namespace that Kustomize adds to all resources"
            },
            "replicas": {
              "type": "array",
              "title": "Replicas is a list of Kustomize Replicas override specifications",
              "items": {
                "type": "object",
                "properties": {
                  "count": {
                    "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                    "type": "object",
                    "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                    "properties": {
                      "intVal": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "strVal": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "format": "int64"
                      }
                    }
                  },
                  "name": {
                    "type": "string",
                    "title": "Name of Deployment or StatefulSet"
                  }
                }
              }
            },
            "version": {
              "type": "string",
              "title": "Version controls which version of Kustomize to use for rendering manifests"
            }
          }
        },
        "path": {
          "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
          "type": "string"
        },
        "plugin": {
          "type": "object",
          "title": "ApplicationSourcePlugin holds options specific to config management plugins",
          "properties": {
            "env": {
              "type": "array",
              "items": {
                "type": "object",
                "title": "EnvEntry represents an entry in the application's environment",
                "properties": {
                  "name": {
                    "type": "string",
                    "title": "Name is the name of the variable, usually expressed in uppercase"
                  },
                  "value": {
                    "type": "string",
                    "title": "Value is the value of the variable"
                  }
                }
              }
            },
            "name": {
              "type": "string"
            },
            "parameters": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "array": {
                    "description": "Array is the value of an array type parameter.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "map": {
                    "description": "Map is the value of a map type parameter.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "name": {
                    "description": "Name is the name identifying a parameter.",
                    "type": "string"
                  },
                  "string": {
                    "description": "String_ is the value of a string type parameter.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "ref": {
          "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
          "type": "string"
        },
        "repoURL": {
          "type": "string",
          "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
        },
        "targetRevision": {
          "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
          "type": "string"
        }
      }
    },
    "sources": {
      "type": "array",
      "title": "Sources overrides the source definition set in the application.\nThis is typically set in a Rollback operation and is nil during a Sync operation",
      "items": {
        "type": "object",
        "title": "ApplicationSource contains all required information about the source of an application",
        "properties": {
          "chart": {
            "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
            "type": "string"
          },
          "directory": {
            "type": "object",
            "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
            "properties": {
              "exclude": {
                "type": "string",
                "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
              },
              "include": {
                "type": "string",
                "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
              },
              "jsonnet": {
                "type": "object",
                "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                "properties": {
                  "extVars": {
                    "type": "array",
                    "title": "ExtVars is a list of Jsonnet External Variables",
                    "items": {
                      "type": "object",
                      "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                      "properties": {
                        "code": {
                          "type": "boolean"
                        },
                        "name": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "libs": {
                    "type": "array",
                    "title": "Additional library search dirs",
                    "items": {
                      "type": "string"
                    }
                  },
                  "tlas": {
                    "type": "array",
                    "title": "TLAS is a list of Jsonnet Top-level Arguments",
                    "items": {
                      "type": "object",
                      "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                      "properties": {
                        "code": {
                          "type": "boolean"
                        },
                        "name": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "recurse": {
                "type": "boolean",
                "title": "Recurse specifies whether to scan a directory recursively for manifests"
              }
            }
          },
          "helm": {
            "type": "object",
            "title": "ApplicationSourceHelm holds helm specific options",
            "properties": {
              "fileParameters": {
                "type": "array",
                "title": "FileParameters are file parameters to the helm template",
                "items": {
                  "type": "object",
                  "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                  "properties": {
                    "name": {
                      "type": "string",
                      "title": "Name is the name of the Helm parameter"
                    },
                    "path": {
                      "type": "string",
                      "title": "Path is the path to the file containing the values for the Helm parameter"
                    }
                  }
                }
              },
              "ignoreMissingValueFiles": {
                "type": "boolean",
                "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
              },
              "parameters": {
                "type": "array",
                "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                "items": {
                  "type": "object",
                  "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                  "properties": {
                    "forceString": {
                      "type": "boolean",
                      "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                    },
                    "name": {
                      "type": "string",
                      "title": "Name is the name of the Helm parameter"
                    },
                    "value": {
                      "type": "string",
                      "title": "Value is the value for the Helm parameter"
                    }
                  }
                }
              },
              "passCredentials": {
                "type": "boolean",
                "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
              },
              "releaseName": {
                "type": "string",
                "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
              },
              "skipCrds": {
                "type": "boolean",
                "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
              },
              "valueFiles": {
                "type": "array",
                "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                "items": {
                  "type": "string"
                }
              },
              "values": {
                "type": "string",
                "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
              },
              "version": {
                "type": "string",
                "title": "Version is the Helm version to use for templating (\"3\")"
              }
            }
          },
          "kustomize": {
            "type": "object",
            "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
            "properties": {
              "commonAnnotations": {
                "type": "object",
                "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "commonAnnotationsEnvsubst": {
                "type": "boolean",
                "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
              },
              "commonLabels": {
                "type": "object",
                "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "forceCommonAnnotations": {
                "type": "boolean",
                "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
              },
              "forceCommonLabels": {
                "type": "boolean",
                "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
              },
              "images": {
                "type": "array",
                "title": "Images is a list of Kustomize image override specifications",
                "items": {
                  "type": "string"
                }
              },
              "namePrefix": {
                "type": "string",
                "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
              },
              "nameSuffix": {
                "type": "string",
                "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
              },
              "namespace": {
                "type": "string",
                "title": "Namespace sets the namespace that Kustomize adds to all resources"
              },
              "replicas": {
                "type": "array",
                "title": "Replicas is a list of Kustomize Replicas override specifications",
                "items": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                      "type": "object",
                      "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                      "properties": {
                        "intVal": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "strVal": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "format": "int64"
                        }
                      }
                    },
                    "name": {
                      "type": "string",
                      "title": "Name of Deployment or StatefulSet"
                    }
                  }
                }
              },
              "version": {
                "type": "string",
                "title": "Version controls which version of Kustomize to use for rendering manifests"
              }
            }
          },
          "path": {
            "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
            "type": "string"
          },
          "plugin": {
            "type": "object",
            "title": "ApplicationSourcePlugin holds options specific to config management plugins",
            "properties": {
              "env": {
                "type": "array",
                "items": {
                  "type": "object",
                  "title": "EnvEntry represents an entry in the application's environment",
                  "properties": {
                    "name": {
                      "type": "string",
                      "title": "Name is the name of the variable, usually expressed in uppercase"
                    },
                    "value": {
                      "type": "string",
                      "title": "Value is the value of the variable"
                    }
                  }
                }
              },
              "name": {
                "type": "string"
              },
              "parameters": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "array": {
                      "description": "Array is the value of an array type parameter.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "map": {
                      "description": "Map is the value of a map type parameter.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "name": {
                      "description": "Name is the name identifying a parameter.",
                      "type": "string"
                    },
                    "string": {
                      "description": "String_ is the value of a string type parameter.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "ref": {
            "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
            "type": "string"
          },
          "repoURL": {
            "type": "string",
            "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
          },
          "targetRevision": {
            "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
            "type": "string"
          }
        }
      }
    },
    "syncOptions": {
      "type": "array",
      "title": "SyncOptions provide per-sync sync-options, e.g. Validate=false",
      "items": {
        "type": "string"
      }
    },
    "syncStrategy": {
      "type": "object",
      "title": "SyncStrategy controls the manner in which a sync is performed",
      "properties": {
        "apply": {
          "type": "object",
          "title": "SyncStrategyApply uses `kubectl apply` to perform the apply",
          "properties": {
            "force": {
              "description": "Force indicates whether or not to supply the --force flag to `kubectl apply`.\nThe --force flag deletes and re-create the resource, when PATCH encounters conflict and has\nretried for 5 times.",
              "type": "boolean"
            }
          }
        },
        "hook": {
          "description": "SyncStrategyHook will perform a sync using hooks annotations.\nIf no hook annotation is specified falls back to `kubectl apply`.",
          "type": "object",
          "properties": {
            "syncStrategyApply": {
              "type": "object",
              "title": "SyncStrategyApply uses `kubectl apply` to perform the apply",
              "properties": {
                "force": {
                  "description": "Force indicates whether or not to supply the --force flag to `kubectl apply`.\nThe --force flag deletes and re-create the resource, when PATCH encounters conflict and has\nretried for 5 times.",
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    }
  },
  "$schema": "http://json-schema.org/schema#"
}