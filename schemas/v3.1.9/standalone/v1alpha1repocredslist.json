{
  "description": "RepositoryList is a collection of Repositories.",
  "type": "object",
  "properties": {
    "items": {
      "type": "array",
      "items": {
        "type": "object",
        "title": "RepoCreds holds the definition for repository credentials",
        "properties": {
          "bearerToken": {
            "type": "string",
            "title": "BearerToken contains the bearer token used for Git BitBucket Data Center auth at the repo server"
          },
          "enableOCI": {
            "type": "boolean",
            "title": "EnableOCI specifies whether helm-oci support should be enabled for this repo"
          },
          "forceHttpBasicAuth": {
            "type": "boolean",
            "title": "ForceHttpBasicAuth specifies whether Argo CD should attempt to force basic auth for HTTP connections"
          },
          "gcpServiceAccountKey": {
            "type": "string",
            "title": "GCPServiceAccountKey specifies the service account key in JSON format to be used for getting credentials to Google Cloud Source repos"
          },
          "githubAppEnterpriseBaseUrl": {
            "type": "string",
            "title": "GithubAppEnterpriseBaseURL specifies the GitHub API URL for GitHub app authentication. If empty will default to https://api.github.com"
          },
          "githubAppID": {
            "type": "integer",
            "format": "int64",
            "title": "GithubAppId specifies the Github App ID of the app used to access the repo for GitHub app authentication"
          },
          "githubAppInstallationID": {
            "type": "integer",
            "format": "int64",
            "title": "GithubAppInstallationId specifies the ID of the installed GitHub App for GitHub app authentication"
          },
          "githubAppPrivateKey": {
            "type": "string",
            "title": "GithubAppPrivateKey specifies the private key PEM data for authentication via GitHub app"
          },
          "insecureOCIForceHttp": {
            "description": "InsecureOCIForceHttp specifies whether the connection to the repository uses TLS at _all_. If true, no TLS. This flag is applicable for OCI repos only.",
            "type": "boolean"
          },
          "noProxy": {
            "type": "string",
            "title": "NoProxy specifies a list of targets where the proxy isn't used, applies only in cases where the proxy is applied"
          },
          "password": {
            "type": "string",
            "title": "Password for authenticating at the repo server"
          },
          "proxy": {
            "type": "string",
            "title": "Proxy specifies the HTTP/HTTPS proxy used to access repos at the repo server"
          },
          "sshPrivateKey": {
            "type": "string",
            "title": "SSHPrivateKey contains the private key data for authenticating at the repo server using SSH (only Git repos)"
          },
          "tlsClientCertData": {
            "type": "string",
            "title": "TLSClientCertData specifies the TLS client cert data for authenticating at the repo server"
          },
          "tlsClientCertKey": {
            "type": "string",
            "title": "TLSClientCertKey specifies the TLS client cert key for authenticating at the repo server"
          },
          "type": {
            "description": "Type specifies the type of the repoCreds. Can be either \"git\" or \"helm. \"git\" is assumed if empty or absent.",
            "type": "string"
          },
          "url": {
            "type": "string",
            "title": "URL is the URL to which these credentials match"
          },
          "useAzureWorkloadIdentity": {
            "type": "boolean",
            "title": "UseAzureWorkloadIdentity specifies whether to use Azure Workload Identity for authentication"
          },
          "username": {
            "type": "string",
            "title": "Username for authenticating at the repo server"
          }
        }
      }
    },
    "metadata": {
      "description": "ListMeta describes metadata that synthetic resources must have, including lists and\nvarious status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
      "type": "object",
      "properties": {
        "continue": {
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that\nthe server has more data available. The value is opaque and may be used to issue another request\nto the endpoint that served this list to retrieve the next set of available objects. Continuing a\nconsistent list may not be possible if the server configuration has changed or more than a few\nminutes have passed. The resourceVersion field returned when using this continue value will be\nidentical to the value in the first response, unless you have received this token from an error\nmessage.",
          "type": "string"
        },
        "remainingItemCount": {
          "type": "integer",
          "format": "int64",
          "title": "remainingItemCount is the number of subsequent items in the list which are not included in this\nlist response. If the list request contained label or field selectors, then the number of\nremaining items is unknown and the field will be left unset and omitted during serialization.\nIf the list is complete (either because it is not chunking or because this is the last chunk),\nthen there are no more remaining items and this field will be left unset and omitted during\nserialization.\nServers older than v1.15 do not set this field.\nThe intended use of the remainingItemCount is *estimating* the size of a collection. Clients\nshould not rely on the remainingItemCount to be set or to be exact.\n+optional"
        },
        "resourceVersion": {
          "type": "string",
          "title": "String that identifies the server's internal version of this object that\ncan be used by clients to determine when objects have changed.\nValue must be treated as opaque by clients and passed unmodified back to the server.\nPopulated by the system.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional"
        },
        "selfLink": {
          "type": "string",
          "title": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.\n+optional"
        }
      }
    }
  },
  "$schema": "http://json-schema.org/schema#"
}