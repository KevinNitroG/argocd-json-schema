{
  "type": "object",
  "properties": {
    "clusters": {
      "type": "array",
      "items": {
        "type": "object",
        "title": "Cluster is the definition of a cluster resource",
        "properties": {
          "annotations": {
            "type": "object",
            "title": "Annotations for cluster secret metadata",
            "additionalProperties": {
              "type": "string"
            }
          },
          "clusterResources": {
            "description": "Indicates if cluster level resources should be managed. This setting is used only if cluster is connected in a namespaced mode.",
            "type": "boolean"
          },
          "config": {
            "description": "ClusterConfig is the configuration attributes. This structure is subset of the go-client\nrest.Config with annotations added for marshalling.",
            "type": "object",
            "properties": {
              "awsAuthConfig": {
                "type": "object",
                "title": "AWSAuthConfig is an AWS IAM authentication configuration",
                "properties": {
                  "clusterName": {
                    "type": "string",
                    "title": "ClusterName contains AWS cluster name"
                  },
                  "roleARN": {
                    "description": "RoleARN contains optional role ARN. If set then AWS IAM Authenticator assume a role to perform cluster operations instead of the default AWS credential provider chain.",
                    "type": "string"
                  }
                }
              },
              "bearerToken": {
                "description": "Server requires Bearer authentication. This client will not attempt to use\nrefresh tokens for an OAuth2 flow.\nTODO: demonstrate an OAuth2 compatible client.",
                "type": "string"
              },
              "execProviderConfig": {
                "type": "object",
                "title": "ExecProviderConfig is config used to call an external command to perform cluster authentication\nSee: https://godoc.org/k8s.io/client-go/tools/clientcmd/api#ExecConfig",
                "properties": {
                  "apiVersion": {
                    "type": "string",
                    "title": "Preferred input version of the ExecInfo"
                  },
                  "args": {
                    "type": "array",
                    "title": "Arguments to pass to the command when executing it",
                    "items": {
                      "type": "string"
                    }
                  },
                  "command": {
                    "type": "string",
                    "title": "Command to execute"
                  },
                  "env": {
                    "type": "object",
                    "title": "Env defines additional environment variables to expose to the process",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "installHint": {
                    "type": "string",
                    "title": "This text is shown to the user when the executable doesn't seem to be present"
                  }
                }
              },
              "password": {
                "type": "string"
              },
              "tlsClientConfig": {
                "type": "object",
                "title": "TLSClientConfig contains settings to enable transport layer security",
                "properties": {
                  "caData": {
                    "type": "string",
                    "format": "byte",
                    "title": "CAData holds PEM-encoded bytes (typically read from a root certificates bundle).\nCAData takes precedence over CAFile"
                  },
                  "certData": {
                    "type": "string",
                    "format": "byte",
                    "title": "CertData holds PEM-encoded bytes (typically read from a client certificate file).\nCertData takes precedence over CertFile"
                  },
                  "insecure": {
                    "description": "Insecure specifies that the server should be accessed without verifying the TLS certificate. For testing only.",
                    "type": "boolean"
                  },
                  "keyData": {
                    "type": "string",
                    "format": "byte",
                    "title": "KeyData holds PEM-encoded bytes (typically read from a client certificate key file).\nKeyData takes precedence over KeyFile"
                  },
                  "serverName": {
                    "description": "ServerName is passed to the server for SNI and is used in the client to check server\ncertificates against. If ServerName is empty, the hostname used to contact the\nserver is used.",
                    "type": "string"
                  }
                }
              },
              "username": {
                "type": "string",
                "title": "Server requires Basic authentication"
              }
            }
          },
          "connectionState": {
            "type": "object",
            "title": "ConnectionState contains information about remote resource connection state, currently used for clusters and repositories",
            "properties": {
              "attemptedAt": {
                "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false",
                "type": "object",
                "properties": {
                  "nanos": {
                    "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "seconds": {
                    "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
                    "type": "string",
                    "format": "int64"
                  }
                }
              },
              "message": {
                "type": "string",
                "title": "Message contains human readable information about the connection status"
              },
              "status": {
                "type": "string",
                "title": "Status contains the current status indicator for the connection"
              }
            }
          },
          "info": {
            "type": "object",
            "title": "ClusterInfo contains information about the cluster",
            "properties": {
              "apiVersions": {
                "type": "array",
                "title": "APIVersions contains list of API versions supported by the cluster",
                "items": {
                  "type": "string"
                }
              },
              "applicationsCount": {
                "type": "string",
                "format": "int64",
                "title": "ApplicationsCount is the number of applications managed by Argo CD on the cluster"
              },
              "cacheInfo": {
                "type": "object",
                "title": "ClusterCacheInfo contains information about the cluster cache",
                "properties": {
                  "apisCount": {
                    "type": "string",
                    "format": "int64",
                    "title": "APIsCount holds number of observed Kubernetes API count"
                  },
                  "lastCacheSyncTime": {
                    "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false",
                    "type": "object",
                    "properties": {
                      "nanos": {
                        "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "seconds": {
                        "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
                        "type": "string",
                        "format": "int64"
                      }
                    }
                  },
                  "resourcesCount": {
                    "type": "string",
                    "format": "int64",
                    "title": "ResourcesCount holds number of observed Kubernetes resources"
                  }
                }
              },
              "connectionState": {
                "type": "object",
                "title": "ConnectionState contains information about remote resource connection state, currently used for clusters and repositories",
                "properties": {
                  "attemptedAt": {
                    "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false",
                    "type": "object",
                    "properties": {
                      "nanos": {
                        "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "seconds": {
                        "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
                        "type": "string",
                        "format": "int64"
                      }
                    }
                  },
                  "message": {
                    "type": "string",
                    "title": "Message contains human readable information about the connection status"
                  },
                  "status": {
                    "type": "string",
                    "title": "Status contains the current status indicator for the connection"
                  }
                }
              },
              "serverVersion": {
                "type": "string",
                "title": "ServerVersion contains information about the Kubernetes version of the cluster"
              }
            }
          },
          "labels": {
            "type": "object",
            "title": "Labels for cluster secret metadata",
            "additionalProperties": {
              "type": "string"
            }
          },
          "name": {
            "type": "string",
            "title": "Name of the cluster. If omitted, will use the server address"
          },
          "namespaces": {
            "description": "Holds list of namespaces which are accessible in that cluster. Cluster level resources will be ignored if namespace list is not empty.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "project": {
            "type": "string",
            "title": "Reference between project and cluster that allow you automatically to be added as item inside Destinations project entity"
          },
          "refreshRequestedAt": {
            "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false",
            "type": "object",
            "properties": {
              "nanos": {
                "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context.",
                "type": "integer",
                "format": "int32"
              },
              "seconds": {
                "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
                "type": "string",
                "format": "int64"
              }
            }
          },
          "server": {
            "type": "string",
            "title": "Server is the API server URL of the Kubernetes cluster"
          },
          "serverVersion": {
            "type": "string",
            "title": "DEPRECATED: use Info.ServerVersion field instead.\nThe server version"
          },
          "shard": {
            "description": "Shard contains optional shard number. Calculated on the fly by the application controller if not specified.",
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "globalProjects": {
      "type": "array",
      "items": {
        "type": "object",
        "title": "AppProject provides a logical grouping of applications, providing controls for:\n* where the apps may deploy to (cluster whitelist)\n* what may be deployed (repository whitelist, resource whitelist/blacklist)\n* who can access these applications (roles, OIDC group claims bindings)\n* and what they can do (RBAC policies)\n* automation access to these roles (JWT tokens)\n+genclient\n+genclient:noStatus\n+k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n+kubebuilder:resource:path=appprojects,shortName=appproj;appprojs",
        "properties": {
          "metadata": {
            "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects\nusers must create.",
            "type": "object",
            "properties": {
              "annotations": {
                "type": "object",
                "title": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "clusterName": {
                "description": "Deprecated: ClusterName is a legacy field that was always cleared by\nthe system and never used; it will be removed completely in 1.25.\n\nThe name in the go struct is changed to help clients detect\naccidental use.\n\n+optional",
                "type": "string"
              },
              "creationTimestamp": {
                "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false",
                "type": "object",
                "properties": {
                  "nanos": {
                    "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "seconds": {
                    "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
                    "type": "string",
                    "format": "int64"
                  }
                }
              },
              "deletionGracePeriodSeconds": {
                "type": "string",
                "format": "int64",
                "title": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional"
              },
              "deletionTimestamp": {
                "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false",
                "type": "object",
                "properties": {
                  "nanos": {
                    "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "seconds": {
                    "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
                    "type": "string",
                    "format": "int64"
                  }
                }
              },
              "finalizers": {
                "type": "array",
                "title": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge",
                "items": {
                  "type": "string"
                }
              },
              "generateName": {
                "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional",
                "type": "string"
              },
              "generation": {
                "type": "string",
                "format": "int64",
                "title": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional"
              },
              "labels": {
                "type": "object",
                "title": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "managedFields": {
                "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional",
                "type": "array",
                "items": {
                  "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource\nthat the fieldset applies to.",
                  "type": "object",
                  "properties": {
                    "apiVersion": {
                      "description": "APIVersion defines the version of this resource that this field set\napplies to. The format is \"group/version\" just like the top-level\nAPIVersion field. It is necessary to track the version of a field\nset because it cannot be automatically converted.",
                      "type": "string"
                    },
                    "fieldsType": {
                      "type": "string",
                      "title": "FieldsType is the discriminator for the different fields format and version.\nThere is currently only one possible value: \"FieldsV1\""
                    },
                    "fieldsV1": {
                      "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set,\nor a string representing a sub-field or item. The string will follow one of these four formats:\n'f:<name>', where <name> is the name of a field in a struct, or key in a map\n'v:<value>', where <value> is the exact json formatted value of a list item\n'i:<index>', where <index> is position of a item in a list\n'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values\nIf a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff\n+protobuf.options.(gogoproto.goproto_stringer)=false",
                      "type": "object",
                      "properties": {
                        "Raw": {
                          "description": "Raw is the underlying serialization of this object.",
                          "type": "string",
                          "format": "byte"
                        }
                      }
                    },
                    "manager": {
                      "description": "Manager is an identifier of the workflow managing these fields.",
                      "type": "string"
                    },
                    "operation": {
                      "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created.\nThe only valid values for this field are 'Apply' and 'Update'.",
                      "type": "string"
                    },
                    "subresource": {
                      "description": "Subresource is the name of the subresource used to update that object, or\nempty string if the object was updated through the main resource. The\nvalue of this field is used to distinguish between managers, even if they\nshare the same name. For example, a status update will be distinct from a\nregular update using the same manager name.\nNote that the APIVersion field is not related to the Subresource field and\nit always corresponds to the version of the main resource.",
                      "type": "string"
                    },
                    "time": {
                      "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false",
                      "type": "object",
                      "properties": {
                        "nanos": {
                          "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "seconds": {
                          "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
                          "type": "string",
                          "format": "int64"
                        }
                      }
                    }
                  }
                }
              },
              "name": {
                "type": "string",
                "title": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional"
              },
              "namespace": {
                "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
                "type": "string"
              },
              "ownerReferences": {
                "type": "array",
                "title": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                "items": {
                  "type": "object",
                  "title": "OwnerReference contains enough information to let you identify an owning\nobject. An owning object must be in the same namespace as the dependent, or\nbe cluster-scoped, so there is no namespace field.\n+structType=atomic",
                  "properties": {
                    "apiVersion": {
                      "description": "API version of the referent.",
                      "type": "string"
                    },
                    "blockOwnerDeletion": {
                      "type": "boolean",
                      "title": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nSee https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion\nfor how the garbage collector interacts with this field and enforces the foreground deletion.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.\n+optional"
                    },
                    "controller": {
                      "type": "boolean",
                      "title": "If true, this reference points to the managing controller.\n+optional"
                    },
                    "kind": {
                      "type": "string",
                      "title": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                    },
                    "name": {
                      "type": "string",
                      "title": "Name of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names"
                    },
                    "uid": {
                      "type": "string",
                      "title": "UID of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids"
                    }
                  }
                }
              },
              "resourceVersion": {
                "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
                "type": "string"
              },
              "selfLink": {
                "type": "string",
                "title": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.\n+optional"
              },
              "uid": {
                "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                "type": "string"
              }
            }
          },
          "spec": {
            "type": "object",
            "title": "AppProjectSpec is the specification of an AppProject",
            "properties": {
              "clusterResourceBlacklist": {
                "type": "array",
                "title": "ClusterResourceBlacklist contains list of blacklisted cluster level resources",
                "items": {
                  "description": "+protobuf.options.(gogoproto.goproto_stringer)=false",
                  "type": "object",
                  "title": "GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying\nconcepts during lookup stages without having partially valid types",
                  "properties": {
                    "group": {
                      "type": "string"
                    },
                    "kind": {
                      "type": "string"
                    }
                  }
                }
              },
              "clusterResourceWhitelist": {
                "type": "array",
                "title": "ClusterResourceWhitelist contains list of whitelisted cluster level resources",
                "items": {
                  "description": "+protobuf.options.(gogoproto.goproto_stringer)=false",
                  "type": "object",
                  "title": "GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying\nconcepts during lookup stages without having partially valid types",
                  "properties": {
                    "group": {
                      "type": "string"
                    },
                    "kind": {
                      "type": "string"
                    }
                  }
                }
              },
              "description": {
                "type": "string",
                "title": "Description contains optional project description"
              },
              "destinations": {
                "type": "array",
                "title": "Destinations contains list of destinations available for deployment",
                "items": {
                  "type": "object",
                  "title": "ApplicationDestination holds information about the application's destination",
                  "properties": {
                    "name": {
                      "type": "string",
                      "title": "Name is an alternate way of specifying the target cluster by its symbolic name"
                    },
                    "namespace": {
                      "type": "string",
                      "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                    },
                    "server": {
                      "type": "string",
                      "title": "Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API"
                    }
                  }
                }
              },
              "namespaceResourceBlacklist": {
                "type": "array",
                "title": "NamespaceResourceBlacklist contains list of blacklisted namespace level resources",
                "items": {
                  "description": "+protobuf.options.(gogoproto.goproto_stringer)=false",
                  "type": "object",
                  "title": "GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying\nconcepts during lookup stages without having partially valid types",
                  "properties": {
                    "group": {
                      "type": "string"
                    },
                    "kind": {
                      "type": "string"
                    }
                  }
                }
              },
              "namespaceResourceWhitelist": {
                "type": "array",
                "title": "NamespaceResourceWhitelist contains list of whitelisted namespace level resources",
                "items": {
                  "description": "+protobuf.options.(gogoproto.goproto_stringer)=false",
                  "type": "object",
                  "title": "GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying\nconcepts during lookup stages without having partially valid types",
                  "properties": {
                    "group": {
                      "type": "string"
                    },
                    "kind": {
                      "type": "string"
                    }
                  }
                }
              },
              "orphanedResources": {
                "type": "object",
                "title": "OrphanedResourcesMonitorSettings holds settings of orphaned resources monitoring",
                "properties": {
                  "ignore": {
                    "type": "array",
                    "title": "Ignore contains a list of resources that are to be excluded from orphaned resources monitoring",
                    "items": {
                      "type": "object",
                      "title": "OrphanedResourceKey is a reference to a resource to be ignored from",
                      "properties": {
                        "group": {
                          "type": "string"
                        },
                        "kind": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "warn": {
                    "type": "boolean",
                    "title": "Warn indicates if warning condition should be created for apps which have orphaned resources"
                  }
                }
              },
              "permitOnlyProjectScopedClusters": {
                "type": "boolean",
                "title": "PermitOnlyProjectScopedClusters determines whether destinations can only reference clusters which are project-scoped"
              },
              "roles": {
                "type": "array",
                "title": "Roles are user defined RBAC roles associated with this project",
                "items": {
                  "type": "object",
                  "title": "ProjectRole represents a role that has access to a project",
                  "properties": {
                    "description": {
                      "type": "string",
                      "title": "Description is a description of the role"
                    },
                    "groups": {
                      "type": "array",
                      "title": "Groups are a list of OIDC group claims bound to this role",
                      "items": {
                        "type": "string"
                      }
                    },
                    "jwtTokens": {
                      "type": "array",
                      "title": "JWTTokens are a list of generated JWT tokens bound to this role",
                      "items": {
                        "type": "object",
                        "title": "JWTToken holds the issuedAt and expiresAt values of a token",
                        "properties": {
                          "exp": {
                            "type": "string",
                            "format": "int64"
                          },
                          "iat": {
                            "type": "string",
                            "format": "int64"
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "name": {
                      "type": "string",
                      "title": "Name is a name for this role"
                    },
                    "policies": {
                      "type": "array",
                      "title": "Policies Stores a list of casbin formatted strings that define access policies for the role in the project",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "signatureKeys": {
                "type": "array",
                "title": "SignatureKeys contains a list of PGP key IDs that commits in Git must be signed with in order to be allowed for sync",
                "items": {
                  "type": "object",
                  "title": "SignatureKey is the specification of a key required to verify commit signatures with",
                  "properties": {
                    "keyID": {
                      "type": "string",
                      "title": "The ID of the key in hexadecimal notation"
                    }
                  }
                }
              },
              "sourceNamespaces": {
                "type": "array",
                "title": "SourceNamespaces defines the namespaces application resources are allowed to be created in",
                "items": {
                  "type": "string"
                }
              },
              "sourceRepos": {
                "type": "array",
                "title": "SourceRepos contains list of repository URLs which can be used for deployment",
                "items": {
                  "type": "string"
                }
              },
              "syncWindows": {
                "type": "array",
                "title": "SyncWindows controls when syncs can be run for apps in this project",
                "items": {
                  "type": "object",
                  "title": "SyncWindow contains the kind, time, duration and attributes that are used to assign the syncWindows to apps",
                  "properties": {
                    "applications": {
                      "type": "array",
                      "title": "Applications contains a list of applications that the window will apply to",
                      "items": {
                        "type": "string"
                      }
                    },
                    "clusters": {
                      "type": "array",
                      "title": "Clusters contains a list of clusters that the window will apply to",
                      "items": {
                        "type": "string"
                      }
                    },
                    "duration": {
                      "type": "string",
                      "title": "Duration is the amount of time the sync window will be open"
                    },
                    "kind": {
                      "type": "string",
                      "title": "Kind defines if the window allows or blocks syncs"
                    },
                    "manualSync": {
                      "type": "boolean",
                      "title": "ManualSync enables manual syncs when they would otherwise be blocked"
                    },
                    "namespaces": {
                      "type": "array",
                      "title": "Namespaces contains a list of namespaces that the window will apply to",
                      "items": {
                        "type": "string"
                      }
                    },
                    "schedule": {
                      "type": "string",
                      "title": "Schedule is the time the window will begin, specified in cron format"
                    },
                    "timeZone": {
                      "type": "string",
                      "title": "TimeZone of the sync that will be applied to the schedule"
                    }
                  }
                }
              }
            }
          },
          "status": {
            "type": "object",
            "title": "AppProjectStatus contains status information for AppProject CRs",
            "properties": {
              "jwtTokensByRole": {
                "type": "object",
                "title": "JWTTokensByRole contains a list of JWT tokens issued for a given role",
                "additionalProperties": {
                  "type": "object",
                  "title": "JWTTokens represents a list of JWT tokens",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "JWTToken holds the issuedAt and expiresAt values of a token",
                        "properties": {
                          "exp": {
                            "type": "string",
                            "format": "int64"
                          },
                          "iat": {
                            "type": "string",
                            "format": "int64"
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "project": {
      "type": "object",
      "title": "AppProject provides a logical grouping of applications, providing controls for:\n* where the apps may deploy to (cluster whitelist)\n* what may be deployed (repository whitelist, resource whitelist/blacklist)\n* who can access these applications (roles, OIDC group claims bindings)\n* and what they can do (RBAC policies)\n* automation access to these roles (JWT tokens)\n+genclient\n+genclient:noStatus\n+k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n+kubebuilder:resource:path=appprojects,shortName=appproj;appprojs",
      "properties": {
        "metadata": {
          "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects\nusers must create.",
          "type": "object",
          "properties": {
            "annotations": {
              "type": "object",
              "title": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
              "additionalProperties": {
                "type": "string"
              }
            },
            "clusterName": {
              "description": "Deprecated: ClusterName is a legacy field that was always cleared by\nthe system and never used; it will be removed completely in 1.25.\n\nThe name in the go struct is changed to help clients detect\naccidental use.\n\n+optional",
              "type": "string"
            },
            "creationTimestamp": {
              "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false",
              "type": "object",
              "properties": {
                "nanos": {
                  "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context.",
                  "type": "integer",
                  "format": "int32"
                },
                "seconds": {
                  "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
                  "type": "string",
                  "format": "int64"
                }
              }
            },
            "deletionGracePeriodSeconds": {
              "type": "string",
              "format": "int64",
              "title": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional"
            },
            "deletionTimestamp": {
              "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false",
              "type": "object",
              "properties": {
                "nanos": {
                  "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context.",
                  "type": "integer",
                  "format": "int32"
                },
                "seconds": {
                  "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
                  "type": "string",
                  "format": "int64"
                }
              }
            },
            "finalizers": {
              "type": "array",
              "title": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge",
              "items": {
                "type": "string"
              }
            },
            "generateName": {
              "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional",
              "type": "string"
            },
            "generation": {
              "type": "string",
              "format": "int64",
              "title": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional"
            },
            "labels": {
              "type": "object",
              "title": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
              "additionalProperties": {
                "type": "string"
              }
            },
            "managedFields": {
              "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional",
              "type": "array",
              "items": {
                "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource\nthat the fieldset applies to.",
                "type": "object",
                "properties": {
                  "apiVersion": {
                    "description": "APIVersion defines the version of this resource that this field set\napplies to. The format is \"group/version\" just like the top-level\nAPIVersion field. It is necessary to track the version of a field\nset because it cannot be automatically converted.",
                    "type": "string"
                  },
                  "fieldsType": {
                    "type": "string",
                    "title": "FieldsType is the discriminator for the different fields format and version.\nThere is currently only one possible value: \"FieldsV1\""
                  },
                  "fieldsV1": {
                    "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set,\nor a string representing a sub-field or item. The string will follow one of these four formats:\n'f:<name>', where <name> is the name of a field in a struct, or key in a map\n'v:<value>', where <value> is the exact json formatted value of a list item\n'i:<index>', where <index> is position of a item in a list\n'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values\nIf a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff\n+protobuf.options.(gogoproto.goproto_stringer)=false",
                    "type": "object",
                    "properties": {
                      "Raw": {
                        "description": "Raw is the underlying serialization of this object.",
                        "type": "string",
                        "format": "byte"
                      }
                    }
                  },
                  "manager": {
                    "description": "Manager is an identifier of the workflow managing these fields.",
                    "type": "string"
                  },
                  "operation": {
                    "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created.\nThe only valid values for this field are 'Apply' and 'Update'.",
                    "type": "string"
                  },
                  "subresource": {
                    "description": "Subresource is the name of the subresource used to update that object, or\nempty string if the object was updated through the main resource. The\nvalue of this field is used to distinguish between managers, even if they\nshare the same name. For example, a status update will be distinct from a\nregular update using the same manager name.\nNote that the APIVersion field is not related to the Subresource field and\nit always corresponds to the version of the main resource.",
                    "type": "string"
                  },
                  "time": {
                    "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false",
                    "type": "object",
                    "properties": {
                      "nanos": {
                        "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "seconds": {
                        "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
                        "type": "string",
                        "format": "int64"
                      }
                    }
                  }
                }
              }
            },
            "name": {
              "type": "string",
              "title": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional"
            },
            "namespace": {
              "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
              "type": "string"
            },
            "ownerReferences": {
              "type": "array",
              "title": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
              "items": {
                "type": "object",
                "title": "OwnerReference contains enough information to let you identify an owning\nobject. An owning object must be in the same namespace as the dependent, or\nbe cluster-scoped, so there is no namespace field.\n+structType=atomic",
                "properties": {
                  "apiVersion": {
                    "description": "API version of the referent.",
                    "type": "string"
                  },
                  "blockOwnerDeletion": {
                    "type": "boolean",
                    "title": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nSee https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion\nfor how the garbage collector interacts with this field and enforces the foreground deletion.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.\n+optional"
                  },
                  "controller": {
                    "type": "boolean",
                    "title": "If true, this reference points to the managing controller.\n+optional"
                  },
                  "kind": {
                    "type": "string",
                    "title": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                  },
                  "name": {
                    "type": "string",
                    "title": "Name of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names"
                  },
                  "uid": {
                    "type": "string",
                    "title": "UID of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids"
                  }
                }
              }
            },
            "resourceVersion": {
              "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
              "type": "string"
            },
            "selfLink": {
              "type": "string",
              "title": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.\n+optional"
            },
            "uid": {
              "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
              "type": "string"
            }
          }
        },
        "spec": {
          "type": "object",
          "title": "AppProjectSpec is the specification of an AppProject",
          "properties": {
            "clusterResourceBlacklist": {
              "type": "array",
              "title": "ClusterResourceBlacklist contains list of blacklisted cluster level resources",
              "items": {
                "description": "+protobuf.options.(gogoproto.goproto_stringer)=false",
                "type": "object",
                "title": "GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying\nconcepts during lookup stages without having partially valid types",
                "properties": {
                  "group": {
                    "type": "string"
                  },
                  "kind": {
                    "type": "string"
                  }
                }
              }
            },
            "clusterResourceWhitelist": {
              "type": "array",
              "title": "ClusterResourceWhitelist contains list of whitelisted cluster level resources",
              "items": {
                "description": "+protobuf.options.(gogoproto.goproto_stringer)=false",
                "type": "object",
                "title": "GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying\nconcepts during lookup stages without having partially valid types",
                "properties": {
                  "group": {
                    "type": "string"
                  },
                  "kind": {
                    "type": "string"
                  }
                }
              }
            },
            "description": {
              "type": "string",
              "title": "Description contains optional project description"
            },
            "destinations": {
              "type": "array",
              "title": "Destinations contains list of destinations available for deployment",
              "items": {
                "type": "object",
                "title": "ApplicationDestination holds information about the application's destination",
                "properties": {
                  "name": {
                    "type": "string",
                    "title": "Name is an alternate way of specifying the target cluster by its symbolic name"
                  },
                  "namespace": {
                    "type": "string",
                    "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                  },
                  "server": {
                    "type": "string",
                    "title": "Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API"
                  }
                }
              }
            },
            "namespaceResourceBlacklist": {
              "type": "array",
              "title": "NamespaceResourceBlacklist contains list of blacklisted namespace level resources",
              "items": {
                "description": "+protobuf.options.(gogoproto.goproto_stringer)=false",
                "type": "object",
                "title": "GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying\nconcepts during lookup stages without having partially valid types",
                "properties": {
                  "group": {
                    "type": "string"
                  },
                  "kind": {
                    "type": "string"
                  }
                }
              }
            },
            "namespaceResourceWhitelist": {
              "type": "array",
              "title": "NamespaceResourceWhitelist contains list of whitelisted namespace level resources",
              "items": {
                "description": "+protobuf.options.(gogoproto.goproto_stringer)=false",
                "type": "object",
                "title": "GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying\nconcepts during lookup stages without having partially valid types",
                "properties": {
                  "group": {
                    "type": "string"
                  },
                  "kind": {
                    "type": "string"
                  }
                }
              }
            },
            "orphanedResources": {
              "type": "object",
              "title": "OrphanedResourcesMonitorSettings holds settings of orphaned resources monitoring",
              "properties": {
                "ignore": {
                  "type": "array",
                  "title": "Ignore contains a list of resources that are to be excluded from orphaned resources monitoring",
                  "items": {
                    "type": "object",
                    "title": "OrphanedResourceKey is a reference to a resource to be ignored from",
                    "properties": {
                      "group": {
                        "type": "string"
                      },
                      "kind": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                },
                "warn": {
                  "type": "boolean",
                  "title": "Warn indicates if warning condition should be created for apps which have orphaned resources"
                }
              }
            },
            "permitOnlyProjectScopedClusters": {
              "type": "boolean",
              "title": "PermitOnlyProjectScopedClusters determines whether destinations can only reference clusters which are project-scoped"
            },
            "roles": {
              "type": "array",
              "title": "Roles are user defined RBAC roles associated with this project",
              "items": {
                "type": "object",
                "title": "ProjectRole represents a role that has access to a project",
                "properties": {
                  "description": {
                    "type": "string",
                    "title": "Description is a description of the role"
                  },
                  "groups": {
                    "type": "array",
                    "title": "Groups are a list of OIDC group claims bound to this role",
                    "items": {
                      "type": "string"
                    }
                  },
                  "jwtTokens": {
                    "type": "array",
                    "title": "JWTTokens are a list of generated JWT tokens bound to this role",
                    "items": {
                      "type": "object",
                      "title": "JWTToken holds the issuedAt and expiresAt values of a token",
                      "properties": {
                        "exp": {
                          "type": "string",
                          "format": "int64"
                        },
                        "iat": {
                          "type": "string",
                          "format": "int64"
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "name": {
                    "type": "string",
                    "title": "Name is a name for this role"
                  },
                  "policies": {
                    "type": "array",
                    "title": "Policies Stores a list of casbin formatted strings that define access policies for the role in the project",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "signatureKeys": {
              "type": "array",
              "title": "SignatureKeys contains a list of PGP key IDs that commits in Git must be signed with in order to be allowed for sync",
              "items": {
                "type": "object",
                "title": "SignatureKey is the specification of a key required to verify commit signatures with",
                "properties": {
                  "keyID": {
                    "type": "string",
                    "title": "The ID of the key in hexadecimal notation"
                  }
                }
              }
            },
            "sourceNamespaces": {
              "type": "array",
              "title": "SourceNamespaces defines the namespaces application resources are allowed to be created in",
              "items": {
                "type": "string"
              }
            },
            "sourceRepos": {
              "type": "array",
              "title": "SourceRepos contains list of repository URLs which can be used for deployment",
              "items": {
                "type": "string"
              }
            },
            "syncWindows": {
              "type": "array",
              "title": "SyncWindows controls when syncs can be run for apps in this project",
              "items": {
                "type": "object",
                "title": "SyncWindow contains the kind, time, duration and attributes that are used to assign the syncWindows to apps",
                "properties": {
                  "applications": {
                    "type": "array",
                    "title": "Applications contains a list of applications that the window will apply to",
                    "items": {
                      "type": "string"
                    }
                  },
                  "clusters": {
                    "type": "array",
                    "title": "Clusters contains a list of clusters that the window will apply to",
                    "items": {
                      "type": "string"
                    }
                  },
                  "duration": {
                    "type": "string",
                    "title": "Duration is the amount of time the sync window will be open"
                  },
                  "kind": {
                    "type": "string",
                    "title": "Kind defines if the window allows or blocks syncs"
                  },
                  "manualSync": {
                    "type": "boolean",
                    "title": "ManualSync enables manual syncs when they would otherwise be blocked"
                  },
                  "namespaces": {
                    "type": "array",
                    "title": "Namespaces contains a list of namespaces that the window will apply to",
                    "items": {
                      "type": "string"
                    }
                  },
                  "schedule": {
                    "type": "string",
                    "title": "Schedule is the time the window will begin, specified in cron format"
                  },
                  "timeZone": {
                    "type": "string",
                    "title": "TimeZone of the sync that will be applied to the schedule"
                  }
                }
              }
            }
          }
        },
        "status": {
          "type": "object",
          "title": "AppProjectStatus contains status information for AppProject CRs",
          "properties": {
            "jwtTokensByRole": {
              "type": "object",
              "title": "JWTTokensByRole contains a list of JWT tokens issued for a given role",
              "additionalProperties": {
                "type": "object",
                "title": "JWTTokens represents a list of JWT tokens",
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "title": "JWTToken holds the issuedAt and expiresAt values of a token",
                      "properties": {
                        "exp": {
                          "type": "string",
                          "format": "int64"
                        },
                        "iat": {
                          "type": "string",
                          "format": "int64"
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "repositories": {
      "type": "array",
      "items": {
        "type": "object",
        "title": "Repository is a repository holding application configurations",
        "properties": {
          "connectionState": {
            "type": "object",
            "title": "ConnectionState contains information about remote resource connection state, currently used for clusters and repositories",
            "properties": {
              "attemptedAt": {
                "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false",
                "type": "object",
                "properties": {
                  "nanos": {
                    "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "seconds": {
                    "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
                    "type": "string",
                    "format": "int64"
                  }
                }
              },
              "message": {
                "type": "string",
                "title": "Message contains human readable information about the connection status"
              },
              "status": {
                "type": "string",
                "title": "Status contains the current status indicator for the connection"
              }
            }
          },
          "enableLfs": {
            "description": "EnableLFS specifies whether git-lfs support should be enabled for this repo. Only valid for Git repositories.",
            "type": "boolean"
          },
          "enableOCI": {
            "type": "boolean",
            "title": "EnableOCI specifies whether helm-oci support should be enabled for this repo"
          },
          "gcpServiceAccountKey": {
            "type": "string",
            "title": "GCPServiceAccountKey specifies the service account key in JSON format to be used for getting credentials to Google Cloud Source repos"
          },
          "githubAppEnterpriseBaseUrl": {
            "type": "string",
            "title": "GithubAppEnterpriseBaseURL specifies the base URL of GitHub Enterprise installation. If empty will default to https://api.github.com"
          },
          "githubAppID": {
            "type": "string",
            "format": "int64",
            "title": "GithubAppId specifies the ID of the GitHub app used to access the repo"
          },
          "githubAppInstallationID": {
            "type": "string",
            "format": "int64",
            "title": "GithubAppInstallationId specifies the installation ID of the GitHub App used to access the repo"
          },
          "githubAppPrivateKey": {
            "type": "string",
            "title": "Github App Private Key PEM data"
          },
          "inheritedCreds": {
            "type": "boolean",
            "title": "Whether credentials were inherited from a credential set"
          },
          "insecure": {
            "type": "boolean",
            "title": "Insecure specifies whether the connection to the repository ignores any errors when verifying TLS certificates or SSH host keys"
          },
          "insecureIgnoreHostKey": {
            "type": "boolean",
            "title": "InsecureIgnoreHostKey should not be used anymore, Insecure is favoured\nUsed only for Git repos"
          },
          "name": {
            "type": "string",
            "title": "Name specifies a name to be used for this repo. Only used with Helm repos"
          },
          "password": {
            "type": "string",
            "title": "Password contains the password or PAT used for authenticating at the remote repository"
          },
          "project": {
            "type": "string",
            "title": "Reference between project and repository that allow you automatically to be added as item inside SourceRepos project entity"
          },
          "proxy": {
            "type": "string",
            "title": "Proxy specifies the HTTP/HTTPS proxy used to access the repo"
          },
          "repo": {
            "type": "string",
            "title": "Repo contains the URL to the remote repository"
          },
          "sshPrivateKey": {
            "description": "SSHPrivateKey contains the PEM data for authenticating at the repo server. Only used with Git repos.",
            "type": "string"
          },
          "tlsClientCertData": {
            "type": "string",
            "title": "TLSClientCertData contains a certificate in PEM format for authenticating at the repo server"
          },
          "tlsClientCertKey": {
            "type": "string",
            "title": "TLSClientCertKey contains a private key in PEM format for authenticating at the repo server"
          },
          "type": {
            "description": "Type specifies the type of the repo. Can be either \"git\" or \"helm. \"git\" is assumed if empty or absent.",
            "type": "string"
          },
          "username": {
            "type": "string",
            "title": "Username contains the user name used for authenticating at the remote repository"
          }
        }
      }
    }
  },
  "$schema": "http://json-schema.org/schema#"
}