{
  "type": "object",
  "title": "ApplicationSetList contains a list of ApplicationSet\n+k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n+kubebuilder:object:root=true",
  "properties": {
    "items": {
      "type": "array",
      "items": {
        "type": "object",
        "title": "ApplicationSet is a set of Application resources\n+genclient\n+genclient:noStatus\n+k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n+kubebuilder:resource:path=applicationsets,shortName=appset;appsets\n+kubebuilder:subresource:status",
        "properties": {
          "metadata": {
            "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects\nusers must create.",
            "type": "object",
            "properties": {
              "annotations": {
                "type": "object",
                "title": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n+optional",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "creationTimestamp": {
                "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false",
                "type": "string",
                "format": "date-time"
              },
              "deletionGracePeriodSeconds": {
                "type": "integer",
                "format": "int64",
                "title": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional"
              },
              "deletionTimestamp": {
                "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false",
                "type": "string",
                "format": "date-time"
              },
              "finalizers": {
                "type": "array",
                "title": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge\n+listType=set",
                "items": {
                  "type": "string"
                }
              },
              "generateName": {
                "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional",
                "type": "string"
              },
              "generation": {
                "type": "integer",
                "format": "int64",
                "title": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional"
              },
              "labels": {
                "type": "object",
                "title": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n+optional",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "managedFields": {
                "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional\n+listType=atomic",
                "type": "array",
                "items": {
                  "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource\nthat the fieldset applies to.",
                  "type": "object",
                  "properties": {
                    "apiVersion": {
                      "description": "APIVersion defines the version of this resource that this field set\napplies to. The format is \"group/version\" just like the top-level\nAPIVersion field. It is necessary to track the version of a field\nset because it cannot be automatically converted.",
                      "type": "string"
                    },
                    "fieldsType": {
                      "type": "string",
                      "title": "FieldsType is the discriminator for the different fields format and version.\nThere is currently only one possible value: \"FieldsV1\""
                    },
                    "fieldsV1": {
                      "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set,\nor a string representing a sub-field or item. The string will follow one of these four formats:\n'f:<name>', where <name> is the name of a field in a struct, or key in a map\n'v:<value>', where <value> is the exact json formatted value of a list item\n'i:<index>', where <index> is position of a item in a list\n'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values\nIf a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff\n+protobuf.options.(gogoproto.goproto_stringer)=false",
                      "type": "object",
                      "properties": {
                        "Raw": {
                          "description": "Raw is the underlying serialization of this object.",
                          "type": "string",
                          "format": "byte"
                        }
                      },
                      "additionalProperties": false
                    },
                    "manager": {
                      "description": "Manager is an identifier of the workflow managing these fields.",
                      "type": "string"
                    },
                    "operation": {
                      "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created.\nThe only valid values for this field are 'Apply' and 'Update'.",
                      "type": "string"
                    },
                    "subresource": {
                      "description": "Subresource is the name of the subresource used to update that object, or\nempty string if the object was updated through the main resource. The\nvalue of this field is used to distinguish between managers, even if they\nshare the same name. For example, a status update will be distinct from a\nregular update using the same manager name.\nNote that the APIVersion field is not related to the Subresource field and\nit always corresponds to the version of the main resource.",
                      "type": "string"
                    },
                    "time": {
                      "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false",
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "name": {
                "type": "string",
                "title": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n+optional"
              },
              "namespace": {
                "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n+optional",
                "type": "string"
              },
              "ownerReferences": {
                "type": "array",
                "title": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge\n+listType=map\n+listMapKey=uid",
                "items": {
                  "type": "object",
                  "title": "OwnerReference contains enough information to let you identify an owning\nobject. An owning object must be in the same namespace as the dependent, or\nbe cluster-scoped, so there is no namespace field.\n+structType=atomic",
                  "properties": {
                    "apiVersion": {
                      "description": "API version of the referent.",
                      "type": "string"
                    },
                    "blockOwnerDeletion": {
                      "type": "boolean",
                      "title": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nSee https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion\nfor how the garbage collector interacts with this field and enforces the foreground deletion.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.\n+optional"
                    },
                    "controller": {
                      "type": "boolean",
                      "title": "If true, this reference points to the managing controller.\n+optional"
                    },
                    "kind": {
                      "type": "string",
                      "title": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                    },
                    "name": {
                      "type": "string",
                      "title": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names"
                    },
                    "uid": {
                      "type": "string",
                      "title": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "resourceVersion": {
                "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
                "type": "string"
              },
              "selfLink": {
                "type": "string",
                "title": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.\n+optional"
              },
              "uid": {
                "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n+optional",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "spec": {
            "description": "ApplicationSetSpec represents a class of application set state.",
            "type": "object",
            "properties": {
              "applyNestedSelectors": {
                "description": "ApplyNestedSelectors enables selectors defined within the generators of two level-nested matrix or merge generators\nDeprecated: This field is ignored, and the behavior is always enabled. The field will be removed in a future\nversion of the ApplicationSet CRD.",
                "type": "boolean"
              },
              "generators": {
                "type": "array",
                "items": {
                  "description": "ApplicationSetGenerator represents a generator at the top level of an ApplicationSet.",
                  "type": "object",
                  "properties": {
                    "clusterDecisionResource": {
                      "description": "DuckType defines a generator to match against clusters registered with ArgoCD.",
                      "type": "object",
                      "properties": {
                        "configMapRef": {
                          "type": "string",
                          "title": "ConfigMapRef is a ConfigMap with the duck type definitions needed to retrieve the data\n             this includes apiVersion(group/version), kind, matchKey and validation settings\nName is the resource name of the kind, group and version, defined in the ConfigMapRef\nRequeueAfterSeconds is how long before the duckType will be rechecked for a change"
                        },
                        "labelSelector": {
                          "type": "object",
                          "title": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.\n+structType=atomic",
                          "properties": {
                            "matchExpressions": {
                              "type": "array",
                              "title": "matchExpressions is a list of label selector requirements. The requirements are ANDed.\n+optional\n+listType=atomic",
                              "items": {
                                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "description": "key is the label key that the selector applies to.",
                                    "type": "string"
                                  },
                                  "operator": {
                                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                    "type": "string"
                                  },
                                  "values": {
                                    "type": "array",
                                    "title": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.\n+optional\n+listType=atomic",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "matchLabels": {
                              "type": "object",
                              "title": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n+optional",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          },
                          "additionalProperties": false
                        },
                        "name": {
                          "type": "string"
                        },
                        "requeueAfterSeconds": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "template": {
                          "type": "object",
                          "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
                          "properties": {
                            "metadata": {
                              "type": "object",
                              "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
                              "properties": {
                                "annotations": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "finalizers": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "labels": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "name": {
                                  "type": "string"
                                },
                                "namespace": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "spec": {
                              "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
                              "type": "object",
                              "properties": {
                                "destination": {
                                  "type": "object",
                                  "title": "ApplicationDestination holds information about the application's destination",
                                  "properties": {
                                    "name": {
                                      "description": "Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.",
                                      "type": "string"
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                                    },
                                    "server": {
                                      "description": "Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "ignoreDifferences": {
                                  "type": "array",
                                  "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                                  "items": {
                                    "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                                    "type": "object",
                                    "properties": {
                                      "group": {
                                        "type": "string"
                                      },
                                      "jqPathExpressions": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "jsonPointers": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "kind": {
                                        "type": "string"
                                      },
                                      "managedFieldsManagers": {
                                        "type": "array",
                                        "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "namespace": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "info": {
                                  "type": "array",
                                  "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "value": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "project": {
                                  "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                                  "type": "string"
                                },
                                "revisionHistoryLimit": {
                                  "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "source": {
                                  "type": "object",
                                  "title": "ApplicationSource contains all required information about the source of an application",
                                  "properties": {
                                    "chart": {
                                      "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                      "type": "string"
                                    },
                                    "directory": {
                                      "type": "object",
                                      "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                      "properties": {
                                        "exclude": {
                                          "type": "string",
                                          "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                        },
                                        "include": {
                                          "type": "string",
                                          "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                        },
                                        "jsonnet": {
                                          "type": "object",
                                          "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                          "properties": {
                                            "extVars": {
                                              "type": "array",
                                              "title": "ExtVars is a list of Jsonnet External Variables",
                                              "items": {
                                                "type": "object",
                                                "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                "properties": {
                                                  "code": {
                                                    "type": "boolean"
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "value": {
                                                    "type": "string"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "libs": {
                                              "type": "array",
                                              "title": "Additional library search dirs",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "tlas": {
                                              "type": "array",
                                              "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                              "items": {
                                                "type": "object",
                                                "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                "properties": {
                                                  "code": {
                                                    "type": "boolean"
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "value": {
                                                    "type": "string"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "recurse": {
                                          "type": "boolean",
                                          "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "helm": {
                                      "type": "object",
                                      "title": "ApplicationSourceHelm holds helm specific options",
                                      "properties": {
                                        "apiVersions": {
                                          "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "fileParameters": {
                                          "type": "array",
                                          "title": "FileParameters are file parameters to the helm template",
                                          "items": {
                                            "type": "object",
                                            "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "title": "Name is the name of the Helm parameter"
                                              },
                                              "path": {
                                                "type": "string",
                                                "title": "Path is the path to the file containing the values for the Helm parameter"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "ignoreMissingValueFiles": {
                                          "type": "boolean",
                                          "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                        },
                                        "kubeVersion": {
                                          "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                          "type": "string"
                                        },
                                        "namespace": {
                                          "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                          "type": "string"
                                        },
                                        "parameters": {
                                          "type": "array",
                                          "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                          "items": {
                                            "type": "object",
                                            "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                            "properties": {
                                              "forceString": {
                                                "type": "boolean",
                                                "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                              },
                                              "name": {
                                                "type": "string",
                                                "title": "Name is the name of the Helm parameter"
                                              },
                                              "value": {
                                                "type": "string",
                                                "title": "Value is the value for the Helm parameter"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "passCredentials": {
                                          "type": "boolean",
                                          "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                        },
                                        "releaseName": {
                                          "type": "string",
                                          "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                        },
                                        "skipCrds": {
                                          "type": "boolean",
                                          "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                        },
                                        "skipSchemaValidation": {
                                          "type": "boolean",
                                          "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                        },
                                        "skipTests": {
                                          "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                          "type": "boolean"
                                        },
                                        "valueFiles": {
                                          "type": "array",
                                          "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "values": {
                                          "type": "string",
                                          "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                        },
                                        "valuesObject": {
                                          "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                          "type": "object",
                                          "properties": {
                                            "raw": {
                                              "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                              "type": "string",
                                              "format": "byte"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "version": {
                                          "type": "string",
                                          "title": "Version is the Helm version to use for templating (\"3\")"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "kustomize": {
                                      "type": "object",
                                      "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                      "properties": {
                                        "apiVersions": {
                                          "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "commonAnnotations": {
                                          "type": "object",
                                          "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "commonAnnotationsEnvsubst": {
                                          "type": "boolean",
                                          "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                        },
                                        "commonLabels": {
                                          "type": "object",
                                          "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "components": {
                                          "type": "array",
                                          "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "forceCommonAnnotations": {
                                          "type": "boolean",
                                          "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                        },
                                        "forceCommonLabels": {
                                          "type": "boolean",
                                          "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                        },
                                        "ignoreMissingComponents": {
                                          "type": "boolean",
                                          "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                        },
                                        "images": {
                                          "type": "array",
                                          "title": "Images is a list of Kustomize image override specifications",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "kubeVersion": {
                                          "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                          "type": "string"
                                        },
                                        "labelIncludeTemplates": {
                                          "type": "boolean",
                                          "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                        },
                                        "labelWithoutSelector": {
                                          "type": "boolean",
                                          "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                        },
                                        "namePrefix": {
                                          "type": "string",
                                          "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                        },
                                        "nameSuffix": {
                                          "type": "string",
                                          "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                        },
                                        "namespace": {
                                          "type": "string",
                                          "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                        },
                                        "patches": {
                                          "type": "array",
                                          "title": "Patches is a list of Kustomize patches",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "options": {
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "boolean"
                                                }
                                              },
                                              "patch": {
                                                "type": "string"
                                              },
                                              "path": {
                                                "type": "string"
                                              },
                                              "target": {
                                                "type": "object",
                                                "properties": {
                                                  "annotationSelector": {
                                                    "type": "string"
                                                  },
                                                  "labelSelector": {
                                                    "type": "string"
                                                  },
                                                  "resId": {
                                                    "type": "object",
                                                    "properties": {
                                                      "gvk": {
                                                        "type": "object",
                                                        "properties": {
                                                          "group": {
                                                            "type": "string"
                                                          },
                                                          "kind": {
                                                            "type": "string"
                                                          },
                                                          "version": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      },
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "namespace": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "replicas": {
                                          "type": "array",
                                          "title": "Replicas is a list of Kustomize Replicas override specifications",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "count": {
                                                "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                "type": "object",
                                                "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                "properties": {
                                                  "intVal": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                  },
                                                  "strVal": {
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "name": {
                                                "type": "string",
                                                "title": "Name of Deployment or StatefulSet"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "version": {
                                          "type": "string",
                                          "title": "Version controls which version of Kustomize to use for rendering manifests"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "name": {
                                      "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                      "type": "string"
                                    },
                                    "plugin": {
                                      "type": "object",
                                      "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                      "properties": {
                                        "env": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "title": "EnvEntry represents an entry in the application's environment",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "title": "Name is the name of the variable, usually expressed in uppercase"
                                              },
                                              "value": {
                                                "type": "string",
                                                "title": "Value is the value of the variable"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "parameters": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "array": {
                                                "description": "Array is the value of an array type parameter.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "map": {
                                                "description": "Map is the value of a map type parameter.",
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              },
                                              "name": {
                                                "description": "Name is the name identifying a parameter.",
                                                "type": "string"
                                              },
                                              "string": {
                                                "description": "String_ is the value of a string type parameter.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "ref": {
                                      "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                      "type": "string"
                                    },
                                    "repoURL": {
                                      "type": "string",
                                      "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                    },
                                    "targetRevision": {
                                      "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "sourceHydrator": {
                                  "description": "SourceHydrator specifies a dry \"don't repeat yourself\" source for manifests, a sync source from which to sync\nhydrated manifests, and an optional hydrateTo location to act as a \"staging\" aread for hydrated manifests.",
                                  "type": "object",
                                  "properties": {
                                    "drySource": {
                                      "description": "DrySource specifies a location for dry \"don't repeat yourself\" manifest source information.",
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string",
                                          "title": "Path is a directory path within the Git repository where the manifests are located"
                                        },
                                        "repoURL": {
                                          "type": "string",
                                          "title": "RepoURL is the URL to the git repository that contains the application manifests"
                                        },
                                        "targetRevision": {
                                          "type": "string",
                                          "title": "TargetRevision defines the revision of the source to hydrate"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "hydrateTo": {
                                      "description": "HydrateTo specifies a location to which hydrated manifests should be pushed as a \"staging area\" before being moved to\nthe SyncSource. The RepoURL and Path are assumed based on the associated SyncSource config in the SourceHydrator.",
                                      "type": "object",
                                      "properties": {
                                        "targetBranch": {
                                          "type": "string",
                                          "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "syncSource": {
                                      "description": "SyncSource specifies a location from which hydrated manifests may be synced. RepoURL is assumed based on the\nassociated DrySource config in the SourceHydrator.",
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "description": "Path is a directory path within the git repository where hydrated manifests should be committed to and synced\nfrom. If hydrateTo is set, this is just the path from which hydrated manifests will be synced.",
                                          "type": "string"
                                        },
                                        "targetBranch": {
                                          "type": "string",
                                          "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "sources": {
                                  "type": "array",
                                  "title": "Sources is a reference to the location of the application's manifests or chart",
                                  "items": {
                                    "type": "object",
                                    "title": "ApplicationSource contains all required information about the source of an application",
                                    "properties": {
                                      "chart": {
                                        "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                        "type": "string"
                                      },
                                      "directory": {
                                        "type": "object",
                                        "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                        "properties": {
                                          "exclude": {
                                            "type": "string",
                                            "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                          },
                                          "include": {
                                            "type": "string",
                                            "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                          },
                                          "jsonnet": {
                                            "type": "object",
                                            "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                            "properties": {
                                              "extVars": {
                                                "type": "array",
                                                "title": "ExtVars is a list of Jsonnet External Variables",
                                                "items": {
                                                  "type": "object",
                                                  "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                  "properties": {
                                                    "code": {
                                                      "type": "boolean"
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              },
                                              "libs": {
                                                "type": "array",
                                                "title": "Additional library search dirs",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "tlas": {
                                                "type": "array",
                                                "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                "items": {
                                                  "type": "object",
                                                  "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                  "properties": {
                                                    "code": {
                                                      "type": "boolean"
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "recurse": {
                                            "type": "boolean",
                                            "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "helm": {
                                        "type": "object",
                                        "title": "ApplicationSourceHelm holds helm specific options",
                                        "properties": {
                                          "apiVersions": {
                                            "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "fileParameters": {
                                            "type": "array",
                                            "title": "FileParameters are file parameters to the helm template",
                                            "items": {
                                              "type": "object",
                                              "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name is the name of the Helm parameter"
                                                },
                                                "path": {
                                                  "type": "string",
                                                  "title": "Path is the path to the file containing the values for the Helm parameter"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "ignoreMissingValueFiles": {
                                            "type": "boolean",
                                            "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                          },
                                          "kubeVersion": {
                                            "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                            "type": "string"
                                          },
                                          "namespace": {
                                            "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                            "type": "string"
                                          },
                                          "parameters": {
                                            "type": "array",
                                            "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                            "items": {
                                              "type": "object",
                                              "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                              "properties": {
                                                "forceString": {
                                                  "type": "boolean",
                                                  "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name is the name of the Helm parameter"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "title": "Value is the value for the Helm parameter"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "passCredentials": {
                                            "type": "boolean",
                                            "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                          },
                                          "releaseName": {
                                            "type": "string",
                                            "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                          },
                                          "skipCrds": {
                                            "type": "boolean",
                                            "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                          },
                                          "skipSchemaValidation": {
                                            "type": "boolean",
                                            "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                          },
                                          "skipTests": {
                                            "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                            "type": "boolean"
                                          },
                                          "valueFiles": {
                                            "type": "array",
                                            "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "values": {
                                            "type": "string",
                                            "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                          },
                                          "valuesObject": {
                                            "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                            "type": "object",
                                            "properties": {
                                              "raw": {
                                                "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                "type": "string",
                                                "format": "byte"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "version": {
                                            "type": "string",
                                            "title": "Version is the Helm version to use for templating (\"3\")"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "kustomize": {
                                        "type": "object",
                                        "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                        "properties": {
                                          "apiVersions": {
                                            "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "commonAnnotations": {
                                            "type": "object",
                                            "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "commonAnnotationsEnvsubst": {
                                            "type": "boolean",
                                            "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                          },
                                          "commonLabels": {
                                            "type": "object",
                                            "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "components": {
                                            "type": "array",
                                            "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "forceCommonAnnotations": {
                                            "type": "boolean",
                                            "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                          },
                                          "forceCommonLabels": {
                                            "type": "boolean",
                                            "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                          },
                                          "ignoreMissingComponents": {
                                            "type": "boolean",
                                            "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                          },
                                          "images": {
                                            "type": "array",
                                            "title": "Images is a list of Kustomize image override specifications",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "kubeVersion": {
                                            "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                            "type": "string"
                                          },
                                          "labelIncludeTemplates": {
                                            "type": "boolean",
                                            "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                          },
                                          "labelWithoutSelector": {
                                            "type": "boolean",
                                            "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                          },
                                          "namePrefix": {
                                            "type": "string",
                                            "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                          },
                                          "nameSuffix": {
                                            "type": "string",
                                            "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                          },
                                          "namespace": {
                                            "type": "string",
                                            "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                          },
                                          "patches": {
                                            "type": "array",
                                            "title": "Patches is a list of Kustomize patches",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "options": {
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "type": "boolean"
                                                  }
                                                },
                                                "patch": {
                                                  "type": "string"
                                                },
                                                "path": {
                                                  "type": "string"
                                                },
                                                "target": {
                                                  "type": "object",
                                                  "properties": {
                                                    "annotationSelector": {
                                                      "type": "string"
                                                    },
                                                    "labelSelector": {
                                                      "type": "string"
                                                    },
                                                    "resId": {
                                                      "type": "object",
                                                      "properties": {
                                                        "gvk": {
                                                          "type": "object",
                                                          "properties": {
                                                            "group": {
                                                              "type": "string"
                                                            },
                                                            "kind": {
                                                              "type": "string"
                                                            },
                                                            "version": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        },
                                                        "name": {
                                                          "type": "string"
                                                        },
                                                        "namespace": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "replicas": {
                                            "type": "array",
                                            "title": "Replicas is a list of Kustomize Replicas override specifications",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "count": {
                                                  "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                  "type": "object",
                                                  "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                  "properties": {
                                                    "intVal": {
                                                      "type": "integer",
                                                      "format": "int32"
                                                    },
                                                    "strVal": {
                                                      "type": "string"
                                                    },
                                                    "type": {
                                                      "type": "integer",
                                                      "format": "int64"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name of Deployment or StatefulSet"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "version": {
                                            "type": "string",
                                            "title": "Version controls which version of Kustomize to use for rendering manifests"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "name": {
                                        "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                        "type": "string"
                                      },
                                      "path": {
                                        "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                        "type": "string"
                                      },
                                      "plugin": {
                                        "type": "object",
                                        "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                        "properties": {
                                          "env": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "title": "EnvEntry represents an entry in the application's environment",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name is the name of the variable, usually expressed in uppercase"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "title": "Value is the value of the variable"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "parameters": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "array": {
                                                  "description": "Array is the value of an array type parameter.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "map": {
                                                  "description": "Map is the value of a map type parameter.",
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "type": "string"
                                                  }
                                                },
                                                "name": {
                                                  "description": "Name is the name identifying a parameter.",
                                                  "type": "string"
                                                },
                                                "string": {
                                                  "description": "String_ is the value of a string type parameter.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "ref": {
                                        "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                        "type": "string"
                                      },
                                      "repoURL": {
                                        "type": "string",
                                        "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                      },
                                      "targetRevision": {
                                        "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "syncPolicy": {
                                  "type": "object",
                                  "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                                  "properties": {
                                    "automated": {
                                      "type": "object",
                                      "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                                      "properties": {
                                        "allowEmpty": {
                                          "type": "boolean",
                                          "title": "AllowEmpty allows apps have zero live resources (default: false)"
                                        },
                                        "enable": {
                                          "type": "boolean",
                                          "title": "Enable allows apps to explicitly control automated sync"
                                        },
                                        "prune": {
                                          "type": "boolean",
                                          "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                                        },
                                        "selfHeal": {
                                          "type": "boolean",
                                          "title": "SelfHeal specifies whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "managedNamespaceMetadata": {
                                      "type": "object",
                                      "properties": {
                                        "annotations": {
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "labels": {
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "retry": {
                                      "type": "object",
                                      "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                                      "properties": {
                                        "backoff": {
                                          "type": "object",
                                          "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                                          "properties": {
                                            "duration": {
                                              "type": "string",
                                              "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                                            },
                                            "factor": {
                                              "type": "integer",
                                              "format": "int64",
                                              "title": "Factor is a factor to multiply the base duration after each failed retry"
                                            },
                                            "maxDuration": {
                                              "type": "string",
                                              "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "limit": {
                                          "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                          "type": "integer",
                                          "format": "int64"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "syncOptions": {
                                      "type": "array",
                                      "title": "Options allow you to specify whole app sync-options",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "values": {
                          "type": "object",
                          "title": "Values contains key/value pairs which are passed directly as parameters to the template",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "clusters": {
                      "description": "ClusterGenerator defines a generator to match against clusters registered with ArgoCD.",
                      "type": "object",
                      "properties": {
                        "flatList": {
                          "type": "boolean",
                          "title": "returns the clusters a single 'clusters' value in the template"
                        },
                        "selector": {
                          "type": "object",
                          "title": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.\n+structType=atomic",
                          "properties": {
                            "matchExpressions": {
                              "type": "array",
                              "title": "matchExpressions is a list of label selector requirements. The requirements are ANDed.\n+optional\n+listType=atomic",
                              "items": {
                                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "description": "key is the label key that the selector applies to.",
                                    "type": "string"
                                  },
                                  "operator": {
                                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                    "type": "string"
                                  },
                                  "values": {
                                    "type": "array",
                                    "title": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.\n+optional\n+listType=atomic",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "matchLabels": {
                              "type": "object",
                              "title": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n+optional",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          },
                          "additionalProperties": false
                        },
                        "template": {
                          "type": "object",
                          "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
                          "properties": {
                            "metadata": {
                              "type": "object",
                              "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
                              "properties": {
                                "annotations": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "finalizers": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "labels": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "name": {
                                  "type": "string"
                                },
                                "namespace": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "spec": {
                              "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
                              "type": "object",
                              "properties": {
                                "destination": {
                                  "type": "object",
                                  "title": "ApplicationDestination holds information about the application's destination",
                                  "properties": {
                                    "name": {
                                      "description": "Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.",
                                      "type": "string"
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                                    },
                                    "server": {
                                      "description": "Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "ignoreDifferences": {
                                  "type": "array",
                                  "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                                  "items": {
                                    "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                                    "type": "object",
                                    "properties": {
                                      "group": {
                                        "type": "string"
                                      },
                                      "jqPathExpressions": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "jsonPointers": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "kind": {
                                        "type": "string"
                                      },
                                      "managedFieldsManagers": {
                                        "type": "array",
                                        "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "namespace": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "info": {
                                  "type": "array",
                                  "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "value": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "project": {
                                  "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                                  "type": "string"
                                },
                                "revisionHistoryLimit": {
                                  "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "source": {
                                  "type": "object",
                                  "title": "ApplicationSource contains all required information about the source of an application",
                                  "properties": {
                                    "chart": {
                                      "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                      "type": "string"
                                    },
                                    "directory": {
                                      "type": "object",
                                      "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                      "properties": {
                                        "exclude": {
                                          "type": "string",
                                          "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                        },
                                        "include": {
                                          "type": "string",
                                          "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                        },
                                        "jsonnet": {
                                          "type": "object",
                                          "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                          "properties": {
                                            "extVars": {
                                              "type": "array",
                                              "title": "ExtVars is a list of Jsonnet External Variables",
                                              "items": {
                                                "type": "object",
                                                "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                "properties": {
                                                  "code": {
                                                    "type": "boolean"
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "value": {
                                                    "type": "string"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "libs": {
                                              "type": "array",
                                              "title": "Additional library search dirs",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "tlas": {
                                              "type": "array",
                                              "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                              "items": {
                                                "type": "object",
                                                "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                "properties": {
                                                  "code": {
                                                    "type": "boolean"
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "value": {
                                                    "type": "string"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "recurse": {
                                          "type": "boolean",
                                          "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "helm": {
                                      "type": "object",
                                      "title": "ApplicationSourceHelm holds helm specific options",
                                      "properties": {
                                        "apiVersions": {
                                          "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "fileParameters": {
                                          "type": "array",
                                          "title": "FileParameters are file parameters to the helm template",
                                          "items": {
                                            "type": "object",
                                            "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "title": "Name is the name of the Helm parameter"
                                              },
                                              "path": {
                                                "type": "string",
                                                "title": "Path is the path to the file containing the values for the Helm parameter"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "ignoreMissingValueFiles": {
                                          "type": "boolean",
                                          "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                        },
                                        "kubeVersion": {
                                          "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                          "type": "string"
                                        },
                                        "namespace": {
                                          "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                          "type": "string"
                                        },
                                        "parameters": {
                                          "type": "array",
                                          "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                          "items": {
                                            "type": "object",
                                            "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                            "properties": {
                                              "forceString": {
                                                "type": "boolean",
                                                "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                              },
                                              "name": {
                                                "type": "string",
                                                "title": "Name is the name of the Helm parameter"
                                              },
                                              "value": {
                                                "type": "string",
                                                "title": "Value is the value for the Helm parameter"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "passCredentials": {
                                          "type": "boolean",
                                          "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                        },
                                        "releaseName": {
                                          "type": "string",
                                          "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                        },
                                        "skipCrds": {
                                          "type": "boolean",
                                          "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                        },
                                        "skipSchemaValidation": {
                                          "type": "boolean",
                                          "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                        },
                                        "skipTests": {
                                          "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                          "type": "boolean"
                                        },
                                        "valueFiles": {
                                          "type": "array",
                                          "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "values": {
                                          "type": "string",
                                          "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                        },
                                        "valuesObject": {
                                          "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                          "type": "object",
                                          "properties": {
                                            "raw": {
                                              "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                              "type": "string",
                                              "format": "byte"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "version": {
                                          "type": "string",
                                          "title": "Version is the Helm version to use for templating (\"3\")"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "kustomize": {
                                      "type": "object",
                                      "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                      "properties": {
                                        "apiVersions": {
                                          "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "commonAnnotations": {
                                          "type": "object",
                                          "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "commonAnnotationsEnvsubst": {
                                          "type": "boolean",
                                          "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                        },
                                        "commonLabels": {
                                          "type": "object",
                                          "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "components": {
                                          "type": "array",
                                          "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "forceCommonAnnotations": {
                                          "type": "boolean",
                                          "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                        },
                                        "forceCommonLabels": {
                                          "type": "boolean",
                                          "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                        },
                                        "ignoreMissingComponents": {
                                          "type": "boolean",
                                          "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                        },
                                        "images": {
                                          "type": "array",
                                          "title": "Images is a list of Kustomize image override specifications",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "kubeVersion": {
                                          "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                          "type": "string"
                                        },
                                        "labelIncludeTemplates": {
                                          "type": "boolean",
                                          "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                        },
                                        "labelWithoutSelector": {
                                          "type": "boolean",
                                          "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                        },
                                        "namePrefix": {
                                          "type": "string",
                                          "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                        },
                                        "nameSuffix": {
                                          "type": "string",
                                          "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                        },
                                        "namespace": {
                                          "type": "string",
                                          "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                        },
                                        "patches": {
                                          "type": "array",
                                          "title": "Patches is a list of Kustomize patches",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "options": {
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "boolean"
                                                }
                                              },
                                              "patch": {
                                                "type": "string"
                                              },
                                              "path": {
                                                "type": "string"
                                              },
                                              "target": {
                                                "type": "object",
                                                "properties": {
                                                  "annotationSelector": {
                                                    "type": "string"
                                                  },
                                                  "labelSelector": {
                                                    "type": "string"
                                                  },
                                                  "resId": {
                                                    "type": "object",
                                                    "properties": {
                                                      "gvk": {
                                                        "type": "object",
                                                        "properties": {
                                                          "group": {
                                                            "type": "string"
                                                          },
                                                          "kind": {
                                                            "type": "string"
                                                          },
                                                          "version": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      },
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "namespace": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "replicas": {
                                          "type": "array",
                                          "title": "Replicas is a list of Kustomize Replicas override specifications",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "count": {
                                                "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                "type": "object",
                                                "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                "properties": {
                                                  "intVal": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                  },
                                                  "strVal": {
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "name": {
                                                "type": "string",
                                                "title": "Name of Deployment or StatefulSet"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "version": {
                                          "type": "string",
                                          "title": "Version controls which version of Kustomize to use for rendering manifests"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "name": {
                                      "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                      "type": "string"
                                    },
                                    "plugin": {
                                      "type": "object",
                                      "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                      "properties": {
                                        "env": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "title": "EnvEntry represents an entry in the application's environment",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "title": "Name is the name of the variable, usually expressed in uppercase"
                                              },
                                              "value": {
                                                "type": "string",
                                                "title": "Value is the value of the variable"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "parameters": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "array": {
                                                "description": "Array is the value of an array type parameter.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "map": {
                                                "description": "Map is the value of a map type parameter.",
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              },
                                              "name": {
                                                "description": "Name is the name identifying a parameter.",
                                                "type": "string"
                                              },
                                              "string": {
                                                "description": "String_ is the value of a string type parameter.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "ref": {
                                      "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                      "type": "string"
                                    },
                                    "repoURL": {
                                      "type": "string",
                                      "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                    },
                                    "targetRevision": {
                                      "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "sourceHydrator": {
                                  "description": "SourceHydrator specifies a dry \"don't repeat yourself\" source for manifests, a sync source from which to sync\nhydrated manifests, and an optional hydrateTo location to act as a \"staging\" aread for hydrated manifests.",
                                  "type": "object",
                                  "properties": {
                                    "drySource": {
                                      "description": "DrySource specifies a location for dry \"don't repeat yourself\" manifest source information.",
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string",
                                          "title": "Path is a directory path within the Git repository where the manifests are located"
                                        },
                                        "repoURL": {
                                          "type": "string",
                                          "title": "RepoURL is the URL to the git repository that contains the application manifests"
                                        },
                                        "targetRevision": {
                                          "type": "string",
                                          "title": "TargetRevision defines the revision of the source to hydrate"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "hydrateTo": {
                                      "description": "HydrateTo specifies a location to which hydrated manifests should be pushed as a \"staging area\" before being moved to\nthe SyncSource. The RepoURL and Path are assumed based on the associated SyncSource config in the SourceHydrator.",
                                      "type": "object",
                                      "properties": {
                                        "targetBranch": {
                                          "type": "string",
                                          "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "syncSource": {
                                      "description": "SyncSource specifies a location from which hydrated manifests may be synced. RepoURL is assumed based on the\nassociated DrySource config in the SourceHydrator.",
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "description": "Path is a directory path within the git repository where hydrated manifests should be committed to and synced\nfrom. If hydrateTo is set, this is just the path from which hydrated manifests will be synced.",
                                          "type": "string"
                                        },
                                        "targetBranch": {
                                          "type": "string",
                                          "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "sources": {
                                  "type": "array",
                                  "title": "Sources is a reference to the location of the application's manifests or chart",
                                  "items": {
                                    "type": "object",
                                    "title": "ApplicationSource contains all required information about the source of an application",
                                    "properties": {
                                      "chart": {
                                        "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                        "type": "string"
                                      },
                                      "directory": {
                                        "type": "object",
                                        "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                        "properties": {
                                          "exclude": {
                                            "type": "string",
                                            "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                          },
                                          "include": {
                                            "type": "string",
                                            "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                          },
                                          "jsonnet": {
                                            "type": "object",
                                            "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                            "properties": {
                                              "extVars": {
                                                "type": "array",
                                                "title": "ExtVars is a list of Jsonnet External Variables",
                                                "items": {
                                                  "type": "object",
                                                  "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                  "properties": {
                                                    "code": {
                                                      "type": "boolean"
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              },
                                              "libs": {
                                                "type": "array",
                                                "title": "Additional library search dirs",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "tlas": {
                                                "type": "array",
                                                "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                "items": {
                                                  "type": "object",
                                                  "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                  "properties": {
                                                    "code": {
                                                      "type": "boolean"
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "recurse": {
                                            "type": "boolean",
                                            "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "helm": {
                                        "type": "object",
                                        "title": "ApplicationSourceHelm holds helm specific options",
                                        "properties": {
                                          "apiVersions": {
                                            "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "fileParameters": {
                                            "type": "array",
                                            "title": "FileParameters are file parameters to the helm template",
                                            "items": {
                                              "type": "object",
                                              "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name is the name of the Helm parameter"
                                                },
                                                "path": {
                                                  "type": "string",
                                                  "title": "Path is the path to the file containing the values for the Helm parameter"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "ignoreMissingValueFiles": {
                                            "type": "boolean",
                                            "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                          },
                                          "kubeVersion": {
                                            "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                            "type": "string"
                                          },
                                          "namespace": {
                                            "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                            "type": "string"
                                          },
                                          "parameters": {
                                            "type": "array",
                                            "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                            "items": {
                                              "type": "object",
                                              "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                              "properties": {
                                                "forceString": {
                                                  "type": "boolean",
                                                  "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name is the name of the Helm parameter"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "title": "Value is the value for the Helm parameter"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "passCredentials": {
                                            "type": "boolean",
                                            "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                          },
                                          "releaseName": {
                                            "type": "string",
                                            "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                          },
                                          "skipCrds": {
                                            "type": "boolean",
                                            "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                          },
                                          "skipSchemaValidation": {
                                            "type": "boolean",
                                            "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                          },
                                          "skipTests": {
                                            "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                            "type": "boolean"
                                          },
                                          "valueFiles": {
                                            "type": "array",
                                            "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "values": {
                                            "type": "string",
                                            "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                          },
                                          "valuesObject": {
                                            "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                            "type": "object",
                                            "properties": {
                                              "raw": {
                                                "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                "type": "string",
                                                "format": "byte"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "version": {
                                            "type": "string",
                                            "title": "Version is the Helm version to use for templating (\"3\")"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "kustomize": {
                                        "type": "object",
                                        "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                        "properties": {
                                          "apiVersions": {
                                            "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "commonAnnotations": {
                                            "type": "object",
                                            "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "commonAnnotationsEnvsubst": {
                                            "type": "boolean",
                                            "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                          },
                                          "commonLabels": {
                                            "type": "object",
                                            "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "components": {
                                            "type": "array",
                                            "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "forceCommonAnnotations": {
                                            "type": "boolean",
                                            "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                          },
                                          "forceCommonLabels": {
                                            "type": "boolean",
                                            "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                          },
                                          "ignoreMissingComponents": {
                                            "type": "boolean",
                                            "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                          },
                                          "images": {
                                            "type": "array",
                                            "title": "Images is a list of Kustomize image override specifications",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "kubeVersion": {
                                            "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                            "type": "string"
                                          },
                                          "labelIncludeTemplates": {
                                            "type": "boolean",
                                            "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                          },
                                          "labelWithoutSelector": {
                                            "type": "boolean",
                                            "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                          },
                                          "namePrefix": {
                                            "type": "string",
                                            "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                          },
                                          "nameSuffix": {
                                            "type": "string",
                                            "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                          },
                                          "namespace": {
                                            "type": "string",
                                            "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                          },
                                          "patches": {
                                            "type": "array",
                                            "title": "Patches is a list of Kustomize patches",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "options": {
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "type": "boolean"
                                                  }
                                                },
                                                "patch": {
                                                  "type": "string"
                                                },
                                                "path": {
                                                  "type": "string"
                                                },
                                                "target": {
                                                  "type": "object",
                                                  "properties": {
                                                    "annotationSelector": {
                                                      "type": "string"
                                                    },
                                                    "labelSelector": {
                                                      "type": "string"
                                                    },
                                                    "resId": {
                                                      "type": "object",
                                                      "properties": {
                                                        "gvk": {
                                                          "type": "object",
                                                          "properties": {
                                                            "group": {
                                                              "type": "string"
                                                            },
                                                            "kind": {
                                                              "type": "string"
                                                            },
                                                            "version": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        },
                                                        "name": {
                                                          "type": "string"
                                                        },
                                                        "namespace": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "replicas": {
                                            "type": "array",
                                            "title": "Replicas is a list of Kustomize Replicas override specifications",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "count": {
                                                  "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                  "type": "object",
                                                  "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                  "properties": {
                                                    "intVal": {
                                                      "type": "integer",
                                                      "format": "int32"
                                                    },
                                                    "strVal": {
                                                      "type": "string"
                                                    },
                                                    "type": {
                                                      "type": "integer",
                                                      "format": "int64"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name of Deployment or StatefulSet"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "version": {
                                            "type": "string",
                                            "title": "Version controls which version of Kustomize to use for rendering manifests"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "name": {
                                        "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                        "type": "string"
                                      },
                                      "path": {
                                        "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                        "type": "string"
                                      },
                                      "plugin": {
                                        "type": "object",
                                        "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                        "properties": {
                                          "env": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "title": "EnvEntry represents an entry in the application's environment",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name is the name of the variable, usually expressed in uppercase"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "title": "Value is the value of the variable"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "parameters": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "array": {
                                                  "description": "Array is the value of an array type parameter.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "map": {
                                                  "description": "Map is the value of a map type parameter.",
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "type": "string"
                                                  }
                                                },
                                                "name": {
                                                  "description": "Name is the name identifying a parameter.",
                                                  "type": "string"
                                                },
                                                "string": {
                                                  "description": "String_ is the value of a string type parameter.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "ref": {
                                        "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                        "type": "string"
                                      },
                                      "repoURL": {
                                        "type": "string",
                                        "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                      },
                                      "targetRevision": {
                                        "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "syncPolicy": {
                                  "type": "object",
                                  "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                                  "properties": {
                                    "automated": {
                                      "type": "object",
                                      "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                                      "properties": {
                                        "allowEmpty": {
                                          "type": "boolean",
                                          "title": "AllowEmpty allows apps have zero live resources (default: false)"
                                        },
                                        "enable": {
                                          "type": "boolean",
                                          "title": "Enable allows apps to explicitly control automated sync"
                                        },
                                        "prune": {
                                          "type": "boolean",
                                          "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                                        },
                                        "selfHeal": {
                                          "type": "boolean",
                                          "title": "SelfHeal specifies whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "managedNamespaceMetadata": {
                                      "type": "object",
                                      "properties": {
                                        "annotations": {
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "labels": {
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "retry": {
                                      "type": "object",
                                      "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                                      "properties": {
                                        "backoff": {
                                          "type": "object",
                                          "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                                          "properties": {
                                            "duration": {
                                              "type": "string",
                                              "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                                            },
                                            "factor": {
                                              "type": "integer",
                                              "format": "int64",
                                              "title": "Factor is a factor to multiply the base duration after each failed retry"
                                            },
                                            "maxDuration": {
                                              "type": "string",
                                              "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "limit": {
                                          "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                          "type": "integer",
                                          "format": "int64"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "syncOptions": {
                                      "type": "array",
                                      "title": "Options allow you to specify whole app sync-options",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "values": {
                          "type": "object",
                          "title": "Values contains key/value pairs which are passed directly as parameters to the template",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "git": {
                      "type": "object",
                      "properties": {
                        "directories": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "exclude": {
                                "type": "boolean"
                              },
                              "path": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "files": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "exclude": {
                                "type": "boolean"
                              },
                              "path": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "pathParamPrefix": {
                          "type": "string"
                        },
                        "repoURL": {
                          "type": "string"
                        },
                        "requeueAfterSeconds": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "revision": {
                          "type": "string"
                        },
                        "template": {
                          "type": "object",
                          "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
                          "properties": {
                            "metadata": {
                              "type": "object",
                              "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
                              "properties": {
                                "annotations": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "finalizers": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "labels": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "name": {
                                  "type": "string"
                                },
                                "namespace": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "spec": {
                              "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
                              "type": "object",
                              "properties": {
                                "destination": {
                                  "type": "object",
                                  "title": "ApplicationDestination holds information about the application's destination",
                                  "properties": {
                                    "name": {
                                      "description": "Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.",
                                      "type": "string"
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                                    },
                                    "server": {
                                      "description": "Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "ignoreDifferences": {
                                  "type": "array",
                                  "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                                  "items": {
                                    "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                                    "type": "object",
                                    "properties": {
                                      "group": {
                                        "type": "string"
                                      },
                                      "jqPathExpressions": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "jsonPointers": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "kind": {
                                        "type": "string"
                                      },
                                      "managedFieldsManagers": {
                                        "type": "array",
                                        "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "namespace": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "info": {
                                  "type": "array",
                                  "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "value": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "project": {
                                  "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                                  "type": "string"
                                },
                                "revisionHistoryLimit": {
                                  "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "source": {
                                  "type": "object",
                                  "title": "ApplicationSource contains all required information about the source of an application",
                                  "properties": {
                                    "chart": {
                                      "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                      "type": "string"
                                    },
                                    "directory": {
                                      "type": "object",
                                      "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                      "properties": {
                                        "exclude": {
                                          "type": "string",
                                          "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                        },
                                        "include": {
                                          "type": "string",
                                          "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                        },
                                        "jsonnet": {
                                          "type": "object",
                                          "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                          "properties": {
                                            "extVars": {
                                              "type": "array",
                                              "title": "ExtVars is a list of Jsonnet External Variables",
                                              "items": {
                                                "type": "object",
                                                "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                "properties": {
                                                  "code": {
                                                    "type": "boolean"
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "value": {
                                                    "type": "string"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "libs": {
                                              "type": "array",
                                              "title": "Additional library search dirs",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "tlas": {
                                              "type": "array",
                                              "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                              "items": {
                                                "type": "object",
                                                "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                "properties": {
                                                  "code": {
                                                    "type": "boolean"
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "value": {
                                                    "type": "string"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "recurse": {
                                          "type": "boolean",
                                          "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "helm": {
                                      "type": "object",
                                      "title": "ApplicationSourceHelm holds helm specific options",
                                      "properties": {
                                        "apiVersions": {
                                          "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "fileParameters": {
                                          "type": "array",
                                          "title": "FileParameters are file parameters to the helm template",
                                          "items": {
                                            "type": "object",
                                            "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "title": "Name is the name of the Helm parameter"
                                              },
                                              "path": {
                                                "type": "string",
                                                "title": "Path is the path to the file containing the values for the Helm parameter"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "ignoreMissingValueFiles": {
                                          "type": "boolean",
                                          "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                        },
                                        "kubeVersion": {
                                          "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                          "type": "string"
                                        },
                                        "namespace": {
                                          "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                          "type": "string"
                                        },
                                        "parameters": {
                                          "type": "array",
                                          "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                          "items": {
                                            "type": "object",
                                            "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                            "properties": {
                                              "forceString": {
                                                "type": "boolean",
                                                "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                              },
                                              "name": {
                                                "type": "string",
                                                "title": "Name is the name of the Helm parameter"
                                              },
                                              "value": {
                                                "type": "string",
                                                "title": "Value is the value for the Helm parameter"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "passCredentials": {
                                          "type": "boolean",
                                          "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                        },
                                        "releaseName": {
                                          "type": "string",
                                          "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                        },
                                        "skipCrds": {
                                          "type": "boolean",
                                          "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                        },
                                        "skipSchemaValidation": {
                                          "type": "boolean",
                                          "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                        },
                                        "skipTests": {
                                          "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                          "type": "boolean"
                                        },
                                        "valueFiles": {
                                          "type": "array",
                                          "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "values": {
                                          "type": "string",
                                          "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                        },
                                        "valuesObject": {
                                          "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                          "type": "object",
                                          "properties": {
                                            "raw": {
                                              "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                              "type": "string",
                                              "format": "byte"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "version": {
                                          "type": "string",
                                          "title": "Version is the Helm version to use for templating (\"3\")"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "kustomize": {
                                      "type": "object",
                                      "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                      "properties": {
                                        "apiVersions": {
                                          "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "commonAnnotations": {
                                          "type": "object",
                                          "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "commonAnnotationsEnvsubst": {
                                          "type": "boolean",
                                          "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                        },
                                        "commonLabels": {
                                          "type": "object",
                                          "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "components": {
                                          "type": "array",
                                          "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "forceCommonAnnotations": {
                                          "type": "boolean",
                                          "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                        },
                                        "forceCommonLabels": {
                                          "type": "boolean",
                                          "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                        },
                                        "ignoreMissingComponents": {
                                          "type": "boolean",
                                          "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                        },
                                        "images": {
                                          "type": "array",
                                          "title": "Images is a list of Kustomize image override specifications",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "kubeVersion": {
                                          "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                          "type": "string"
                                        },
                                        "labelIncludeTemplates": {
                                          "type": "boolean",
                                          "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                        },
                                        "labelWithoutSelector": {
                                          "type": "boolean",
                                          "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                        },
                                        "namePrefix": {
                                          "type": "string",
                                          "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                        },
                                        "nameSuffix": {
                                          "type": "string",
                                          "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                        },
                                        "namespace": {
                                          "type": "string",
                                          "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                        },
                                        "patches": {
                                          "type": "array",
                                          "title": "Patches is a list of Kustomize patches",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "options": {
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "boolean"
                                                }
                                              },
                                              "patch": {
                                                "type": "string"
                                              },
                                              "path": {
                                                "type": "string"
                                              },
                                              "target": {
                                                "type": "object",
                                                "properties": {
                                                  "annotationSelector": {
                                                    "type": "string"
                                                  },
                                                  "labelSelector": {
                                                    "type": "string"
                                                  },
                                                  "resId": {
                                                    "type": "object",
                                                    "properties": {
                                                      "gvk": {
                                                        "type": "object",
                                                        "properties": {
                                                          "group": {
                                                            "type": "string"
                                                          },
                                                          "kind": {
                                                            "type": "string"
                                                          },
                                                          "version": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      },
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "namespace": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "replicas": {
                                          "type": "array",
                                          "title": "Replicas is a list of Kustomize Replicas override specifications",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "count": {
                                                "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                "type": "object",
                                                "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                "properties": {
                                                  "intVal": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                  },
                                                  "strVal": {
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "name": {
                                                "type": "string",
                                                "title": "Name of Deployment or StatefulSet"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "version": {
                                          "type": "string",
                                          "title": "Version controls which version of Kustomize to use for rendering manifests"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "name": {
                                      "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                      "type": "string"
                                    },
                                    "plugin": {
                                      "type": "object",
                                      "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                      "properties": {
                                        "env": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "title": "EnvEntry represents an entry in the application's environment",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "title": "Name is the name of the variable, usually expressed in uppercase"
                                              },
                                              "value": {
                                                "type": "string",
                                                "title": "Value is the value of the variable"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "parameters": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "array": {
                                                "description": "Array is the value of an array type parameter.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "map": {
                                                "description": "Map is the value of a map type parameter.",
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              },
                                              "name": {
                                                "description": "Name is the name identifying a parameter.",
                                                "type": "string"
                                              },
                                              "string": {
                                                "description": "String_ is the value of a string type parameter.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "ref": {
                                      "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                      "type": "string"
                                    },
                                    "repoURL": {
                                      "type": "string",
                                      "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                    },
                                    "targetRevision": {
                                      "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "sourceHydrator": {
                                  "description": "SourceHydrator specifies a dry \"don't repeat yourself\" source for manifests, a sync source from which to sync\nhydrated manifests, and an optional hydrateTo location to act as a \"staging\" aread for hydrated manifests.",
                                  "type": "object",
                                  "properties": {
                                    "drySource": {
                                      "description": "DrySource specifies a location for dry \"don't repeat yourself\" manifest source information.",
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string",
                                          "title": "Path is a directory path within the Git repository where the manifests are located"
                                        },
                                        "repoURL": {
                                          "type": "string",
                                          "title": "RepoURL is the URL to the git repository that contains the application manifests"
                                        },
                                        "targetRevision": {
                                          "type": "string",
                                          "title": "TargetRevision defines the revision of the source to hydrate"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "hydrateTo": {
                                      "description": "HydrateTo specifies a location to which hydrated manifests should be pushed as a \"staging area\" before being moved to\nthe SyncSource. The RepoURL and Path are assumed based on the associated SyncSource config in the SourceHydrator.",
                                      "type": "object",
                                      "properties": {
                                        "targetBranch": {
                                          "type": "string",
                                          "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "syncSource": {
                                      "description": "SyncSource specifies a location from which hydrated manifests may be synced. RepoURL is assumed based on the\nassociated DrySource config in the SourceHydrator.",
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "description": "Path is a directory path within the git repository where hydrated manifests should be committed to and synced\nfrom. If hydrateTo is set, this is just the path from which hydrated manifests will be synced.",
                                          "type": "string"
                                        },
                                        "targetBranch": {
                                          "type": "string",
                                          "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "sources": {
                                  "type": "array",
                                  "title": "Sources is a reference to the location of the application's manifests or chart",
                                  "items": {
                                    "type": "object",
                                    "title": "ApplicationSource contains all required information about the source of an application",
                                    "properties": {
                                      "chart": {
                                        "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                        "type": "string"
                                      },
                                      "directory": {
                                        "type": "object",
                                        "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                        "properties": {
                                          "exclude": {
                                            "type": "string",
                                            "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                          },
                                          "include": {
                                            "type": "string",
                                            "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                          },
                                          "jsonnet": {
                                            "type": "object",
                                            "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                            "properties": {
                                              "extVars": {
                                                "type": "array",
                                                "title": "ExtVars is a list of Jsonnet External Variables",
                                                "items": {
                                                  "type": "object",
                                                  "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                  "properties": {
                                                    "code": {
                                                      "type": "boolean"
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              },
                                              "libs": {
                                                "type": "array",
                                                "title": "Additional library search dirs",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "tlas": {
                                                "type": "array",
                                                "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                "items": {
                                                  "type": "object",
                                                  "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                  "properties": {
                                                    "code": {
                                                      "type": "boolean"
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "recurse": {
                                            "type": "boolean",
                                            "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "helm": {
                                        "type": "object",
                                        "title": "ApplicationSourceHelm holds helm specific options",
                                        "properties": {
                                          "apiVersions": {
                                            "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "fileParameters": {
                                            "type": "array",
                                            "title": "FileParameters are file parameters to the helm template",
                                            "items": {
                                              "type": "object",
                                              "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name is the name of the Helm parameter"
                                                },
                                                "path": {
                                                  "type": "string",
                                                  "title": "Path is the path to the file containing the values for the Helm parameter"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "ignoreMissingValueFiles": {
                                            "type": "boolean",
                                            "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                          },
                                          "kubeVersion": {
                                            "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                            "type": "string"
                                          },
                                          "namespace": {
                                            "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                            "type": "string"
                                          },
                                          "parameters": {
                                            "type": "array",
                                            "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                            "items": {
                                              "type": "object",
                                              "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                              "properties": {
                                                "forceString": {
                                                  "type": "boolean",
                                                  "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name is the name of the Helm parameter"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "title": "Value is the value for the Helm parameter"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "passCredentials": {
                                            "type": "boolean",
                                            "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                          },
                                          "releaseName": {
                                            "type": "string",
                                            "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                          },
                                          "skipCrds": {
                                            "type": "boolean",
                                            "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                          },
                                          "skipSchemaValidation": {
                                            "type": "boolean",
                                            "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                          },
                                          "skipTests": {
                                            "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                            "type": "boolean"
                                          },
                                          "valueFiles": {
                                            "type": "array",
                                            "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "values": {
                                            "type": "string",
                                            "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                          },
                                          "valuesObject": {
                                            "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                            "type": "object",
                                            "properties": {
                                              "raw": {
                                                "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                "type": "string",
                                                "format": "byte"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "version": {
                                            "type": "string",
                                            "title": "Version is the Helm version to use for templating (\"3\")"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "kustomize": {
                                        "type": "object",
                                        "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                        "properties": {
                                          "apiVersions": {
                                            "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "commonAnnotations": {
                                            "type": "object",
                                            "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "commonAnnotationsEnvsubst": {
                                            "type": "boolean",
                                            "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                          },
                                          "commonLabels": {
                                            "type": "object",
                                            "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "components": {
                                            "type": "array",
                                            "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "forceCommonAnnotations": {
                                            "type": "boolean",
                                            "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                          },
                                          "forceCommonLabels": {
                                            "type": "boolean",
                                            "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                          },
                                          "ignoreMissingComponents": {
                                            "type": "boolean",
                                            "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                          },
                                          "images": {
                                            "type": "array",
                                            "title": "Images is a list of Kustomize image override specifications",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "kubeVersion": {
                                            "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                            "type": "string"
                                          },
                                          "labelIncludeTemplates": {
                                            "type": "boolean",
                                            "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                          },
                                          "labelWithoutSelector": {
                                            "type": "boolean",
                                            "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                          },
                                          "namePrefix": {
                                            "type": "string",
                                            "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                          },
                                          "nameSuffix": {
                                            "type": "string",
                                            "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                          },
                                          "namespace": {
                                            "type": "string",
                                            "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                          },
                                          "patches": {
                                            "type": "array",
                                            "title": "Patches is a list of Kustomize patches",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "options": {
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "type": "boolean"
                                                  }
                                                },
                                                "patch": {
                                                  "type": "string"
                                                },
                                                "path": {
                                                  "type": "string"
                                                },
                                                "target": {
                                                  "type": "object",
                                                  "properties": {
                                                    "annotationSelector": {
                                                      "type": "string"
                                                    },
                                                    "labelSelector": {
                                                      "type": "string"
                                                    },
                                                    "resId": {
                                                      "type": "object",
                                                      "properties": {
                                                        "gvk": {
                                                          "type": "object",
                                                          "properties": {
                                                            "group": {
                                                              "type": "string"
                                                            },
                                                            "kind": {
                                                              "type": "string"
                                                            },
                                                            "version": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        },
                                                        "name": {
                                                          "type": "string"
                                                        },
                                                        "namespace": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "replicas": {
                                            "type": "array",
                                            "title": "Replicas is a list of Kustomize Replicas override specifications",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "count": {
                                                  "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                  "type": "object",
                                                  "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                  "properties": {
                                                    "intVal": {
                                                      "type": "integer",
                                                      "format": "int32"
                                                    },
                                                    "strVal": {
                                                      "type": "string"
                                                    },
                                                    "type": {
                                                      "type": "integer",
                                                      "format": "int64"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name of Deployment or StatefulSet"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "version": {
                                            "type": "string",
                                            "title": "Version controls which version of Kustomize to use for rendering manifests"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "name": {
                                        "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                        "type": "string"
                                      },
                                      "path": {
                                        "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                        "type": "string"
                                      },
                                      "plugin": {
                                        "type": "object",
                                        "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                        "properties": {
                                          "env": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "title": "EnvEntry represents an entry in the application's environment",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name is the name of the variable, usually expressed in uppercase"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "title": "Value is the value of the variable"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "parameters": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "array": {
                                                  "description": "Array is the value of an array type parameter.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "map": {
                                                  "description": "Map is the value of a map type parameter.",
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "type": "string"
                                                  }
                                                },
                                                "name": {
                                                  "description": "Name is the name identifying a parameter.",
                                                  "type": "string"
                                                },
                                                "string": {
                                                  "description": "String_ is the value of a string type parameter.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "ref": {
                                        "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                        "type": "string"
                                      },
                                      "repoURL": {
                                        "type": "string",
                                        "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                      },
                                      "targetRevision": {
                                        "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "syncPolicy": {
                                  "type": "object",
                                  "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                                  "properties": {
                                    "automated": {
                                      "type": "object",
                                      "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                                      "properties": {
                                        "allowEmpty": {
                                          "type": "boolean",
                                          "title": "AllowEmpty allows apps have zero live resources (default: false)"
                                        },
                                        "enable": {
                                          "type": "boolean",
                                          "title": "Enable allows apps to explicitly control automated sync"
                                        },
                                        "prune": {
                                          "type": "boolean",
                                          "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                                        },
                                        "selfHeal": {
                                          "type": "boolean",
                                          "title": "SelfHeal specifies whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "managedNamespaceMetadata": {
                                      "type": "object",
                                      "properties": {
                                        "annotations": {
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "labels": {
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "retry": {
                                      "type": "object",
                                      "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                                      "properties": {
                                        "backoff": {
                                          "type": "object",
                                          "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                                          "properties": {
                                            "duration": {
                                              "type": "string",
                                              "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                                            },
                                            "factor": {
                                              "type": "integer",
                                              "format": "int64",
                                              "title": "Factor is a factor to multiply the base duration after each failed retry"
                                            },
                                            "maxDuration": {
                                              "type": "string",
                                              "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "limit": {
                                          "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                          "type": "integer",
                                          "format": "int64"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "syncOptions": {
                                      "type": "array",
                                      "title": "Options allow you to specify whole app sync-options",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "values": {
                          "type": "object",
                          "title": "Values contains key/value pairs which are passed directly as parameters to the template",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "list": {
                      "type": "object",
                      "title": "ListGenerator include items info",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "title": "+kubebuilder:validation:Optional",
                          "items": {
                            "description": "JSON represents any valid JSON value.\nThese types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.",
                            "type": "object",
                            "properties": {
                              "raw": {
                                "type": "string",
                                "format": "byte"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "elementsYaml": {
                          "type": "string"
                        },
                        "template": {
                          "type": "object",
                          "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
                          "properties": {
                            "metadata": {
                              "type": "object",
                              "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
                              "properties": {
                                "annotations": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "finalizers": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "labels": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "name": {
                                  "type": "string"
                                },
                                "namespace": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "spec": {
                              "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
                              "type": "object",
                              "properties": {
                                "destination": {
                                  "type": "object",
                                  "title": "ApplicationDestination holds information about the application's destination",
                                  "properties": {
                                    "name": {
                                      "description": "Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.",
                                      "type": "string"
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                                    },
                                    "server": {
                                      "description": "Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "ignoreDifferences": {
                                  "type": "array",
                                  "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                                  "items": {
                                    "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                                    "type": "object",
                                    "properties": {
                                      "group": {
                                        "type": "string"
                                      },
                                      "jqPathExpressions": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "jsonPointers": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "kind": {
                                        "type": "string"
                                      },
                                      "managedFieldsManagers": {
                                        "type": "array",
                                        "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "namespace": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "info": {
                                  "type": "array",
                                  "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "value": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "project": {
                                  "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                                  "type": "string"
                                },
                                "revisionHistoryLimit": {
                                  "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "source": {
                                  "type": "object",
                                  "title": "ApplicationSource contains all required information about the source of an application",
                                  "properties": {
                                    "chart": {
                                      "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                      "type": "string"
                                    },
                                    "directory": {
                                      "type": "object",
                                      "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                      "properties": {
                                        "exclude": {
                                          "type": "string",
                                          "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                        },
                                        "include": {
                                          "type": "string",
                                          "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                        },
                                        "jsonnet": {
                                          "type": "object",
                                          "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                          "properties": {
                                            "extVars": {
                                              "type": "array",
                                              "title": "ExtVars is a list of Jsonnet External Variables",
                                              "items": {
                                                "type": "object",
                                                "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                "properties": {
                                                  "code": {
                                                    "type": "boolean"
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "value": {
                                                    "type": "string"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "libs": {
                                              "type": "array",
                                              "title": "Additional library search dirs",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "tlas": {
                                              "type": "array",
                                              "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                              "items": {
                                                "type": "object",
                                                "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                "properties": {
                                                  "code": {
                                                    "type": "boolean"
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "value": {
                                                    "type": "string"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "recurse": {
                                          "type": "boolean",
                                          "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "helm": {
                                      "type": "object",
                                      "title": "ApplicationSourceHelm holds helm specific options",
                                      "properties": {
                                        "apiVersions": {
                                          "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "fileParameters": {
                                          "type": "array",
                                          "title": "FileParameters are file parameters to the helm template",
                                          "items": {
                                            "type": "object",
                                            "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "title": "Name is the name of the Helm parameter"
                                              },
                                              "path": {
                                                "type": "string",
                                                "title": "Path is the path to the file containing the values for the Helm parameter"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "ignoreMissingValueFiles": {
                                          "type": "boolean",
                                          "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                        },
                                        "kubeVersion": {
                                          "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                          "type": "string"
                                        },
                                        "namespace": {
                                          "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                          "type": "string"
                                        },
                                        "parameters": {
                                          "type": "array",
                                          "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                          "items": {
                                            "type": "object",
                                            "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                            "properties": {
                                              "forceString": {
                                                "type": "boolean",
                                                "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                              },
                                              "name": {
                                                "type": "string",
                                                "title": "Name is the name of the Helm parameter"
                                              },
                                              "value": {
                                                "type": "string",
                                                "title": "Value is the value for the Helm parameter"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "passCredentials": {
                                          "type": "boolean",
                                          "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                        },
                                        "releaseName": {
                                          "type": "string",
                                          "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                        },
                                        "skipCrds": {
                                          "type": "boolean",
                                          "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                        },
                                        "skipSchemaValidation": {
                                          "type": "boolean",
                                          "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                        },
                                        "skipTests": {
                                          "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                          "type": "boolean"
                                        },
                                        "valueFiles": {
                                          "type": "array",
                                          "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "values": {
                                          "type": "string",
                                          "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                        },
                                        "valuesObject": {
                                          "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                          "type": "object",
                                          "properties": {
                                            "raw": {
                                              "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                              "type": "string",
                                              "format": "byte"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "version": {
                                          "type": "string",
                                          "title": "Version is the Helm version to use for templating (\"3\")"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "kustomize": {
                                      "type": "object",
                                      "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                      "properties": {
                                        "apiVersions": {
                                          "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "commonAnnotations": {
                                          "type": "object",
                                          "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "commonAnnotationsEnvsubst": {
                                          "type": "boolean",
                                          "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                        },
                                        "commonLabels": {
                                          "type": "object",
                                          "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "components": {
                                          "type": "array",
                                          "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "forceCommonAnnotations": {
                                          "type": "boolean",
                                          "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                        },
                                        "forceCommonLabels": {
                                          "type": "boolean",
                                          "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                        },
                                        "ignoreMissingComponents": {
                                          "type": "boolean",
                                          "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                        },
                                        "images": {
                                          "type": "array",
                                          "title": "Images is a list of Kustomize image override specifications",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "kubeVersion": {
                                          "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                          "type": "string"
                                        },
                                        "labelIncludeTemplates": {
                                          "type": "boolean",
                                          "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                        },
                                        "labelWithoutSelector": {
                                          "type": "boolean",
                                          "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                        },
                                        "namePrefix": {
                                          "type": "string",
                                          "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                        },
                                        "nameSuffix": {
                                          "type": "string",
                                          "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                        },
                                        "namespace": {
                                          "type": "string",
                                          "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                        },
                                        "patches": {
                                          "type": "array",
                                          "title": "Patches is a list of Kustomize patches",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "options": {
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "boolean"
                                                }
                                              },
                                              "patch": {
                                                "type": "string"
                                              },
                                              "path": {
                                                "type": "string"
                                              },
                                              "target": {
                                                "type": "object",
                                                "properties": {
                                                  "annotationSelector": {
                                                    "type": "string"
                                                  },
                                                  "labelSelector": {
                                                    "type": "string"
                                                  },
                                                  "resId": {
                                                    "type": "object",
                                                    "properties": {
                                                      "gvk": {
                                                        "type": "object",
                                                        "properties": {
                                                          "group": {
                                                            "type": "string"
                                                          },
                                                          "kind": {
                                                            "type": "string"
                                                          },
                                                          "version": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      },
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "namespace": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "replicas": {
                                          "type": "array",
                                          "title": "Replicas is a list of Kustomize Replicas override specifications",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "count": {
                                                "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                "type": "object",
                                                "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                "properties": {
                                                  "intVal": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                  },
                                                  "strVal": {
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "name": {
                                                "type": "string",
                                                "title": "Name of Deployment or StatefulSet"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "version": {
                                          "type": "string",
                                          "title": "Version controls which version of Kustomize to use for rendering manifests"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "name": {
                                      "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                      "type": "string"
                                    },
                                    "plugin": {
                                      "type": "object",
                                      "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                      "properties": {
                                        "env": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "title": "EnvEntry represents an entry in the application's environment",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "title": "Name is the name of the variable, usually expressed in uppercase"
                                              },
                                              "value": {
                                                "type": "string",
                                                "title": "Value is the value of the variable"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "parameters": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "array": {
                                                "description": "Array is the value of an array type parameter.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "map": {
                                                "description": "Map is the value of a map type parameter.",
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              },
                                              "name": {
                                                "description": "Name is the name identifying a parameter.",
                                                "type": "string"
                                              },
                                              "string": {
                                                "description": "String_ is the value of a string type parameter.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "ref": {
                                      "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                      "type": "string"
                                    },
                                    "repoURL": {
                                      "type": "string",
                                      "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                    },
                                    "targetRevision": {
                                      "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "sourceHydrator": {
                                  "description": "SourceHydrator specifies a dry \"don't repeat yourself\" source for manifests, a sync source from which to sync\nhydrated manifests, and an optional hydrateTo location to act as a \"staging\" aread for hydrated manifests.",
                                  "type": "object",
                                  "properties": {
                                    "drySource": {
                                      "description": "DrySource specifies a location for dry \"don't repeat yourself\" manifest source information.",
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string",
                                          "title": "Path is a directory path within the Git repository where the manifests are located"
                                        },
                                        "repoURL": {
                                          "type": "string",
                                          "title": "RepoURL is the URL to the git repository that contains the application manifests"
                                        },
                                        "targetRevision": {
                                          "type": "string",
                                          "title": "TargetRevision defines the revision of the source to hydrate"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "hydrateTo": {
                                      "description": "HydrateTo specifies a location to which hydrated manifests should be pushed as a \"staging area\" before being moved to\nthe SyncSource. The RepoURL and Path are assumed based on the associated SyncSource config in the SourceHydrator.",
                                      "type": "object",
                                      "properties": {
                                        "targetBranch": {
                                          "type": "string",
                                          "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "syncSource": {
                                      "description": "SyncSource specifies a location from which hydrated manifests may be synced. RepoURL is assumed based on the\nassociated DrySource config in the SourceHydrator.",
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "description": "Path is a directory path within the git repository where hydrated manifests should be committed to and synced\nfrom. If hydrateTo is set, this is just the path from which hydrated manifests will be synced.",
                                          "type": "string"
                                        },
                                        "targetBranch": {
                                          "type": "string",
                                          "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "sources": {
                                  "type": "array",
                                  "title": "Sources is a reference to the location of the application's manifests or chart",
                                  "items": {
                                    "type": "object",
                                    "title": "ApplicationSource contains all required information about the source of an application",
                                    "properties": {
                                      "chart": {
                                        "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                        "type": "string"
                                      },
                                      "directory": {
                                        "type": "object",
                                        "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                        "properties": {
                                          "exclude": {
                                            "type": "string",
                                            "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                          },
                                          "include": {
                                            "type": "string",
                                            "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                          },
                                          "jsonnet": {
                                            "type": "object",
                                            "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                            "properties": {
                                              "extVars": {
                                                "type": "array",
                                                "title": "ExtVars is a list of Jsonnet External Variables",
                                                "items": {
                                                  "type": "object",
                                                  "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                  "properties": {
                                                    "code": {
                                                      "type": "boolean"
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              },
                                              "libs": {
                                                "type": "array",
                                                "title": "Additional library search dirs",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "tlas": {
                                                "type": "array",
                                                "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                "items": {
                                                  "type": "object",
                                                  "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                  "properties": {
                                                    "code": {
                                                      "type": "boolean"
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "recurse": {
                                            "type": "boolean",
                                            "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "helm": {
                                        "type": "object",
                                        "title": "ApplicationSourceHelm holds helm specific options",
                                        "properties": {
                                          "apiVersions": {
                                            "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "fileParameters": {
                                            "type": "array",
                                            "title": "FileParameters are file parameters to the helm template",
                                            "items": {
                                              "type": "object",
                                              "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name is the name of the Helm parameter"
                                                },
                                                "path": {
                                                  "type": "string",
                                                  "title": "Path is the path to the file containing the values for the Helm parameter"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "ignoreMissingValueFiles": {
                                            "type": "boolean",
                                            "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                          },
                                          "kubeVersion": {
                                            "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                            "type": "string"
                                          },
                                          "namespace": {
                                            "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                            "type": "string"
                                          },
                                          "parameters": {
                                            "type": "array",
                                            "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                            "items": {
                                              "type": "object",
                                              "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                              "properties": {
                                                "forceString": {
                                                  "type": "boolean",
                                                  "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name is the name of the Helm parameter"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "title": "Value is the value for the Helm parameter"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "passCredentials": {
                                            "type": "boolean",
                                            "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                          },
                                          "releaseName": {
                                            "type": "string",
                                            "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                          },
                                          "skipCrds": {
                                            "type": "boolean",
                                            "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                          },
                                          "skipSchemaValidation": {
                                            "type": "boolean",
                                            "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                          },
                                          "skipTests": {
                                            "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                            "type": "boolean"
                                          },
                                          "valueFiles": {
                                            "type": "array",
                                            "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "values": {
                                            "type": "string",
                                            "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                          },
                                          "valuesObject": {
                                            "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                            "type": "object",
                                            "properties": {
                                              "raw": {
                                                "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                "type": "string",
                                                "format": "byte"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "version": {
                                            "type": "string",
                                            "title": "Version is the Helm version to use for templating (\"3\")"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "kustomize": {
                                        "type": "object",
                                        "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                        "properties": {
                                          "apiVersions": {
                                            "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "commonAnnotations": {
                                            "type": "object",
                                            "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "commonAnnotationsEnvsubst": {
                                            "type": "boolean",
                                            "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                          },
                                          "commonLabels": {
                                            "type": "object",
                                            "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "components": {
                                            "type": "array",
                                            "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "forceCommonAnnotations": {
                                            "type": "boolean",
                                            "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                          },
                                          "forceCommonLabels": {
                                            "type": "boolean",
                                            "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                          },
                                          "ignoreMissingComponents": {
                                            "type": "boolean",
                                            "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                          },
                                          "images": {
                                            "type": "array",
                                            "title": "Images is a list of Kustomize image override specifications",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "kubeVersion": {
                                            "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                            "type": "string"
                                          },
                                          "labelIncludeTemplates": {
                                            "type": "boolean",
                                            "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                          },
                                          "labelWithoutSelector": {
                                            "type": "boolean",
                                            "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                          },
                                          "namePrefix": {
                                            "type": "string",
                                            "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                          },
                                          "nameSuffix": {
                                            "type": "string",
                                            "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                          },
                                          "namespace": {
                                            "type": "string",
                                            "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                          },
                                          "patches": {
                                            "type": "array",
                                            "title": "Patches is a list of Kustomize patches",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "options": {
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "type": "boolean"
                                                  }
                                                },
                                                "patch": {
                                                  "type": "string"
                                                },
                                                "path": {
                                                  "type": "string"
                                                },
                                                "target": {
                                                  "type": "object",
                                                  "properties": {
                                                    "annotationSelector": {
                                                      "type": "string"
                                                    },
                                                    "labelSelector": {
                                                      "type": "string"
                                                    },
                                                    "resId": {
                                                      "type": "object",
                                                      "properties": {
                                                        "gvk": {
                                                          "type": "object",
                                                          "properties": {
                                                            "group": {
                                                              "type": "string"
                                                            },
                                                            "kind": {
                                                              "type": "string"
                                                            },
                                                            "version": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        },
                                                        "name": {
                                                          "type": "string"
                                                        },
                                                        "namespace": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "replicas": {
                                            "type": "array",
                                            "title": "Replicas is a list of Kustomize Replicas override specifications",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "count": {
                                                  "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                  "type": "object",
                                                  "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                  "properties": {
                                                    "intVal": {
                                                      "type": "integer",
                                                      "format": "int32"
                                                    },
                                                    "strVal": {
                                                      "type": "string"
                                                    },
                                                    "type": {
                                                      "type": "integer",
                                                      "format": "int64"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name of Deployment or StatefulSet"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "version": {
                                            "type": "string",
                                            "title": "Version controls which version of Kustomize to use for rendering manifests"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "name": {
                                        "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                        "type": "string"
                                      },
                                      "path": {
                                        "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                        "type": "string"
                                      },
                                      "plugin": {
                                        "type": "object",
                                        "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                        "properties": {
                                          "env": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "title": "EnvEntry represents an entry in the application's environment",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name is the name of the variable, usually expressed in uppercase"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "title": "Value is the value of the variable"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "parameters": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "array": {
                                                  "description": "Array is the value of an array type parameter.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "map": {
                                                  "description": "Map is the value of a map type parameter.",
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "type": "string"
                                                  }
                                                },
                                                "name": {
                                                  "description": "Name is the name identifying a parameter.",
                                                  "type": "string"
                                                },
                                                "string": {
                                                  "description": "String_ is the value of a string type parameter.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "ref": {
                                        "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                        "type": "string"
                                      },
                                      "repoURL": {
                                        "type": "string",
                                        "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                      },
                                      "targetRevision": {
                                        "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "syncPolicy": {
                                  "type": "object",
                                  "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                                  "properties": {
                                    "automated": {
                                      "type": "object",
                                      "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                                      "properties": {
                                        "allowEmpty": {
                                          "type": "boolean",
                                          "title": "AllowEmpty allows apps have zero live resources (default: false)"
                                        },
                                        "enable": {
                                          "type": "boolean",
                                          "title": "Enable allows apps to explicitly control automated sync"
                                        },
                                        "prune": {
                                          "type": "boolean",
                                          "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                                        },
                                        "selfHeal": {
                                          "type": "boolean",
                                          "title": "SelfHeal specifies whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "managedNamespaceMetadata": {
                                      "type": "object",
                                      "properties": {
                                        "annotations": {
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "labels": {
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "retry": {
                                      "type": "object",
                                      "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                                      "properties": {
                                        "backoff": {
                                          "type": "object",
                                          "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                                          "properties": {
                                            "duration": {
                                              "type": "string",
                                              "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                                            },
                                            "factor": {
                                              "type": "integer",
                                              "format": "int64",
                                              "title": "Factor is a factor to multiply the base duration after each failed retry"
                                            },
                                            "maxDuration": {
                                              "type": "string",
                                              "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "limit": {
                                          "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                          "type": "integer",
                                          "format": "int64"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "syncOptions": {
                                      "type": "array",
                                      "title": "Options allow you to specify whole app sync-options",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "matrix": {
                      "description": "MatrixGenerator generates the cartesian product of two sets of parameters. The parameters are defined by two nested\ngenerators.",
                      "type": "object",
                      "properties": {
                        "generators": {
                          "type": "array",
                          "items": {
                            "description": "ApplicationSetNestedGenerator represents a generator nested within a combination-type generator (MatrixGenerator or\nMergeGenerator).",
                            "type": "object",
                            "properties": {
                              "clusterDecisionResource": {
                                "description": "DuckType defines a generator to match against clusters registered with ArgoCD.",
                                "type": "object",
                                "properties": {
                                  "configMapRef": {
                                    "type": "string",
                                    "title": "ConfigMapRef is a ConfigMap with the duck type definitions needed to retrieve the data\n             this includes apiVersion(group/version), kind, matchKey and validation settings\nName is the resource name of the kind, group and version, defined in the ConfigMapRef\nRequeueAfterSeconds is how long before the duckType will be rechecked for a change"
                                  },
                                  "labelSelector": {
                                    "type": "object",
                                    "title": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.\n+structType=atomic",
                                    "properties": {
                                      "matchExpressions": {
                                        "type": "array",
                                        "title": "matchExpressions is a list of label selector requirements. The requirements are ANDed.\n+optional\n+listType=atomic",
                                        "items": {
                                          "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                          "type": "object",
                                          "properties": {
                                            "key": {
                                              "description": "key is the label key that the selector applies to.",
                                              "type": "string"
                                            },
                                            "operator": {
                                              "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                              "type": "string"
                                            },
                                            "values": {
                                              "type": "array",
                                              "title": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.\n+optional\n+listType=atomic",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "matchLabels": {
                                        "type": "object",
                                        "title": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n+optional",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "requeueAfterSeconds": {
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "template": {
                                    "type": "object",
                                    "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
                                    "properties": {
                                      "metadata": {
                                        "type": "object",
                                        "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
                                        "properties": {
                                          "annotations": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "finalizers": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "labels": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "namespace": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "spec": {
                                        "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
                                        "type": "object",
                                        "properties": {
                                          "destination": {
                                            "type": "object",
                                            "title": "ApplicationDestination holds information about the application's destination",
                                            "properties": {
                                              "name": {
                                                "description": "Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.",
                                                "type": "string"
                                              },
                                              "namespace": {
                                                "type": "string",
                                                "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                                              },
                                              "server": {
                                                "description": "Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "ignoreDifferences": {
                                            "type": "array",
                                            "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                                            "items": {
                                              "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                                              "type": "object",
                                              "properties": {
                                                "group": {
                                                  "type": "string"
                                                },
                                                "jqPathExpressions": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "jsonPointers": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "kind": {
                                                  "type": "string"
                                                },
                                                "managedFieldsManagers": {
                                                  "type": "array",
                                                  "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "name": {
                                                  "type": "string"
                                                },
                                                "namespace": {
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "info": {
                                            "type": "array",
                                            "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "project": {
                                            "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                                            "type": "string"
                                          },
                                          "revisionHistoryLimit": {
                                            "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                                            "type": "integer",
                                            "format": "int64"
                                          },
                                          "source": {
                                            "type": "object",
                                            "title": "ApplicationSource contains all required information about the source of an application",
                                            "properties": {
                                              "chart": {
                                                "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                                "type": "string"
                                              },
                                              "directory": {
                                                "type": "object",
                                                "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                                "properties": {
                                                  "exclude": {
                                                    "type": "string",
                                                    "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                                  },
                                                  "include": {
                                                    "type": "string",
                                                    "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                                  },
                                                  "jsonnet": {
                                                    "type": "object",
                                                    "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                                    "properties": {
                                                      "extVars": {
                                                        "type": "array",
                                                        "title": "ExtVars is a list of Jsonnet External Variables",
                                                        "items": {
                                                          "type": "object",
                                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                          "properties": {
                                                            "code": {
                                                              "type": "boolean"
                                                            },
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      },
                                                      "libs": {
                                                        "type": "array",
                                                        "title": "Additional library search dirs",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "tlas": {
                                                        "type": "array",
                                                        "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                        "items": {
                                                          "type": "object",
                                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                          "properties": {
                                                            "code": {
                                                              "type": "boolean"
                                                            },
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "recurse": {
                                                    "type": "boolean",
                                                    "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "helm": {
                                                "type": "object",
                                                "title": "ApplicationSourceHelm holds helm specific options",
                                                "properties": {
                                                  "apiVersions": {
                                                    "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "fileParameters": {
                                                    "type": "array",
                                                    "title": "FileParameters are file parameters to the helm template",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the Helm parameter"
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "title": "Path is the path to the file containing the values for the Helm parameter"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "ignoreMissingValueFiles": {
                                                    "type": "boolean",
                                                    "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                                  },
                                                  "kubeVersion": {
                                                    "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                    "type": "string"
                                                  },
                                                  "namespace": {
                                                    "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                                    "type": "string"
                                                  },
                                                  "parameters": {
                                                    "type": "array",
                                                    "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                                      "properties": {
                                                        "forceString": {
                                                          "type": "boolean",
                                                          "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the Helm parameter"
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "title": "Value is the value for the Helm parameter"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "passCredentials": {
                                                    "type": "boolean",
                                                    "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                                  },
                                                  "releaseName": {
                                                    "type": "string",
                                                    "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                                  },
                                                  "skipCrds": {
                                                    "type": "boolean",
                                                    "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                                  },
                                                  "skipSchemaValidation": {
                                                    "type": "boolean",
                                                    "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                                  },
                                                  "skipTests": {
                                                    "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                                    "type": "boolean"
                                                  },
                                                  "valueFiles": {
                                                    "type": "array",
                                                    "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "values": {
                                                    "type": "string",
                                                    "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                                  },
                                                  "valuesObject": {
                                                    "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                                    "type": "object",
                                                    "properties": {
                                                      "raw": {
                                                        "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                        "type": "string",
                                                        "format": "byte"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "version": {
                                                    "type": "string",
                                                    "title": "Version is the Helm version to use for templating (\"3\")"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "kustomize": {
                                                "type": "object",
                                                "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                                "properties": {
                                                  "apiVersions": {
                                                    "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "commonAnnotations": {
                                                    "type": "object",
                                                    "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "commonAnnotationsEnvsubst": {
                                                    "type": "boolean",
                                                    "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                                  },
                                                  "commonLabels": {
                                                    "type": "object",
                                                    "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "components": {
                                                    "type": "array",
                                                    "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "forceCommonAnnotations": {
                                                    "type": "boolean",
                                                    "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                                  },
                                                  "forceCommonLabels": {
                                                    "type": "boolean",
                                                    "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                                  },
                                                  "ignoreMissingComponents": {
                                                    "type": "boolean",
                                                    "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                                  },
                                                  "images": {
                                                    "type": "array",
                                                    "title": "Images is a list of Kustomize image override specifications",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "kubeVersion": {
                                                    "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                    "type": "string"
                                                  },
                                                  "labelIncludeTemplates": {
                                                    "type": "boolean",
                                                    "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                                  },
                                                  "labelWithoutSelector": {
                                                    "type": "boolean",
                                                    "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                                  },
                                                  "namePrefix": {
                                                    "type": "string",
                                                    "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                                  },
                                                  "nameSuffix": {
                                                    "type": "string",
                                                    "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                                  },
                                                  "namespace": {
                                                    "type": "string",
                                                    "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                                  },
                                                  "patches": {
                                                    "type": "array",
                                                    "title": "Patches is a list of Kustomize patches",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "options": {
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "type": "boolean"
                                                          }
                                                        },
                                                        "patch": {
                                                          "type": "string"
                                                        },
                                                        "path": {
                                                          "type": "string"
                                                        },
                                                        "target": {
                                                          "type": "object",
                                                          "properties": {
                                                            "annotationSelector": {
                                                              "type": "string"
                                                            },
                                                            "labelSelector": {
                                                              "type": "string"
                                                            },
                                                            "resId": {
                                                              "type": "object",
                                                              "properties": {
                                                                "gvk": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "group": {
                                                                      "type": "string"
                                                                    },
                                                                    "kind": {
                                                                      "type": "string"
                                                                    },
                                                                    "version": {
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "additionalProperties": false
                                                                },
                                                                "name": {
                                                                  "type": "string"
                                                                },
                                                                "namespace": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "additionalProperties": false
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "replicas": {
                                                    "type": "array",
                                                    "title": "Replicas is a list of Kustomize Replicas override specifications",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "count": {
                                                          "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                          "type": "object",
                                                          "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                          "properties": {
                                                            "intVal": {
                                                              "type": "integer",
                                                              "format": "int32"
                                                            },
                                                            "strVal": {
                                                              "type": "string"
                                                            },
                                                            "type": {
                                                              "type": "integer",
                                                              "format": "int64"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name of Deployment or StatefulSet"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "version": {
                                                    "type": "string",
                                                    "title": "Version controls which version of Kustomize to use for rendering manifests"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "name": {
                                                "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                                "type": "string"
                                              },
                                              "path": {
                                                "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                                "type": "string"
                                              },
                                              "plugin": {
                                                "type": "object",
                                                "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                                "properties": {
                                                  "env": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "EnvEntry represents an entry in the application's environment",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the variable, usually expressed in uppercase"
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "title": "Value is the value of the variable"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "parameters": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "array": {
                                                          "description": "Array is the value of an array type parameter.",
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "map": {
                                                          "description": "Map is the value of a map type parameter.",
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "name": {
                                                          "description": "Name is the name identifying a parameter.",
                                                          "type": "string"
                                                        },
                                                        "string": {
                                                          "description": "String_ is the value of a string type parameter.",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "ref": {
                                                "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                                "type": "string"
                                              },
                                              "repoURL": {
                                                "type": "string",
                                                "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                              },
                                              "targetRevision": {
                                                "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "sourceHydrator": {
                                            "description": "SourceHydrator specifies a dry \"don't repeat yourself\" source for manifests, a sync source from which to sync\nhydrated manifests, and an optional hydrateTo location to act as a \"staging\" aread for hydrated manifests.",
                                            "type": "object",
                                            "properties": {
                                              "drySource": {
                                                "description": "DrySource specifies a location for dry \"don't repeat yourself\" manifest source information.",
                                                "type": "object",
                                                "properties": {
                                                  "path": {
                                                    "type": "string",
                                                    "title": "Path is a directory path within the Git repository where the manifests are located"
                                                  },
                                                  "repoURL": {
                                                    "type": "string",
                                                    "title": "RepoURL is the URL to the git repository that contains the application manifests"
                                                  },
                                                  "targetRevision": {
                                                    "type": "string",
                                                    "title": "TargetRevision defines the revision of the source to hydrate"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "hydrateTo": {
                                                "description": "HydrateTo specifies a location to which hydrated manifests should be pushed as a \"staging area\" before being moved to\nthe SyncSource. The RepoURL and Path are assumed based on the associated SyncSource config in the SourceHydrator.",
                                                "type": "object",
                                                "properties": {
                                                  "targetBranch": {
                                                    "type": "string",
                                                    "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "syncSource": {
                                                "description": "SyncSource specifies a location from which hydrated manifests may be synced. RepoURL is assumed based on the\nassociated DrySource config in the SourceHydrator.",
                                                "type": "object",
                                                "properties": {
                                                  "path": {
                                                    "description": "Path is a directory path within the git repository where hydrated manifests should be committed to and synced\nfrom. If hydrateTo is set, this is just the path from which hydrated manifests will be synced.",
                                                    "type": "string"
                                                  },
                                                  "targetBranch": {
                                                    "type": "string",
                                                    "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "sources": {
                                            "type": "array",
                                            "title": "Sources is a reference to the location of the application's manifests or chart",
                                            "items": {
                                              "type": "object",
                                              "title": "ApplicationSource contains all required information about the source of an application",
                                              "properties": {
                                                "chart": {
                                                  "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                                  "type": "string"
                                                },
                                                "directory": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                                  "properties": {
                                                    "exclude": {
                                                      "type": "string",
                                                      "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                                    },
                                                    "include": {
                                                      "type": "string",
                                                      "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                                    },
                                                    "jsonnet": {
                                                      "type": "object",
                                                      "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                                      "properties": {
                                                        "extVars": {
                                                          "type": "array",
                                                          "title": "ExtVars is a list of Jsonnet External Variables",
                                                          "items": {
                                                            "type": "object",
                                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                            "properties": {
                                                              "code": {
                                                                "type": "boolean"
                                                              },
                                                              "name": {
                                                                "type": "string"
                                                              },
                                                              "value": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        },
                                                        "libs": {
                                                          "type": "array",
                                                          "title": "Additional library search dirs",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "tlas": {
                                                          "type": "array",
                                                          "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                          "items": {
                                                            "type": "object",
                                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                            "properties": {
                                                              "code": {
                                                                "type": "boolean"
                                                              },
                                                              "name": {
                                                                "type": "string"
                                                              },
                                                              "value": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    },
                                                    "recurse": {
                                                      "type": "boolean",
                                                      "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "helm": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceHelm holds helm specific options",
                                                  "properties": {
                                                    "apiVersions": {
                                                      "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "fileParameters": {
                                                      "type": "array",
                                                      "title": "FileParameters are file parameters to the helm template",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the Helm parameter"
                                                          },
                                                          "path": {
                                                            "type": "string",
                                                            "title": "Path is the path to the file containing the values for the Helm parameter"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "ignoreMissingValueFiles": {
                                                      "type": "boolean",
                                                      "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                                    },
                                                    "kubeVersion": {
                                                      "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                      "type": "string"
                                                    },
                                                    "namespace": {
                                                      "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                                      "type": "string"
                                                    },
                                                    "parameters": {
                                                      "type": "array",
                                                      "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                                        "properties": {
                                                          "forceString": {
                                                            "type": "boolean",
                                                            "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                          },
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the Helm parameter"
                                                          },
                                                          "value": {
                                                            "type": "string",
                                                            "title": "Value is the value for the Helm parameter"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "passCredentials": {
                                                      "type": "boolean",
                                                      "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                                    },
                                                    "releaseName": {
                                                      "type": "string",
                                                      "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                                    },
                                                    "skipCrds": {
                                                      "type": "boolean",
                                                      "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                                    },
                                                    "skipSchemaValidation": {
                                                      "type": "boolean",
                                                      "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                                    },
                                                    "skipTests": {
                                                      "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                                      "type": "boolean"
                                                    },
                                                    "valueFiles": {
                                                      "type": "array",
                                                      "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "values": {
                                                      "type": "string",
                                                      "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                                    },
                                                    "valuesObject": {
                                                      "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                                      "type": "object",
                                                      "properties": {
                                                        "raw": {
                                                          "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                          "type": "string",
                                                          "format": "byte"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    },
                                                    "version": {
                                                      "type": "string",
                                                      "title": "Version is the Helm version to use for templating (\"3\")"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "kustomize": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                                  "properties": {
                                                    "apiVersions": {
                                                      "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "commonAnnotations": {
                                                      "type": "object",
                                                      "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                                      "additionalProperties": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "commonAnnotationsEnvsubst": {
                                                      "type": "boolean",
                                                      "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                                    },
                                                    "commonLabels": {
                                                      "type": "object",
                                                      "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                                      "additionalProperties": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "components": {
                                                      "type": "array",
                                                      "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "forceCommonAnnotations": {
                                                      "type": "boolean",
                                                      "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                                    },
                                                    "forceCommonLabels": {
                                                      "type": "boolean",
                                                      "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                                    },
                                                    "ignoreMissingComponents": {
                                                      "type": "boolean",
                                                      "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                                    },
                                                    "images": {
                                                      "type": "array",
                                                      "title": "Images is a list of Kustomize image override specifications",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "kubeVersion": {
                                                      "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                      "type": "string"
                                                    },
                                                    "labelIncludeTemplates": {
                                                      "type": "boolean",
                                                      "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                                    },
                                                    "labelWithoutSelector": {
                                                      "type": "boolean",
                                                      "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                                    },
                                                    "namePrefix": {
                                                      "type": "string",
                                                      "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                                    },
                                                    "nameSuffix": {
                                                      "type": "string",
                                                      "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                                    },
                                                    "namespace": {
                                                      "type": "string",
                                                      "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                                    },
                                                    "patches": {
                                                      "type": "array",
                                                      "title": "Patches is a list of Kustomize patches",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "options": {
                                                            "type": "object",
                                                            "additionalProperties": {
                                                              "type": "boolean"
                                                            }
                                                          },
                                                          "patch": {
                                                            "type": "string"
                                                          },
                                                          "path": {
                                                            "type": "string"
                                                          },
                                                          "target": {
                                                            "type": "object",
                                                            "properties": {
                                                              "annotationSelector": {
                                                                "type": "string"
                                                              },
                                                              "labelSelector": {
                                                                "type": "string"
                                                              },
                                                              "resId": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "gvk": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "group": {
                                                                        "type": "string"
                                                                      },
                                                                      "kind": {
                                                                        "type": "string"
                                                                      },
                                                                      "version": {
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "additionalProperties": false
                                                                  },
                                                                  "name": {
                                                                    "type": "string"
                                                                  },
                                                                  "namespace": {
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "additionalProperties": false
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "replicas": {
                                                      "type": "array",
                                                      "title": "Replicas is a list of Kustomize Replicas override specifications",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "count": {
                                                            "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                            "type": "object",
                                                            "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                            "properties": {
                                                              "intVal": {
                                                                "type": "integer",
                                                                "format": "int32"
                                                              },
                                                              "strVal": {
                                                                "type": "string"
                                                              },
                                                              "type": {
                                                                "type": "integer",
                                                                "format": "int64"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          },
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name of Deployment or StatefulSet"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "version": {
                                                      "type": "string",
                                                      "title": "Version controls which version of Kustomize to use for rendering manifests"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "name": {
                                                  "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                                  "type": "string"
                                                },
                                                "path": {
                                                  "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                                  "type": "string"
                                                },
                                                "plugin": {
                                                  "type": "object",
                                                  "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                                  "properties": {
                                                    "env": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "EnvEntry represents an entry in the application's environment",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the variable, usually expressed in uppercase"
                                                          },
                                                          "value": {
                                                            "type": "string",
                                                            "title": "Value is the value of the variable"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "parameters": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "array": {
                                                            "description": "Array is the value of an array type parameter.",
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "map": {
                                                            "description": "Map is the value of a map type parameter.",
                                                            "type": "object",
                                                            "additionalProperties": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "name": {
                                                            "description": "Name is the name identifying a parameter.",
                                                            "type": "string"
                                                          },
                                                          "string": {
                                                            "description": "String_ is the value of a string type parameter.",
                                                            "type": "string"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "ref": {
                                                  "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                                  "type": "string"
                                                },
                                                "repoURL": {
                                                  "type": "string",
                                                  "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                                },
                                                "targetRevision": {
                                                  "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "syncPolicy": {
                                            "type": "object",
                                            "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                                            "properties": {
                                              "automated": {
                                                "type": "object",
                                                "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                                                "properties": {
                                                  "allowEmpty": {
                                                    "type": "boolean",
                                                    "title": "AllowEmpty allows apps have zero live resources (default: false)"
                                                  },
                                                  "enable": {
                                                    "type": "boolean",
                                                    "title": "Enable allows apps to explicitly control automated sync"
                                                  },
                                                  "prune": {
                                                    "type": "boolean",
                                                    "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                                                  },
                                                  "selfHeal": {
                                                    "type": "boolean",
                                                    "title": "SelfHeal specifies whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "managedNamespaceMetadata": {
                                                "type": "object",
                                                "properties": {
                                                  "annotations": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "labels": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "retry": {
                                                "type": "object",
                                                "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                                                "properties": {
                                                  "backoff": {
                                                    "type": "object",
                                                    "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                                                    "properties": {
                                                      "duration": {
                                                        "type": "string",
                                                        "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                                                      },
                                                      "factor": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "title": "Factor is a factor to multiply the base duration after each failed retry"
                                                      },
                                                      "maxDuration": {
                                                        "type": "string",
                                                        "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "limit": {
                                                    "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                                    "type": "integer",
                                                    "format": "int64"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "syncOptions": {
                                                "type": "array",
                                                "title": "Options allow you to specify whole app sync-options",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "values": {
                                    "type": "object",
                                    "title": "Values contains key/value pairs which are passed directly as parameters to the template",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "clusters": {
                                "description": "ClusterGenerator defines a generator to match against clusters registered with ArgoCD.",
                                "type": "object",
                                "properties": {
                                  "flatList": {
                                    "type": "boolean",
                                    "title": "returns the clusters a single 'clusters' value in the template"
                                  },
                                  "selector": {
                                    "type": "object",
                                    "title": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.\n+structType=atomic",
                                    "properties": {
                                      "matchExpressions": {
                                        "type": "array",
                                        "title": "matchExpressions is a list of label selector requirements. The requirements are ANDed.\n+optional\n+listType=atomic",
                                        "items": {
                                          "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                          "type": "object",
                                          "properties": {
                                            "key": {
                                              "description": "key is the label key that the selector applies to.",
                                              "type": "string"
                                            },
                                            "operator": {
                                              "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                              "type": "string"
                                            },
                                            "values": {
                                              "type": "array",
                                              "title": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.\n+optional\n+listType=atomic",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "matchLabels": {
                                        "type": "object",
                                        "title": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n+optional",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "template": {
                                    "type": "object",
                                    "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
                                    "properties": {
                                      "metadata": {
                                        "type": "object",
                                        "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
                                        "properties": {
                                          "annotations": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "finalizers": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "labels": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "namespace": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "spec": {
                                        "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
                                        "type": "object",
                                        "properties": {
                                          "destination": {
                                            "type": "object",
                                            "title": "ApplicationDestination holds information about the application's destination",
                                            "properties": {
                                              "name": {
                                                "description": "Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.",
                                                "type": "string"
                                              },
                                              "namespace": {
                                                "type": "string",
                                                "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                                              },
                                              "server": {
                                                "description": "Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "ignoreDifferences": {
                                            "type": "array",
                                            "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                                            "items": {
                                              "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                                              "type": "object",
                                              "properties": {
                                                "group": {
                                                  "type": "string"
                                                },
                                                "jqPathExpressions": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "jsonPointers": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "kind": {
                                                  "type": "string"
                                                },
                                                "managedFieldsManagers": {
                                                  "type": "array",
                                                  "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "name": {
                                                  "type": "string"
                                                },
                                                "namespace": {
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "info": {
                                            "type": "array",
                                            "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "project": {
                                            "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                                            "type": "string"
                                          },
                                          "revisionHistoryLimit": {
                                            "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                                            "type": "integer",
                                            "format": "int64"
                                          },
                                          "source": {
                                            "type": "object",
                                            "title": "ApplicationSource contains all required information about the source of an application",
                                            "properties": {
                                              "chart": {
                                                "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                                "type": "string"
                                              },
                                              "directory": {
                                                "type": "object",
                                                "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                                "properties": {
                                                  "exclude": {
                                                    "type": "string",
                                                    "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                                  },
                                                  "include": {
                                                    "type": "string",
                                                    "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                                  },
                                                  "jsonnet": {
                                                    "type": "object",
                                                    "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                                    "properties": {
                                                      "extVars": {
                                                        "type": "array",
                                                        "title": "ExtVars is a list of Jsonnet External Variables",
                                                        "items": {
                                                          "type": "object",
                                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                          "properties": {
                                                            "code": {
                                                              "type": "boolean"
                                                            },
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      },
                                                      "libs": {
                                                        "type": "array",
                                                        "title": "Additional library search dirs",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "tlas": {
                                                        "type": "array",
                                                        "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                        "items": {
                                                          "type": "object",
                                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                          "properties": {
                                                            "code": {
                                                              "type": "boolean"
                                                            },
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "recurse": {
                                                    "type": "boolean",
                                                    "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "helm": {
                                                "type": "object",
                                                "title": "ApplicationSourceHelm holds helm specific options",
                                                "properties": {
                                                  "apiVersions": {
                                                    "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "fileParameters": {
                                                    "type": "array",
                                                    "title": "FileParameters are file parameters to the helm template",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the Helm parameter"
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "title": "Path is the path to the file containing the values for the Helm parameter"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "ignoreMissingValueFiles": {
                                                    "type": "boolean",
                                                    "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                                  },
                                                  "kubeVersion": {
                                                    "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                    "type": "string"
                                                  },
                                                  "namespace": {
                                                    "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                                    "type": "string"
                                                  },
                                                  "parameters": {
                                                    "type": "array",
                                                    "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                                      "properties": {
                                                        "forceString": {
                                                          "type": "boolean",
                                                          "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the Helm parameter"
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "title": "Value is the value for the Helm parameter"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "passCredentials": {
                                                    "type": "boolean",
                                                    "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                                  },
                                                  "releaseName": {
                                                    "type": "string",
                                                    "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                                  },
                                                  "skipCrds": {
                                                    "type": "boolean",
                                                    "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                                  },
                                                  "skipSchemaValidation": {
                                                    "type": "boolean",
                                                    "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                                  },
                                                  "skipTests": {
                                                    "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                                    "type": "boolean"
                                                  },
                                                  "valueFiles": {
                                                    "type": "array",
                                                    "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "values": {
                                                    "type": "string",
                                                    "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                                  },
                                                  "valuesObject": {
                                                    "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                                    "type": "object",
                                                    "properties": {
                                                      "raw": {
                                                        "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                        "type": "string",
                                                        "format": "byte"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "version": {
                                                    "type": "string",
                                                    "title": "Version is the Helm version to use for templating (\"3\")"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "kustomize": {
                                                "type": "object",
                                                "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                                "properties": {
                                                  "apiVersions": {
                                                    "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "commonAnnotations": {
                                                    "type": "object",
                                                    "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "commonAnnotationsEnvsubst": {
                                                    "type": "boolean",
                                                    "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                                  },
                                                  "commonLabels": {
                                                    "type": "object",
                                                    "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "components": {
                                                    "type": "array",
                                                    "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "forceCommonAnnotations": {
                                                    "type": "boolean",
                                                    "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                                  },
                                                  "forceCommonLabels": {
                                                    "type": "boolean",
                                                    "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                                  },
                                                  "ignoreMissingComponents": {
                                                    "type": "boolean",
                                                    "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                                  },
                                                  "images": {
                                                    "type": "array",
                                                    "title": "Images is a list of Kustomize image override specifications",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "kubeVersion": {
                                                    "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                    "type": "string"
                                                  },
                                                  "labelIncludeTemplates": {
                                                    "type": "boolean",
                                                    "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                                  },
                                                  "labelWithoutSelector": {
                                                    "type": "boolean",
                                                    "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                                  },
                                                  "namePrefix": {
                                                    "type": "string",
                                                    "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                                  },
                                                  "nameSuffix": {
                                                    "type": "string",
                                                    "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                                  },
                                                  "namespace": {
                                                    "type": "string",
                                                    "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                                  },
                                                  "patches": {
                                                    "type": "array",
                                                    "title": "Patches is a list of Kustomize patches",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "options": {
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "type": "boolean"
                                                          }
                                                        },
                                                        "patch": {
                                                          "type": "string"
                                                        },
                                                        "path": {
                                                          "type": "string"
                                                        },
                                                        "target": {
                                                          "type": "object",
                                                          "properties": {
                                                            "annotationSelector": {
                                                              "type": "string"
                                                            },
                                                            "labelSelector": {
                                                              "type": "string"
                                                            },
                                                            "resId": {
                                                              "type": "object",
                                                              "properties": {
                                                                "gvk": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "group": {
                                                                      "type": "string"
                                                                    },
                                                                    "kind": {
                                                                      "type": "string"
                                                                    },
                                                                    "version": {
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "additionalProperties": false
                                                                },
                                                                "name": {
                                                                  "type": "string"
                                                                },
                                                                "namespace": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "additionalProperties": false
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "replicas": {
                                                    "type": "array",
                                                    "title": "Replicas is a list of Kustomize Replicas override specifications",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "count": {
                                                          "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                          "type": "object",
                                                          "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                          "properties": {
                                                            "intVal": {
                                                              "type": "integer",
                                                              "format": "int32"
                                                            },
                                                            "strVal": {
                                                              "type": "string"
                                                            },
                                                            "type": {
                                                              "type": "integer",
                                                              "format": "int64"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name of Deployment or StatefulSet"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "version": {
                                                    "type": "string",
                                                    "title": "Version controls which version of Kustomize to use for rendering manifests"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "name": {
                                                "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                                "type": "string"
                                              },
                                              "path": {
                                                "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                                "type": "string"
                                              },
                                              "plugin": {
                                                "type": "object",
                                                "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                                "properties": {
                                                  "env": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "EnvEntry represents an entry in the application's environment",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the variable, usually expressed in uppercase"
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "title": "Value is the value of the variable"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "parameters": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "array": {
                                                          "description": "Array is the value of an array type parameter.",
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "map": {
                                                          "description": "Map is the value of a map type parameter.",
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "name": {
                                                          "description": "Name is the name identifying a parameter.",
                                                          "type": "string"
                                                        },
                                                        "string": {
                                                          "description": "String_ is the value of a string type parameter.",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "ref": {
                                                "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                                "type": "string"
                                              },
                                              "repoURL": {
                                                "type": "string",
                                                "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                              },
                                              "targetRevision": {
                                                "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "sourceHydrator": {
                                            "description": "SourceHydrator specifies a dry \"don't repeat yourself\" source for manifests, a sync source from which to sync\nhydrated manifests, and an optional hydrateTo location to act as a \"staging\" aread for hydrated manifests.",
                                            "type": "object",
                                            "properties": {
                                              "drySource": {
                                                "description": "DrySource specifies a location for dry \"don't repeat yourself\" manifest source information.",
                                                "type": "object",
                                                "properties": {
                                                  "path": {
                                                    "type": "string",
                                                    "title": "Path is a directory path within the Git repository where the manifests are located"
                                                  },
                                                  "repoURL": {
                                                    "type": "string",
                                                    "title": "RepoURL is the URL to the git repository that contains the application manifests"
                                                  },
                                                  "targetRevision": {
                                                    "type": "string",
                                                    "title": "TargetRevision defines the revision of the source to hydrate"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "hydrateTo": {
                                                "description": "HydrateTo specifies a location to which hydrated manifests should be pushed as a \"staging area\" before being moved to\nthe SyncSource. The RepoURL and Path are assumed based on the associated SyncSource config in the SourceHydrator.",
                                                "type": "object",
                                                "properties": {
                                                  "targetBranch": {
                                                    "type": "string",
                                                    "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "syncSource": {
                                                "description": "SyncSource specifies a location from which hydrated manifests may be synced. RepoURL is assumed based on the\nassociated DrySource config in the SourceHydrator.",
                                                "type": "object",
                                                "properties": {
                                                  "path": {
                                                    "description": "Path is a directory path within the git repository where hydrated manifests should be committed to and synced\nfrom. If hydrateTo is set, this is just the path from which hydrated manifests will be synced.",
                                                    "type": "string"
                                                  },
                                                  "targetBranch": {
                                                    "type": "string",
                                                    "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "sources": {
                                            "type": "array",
                                            "title": "Sources is a reference to the location of the application's manifests or chart",
                                            "items": {
                                              "type": "object",
                                              "title": "ApplicationSource contains all required information about the source of an application",
                                              "properties": {
                                                "chart": {
                                                  "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                                  "type": "string"
                                                },
                                                "directory": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                                  "properties": {
                                                    "exclude": {
                                                      "type": "string",
                                                      "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                                    },
                                                    "include": {
                                                      "type": "string",
                                                      "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                                    },
                                                    "jsonnet": {
                                                      "type": "object",
                                                      "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                                      "properties": {
                                                        "extVars": {
                                                          "type": "array",
                                                          "title": "ExtVars is a list of Jsonnet External Variables",
                                                          "items": {
                                                            "type": "object",
                                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                            "properties": {
                                                              "code": {
                                                                "type": "boolean"
                                                              },
                                                              "name": {
                                                                "type": "string"
                                                              },
                                                              "value": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        },
                                                        "libs": {
                                                          "type": "array",
                                                          "title": "Additional library search dirs",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "tlas": {
                                                          "type": "array",
                                                          "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                          "items": {
                                                            "type": "object",
                                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                            "properties": {
                                                              "code": {
                                                                "type": "boolean"
                                                              },
                                                              "name": {
                                                                "type": "string"
                                                              },
                                                              "value": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    },
                                                    "recurse": {
                                                      "type": "boolean",
                                                      "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "helm": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceHelm holds helm specific options",
                                                  "properties": {
                                                    "apiVersions": {
                                                      "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "fileParameters": {
                                                      "type": "array",
                                                      "title": "FileParameters are file parameters to the helm template",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the Helm parameter"
                                                          },
                                                          "path": {
                                                            "type": "string",
                                                            "title": "Path is the path to the file containing the values for the Helm parameter"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "ignoreMissingValueFiles": {
                                                      "type": "boolean",
                                                      "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                                    },
                                                    "kubeVersion": {
                                                      "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                      "type": "string"
                                                    },
                                                    "namespace": {
                                                      "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                                      "type": "string"
                                                    },
                                                    "parameters": {
                                                      "type": "array",
                                                      "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                                        "properties": {
                                                          "forceString": {
                                                            "type": "boolean",
                                                            "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                          },
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the Helm parameter"
                                                          },
                                                          "value": {
                                                            "type": "string",
                                                            "title": "Value is the value for the Helm parameter"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "passCredentials": {
                                                      "type": "boolean",
                                                      "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                                    },
                                                    "releaseName": {
                                                      "type": "string",
                                                      "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                                    },
                                                    "skipCrds": {
                                                      "type": "boolean",
                                                      "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                                    },
                                                    "skipSchemaValidation": {
                                                      "type": "boolean",
                                                      "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                                    },
                                                    "skipTests": {
                                                      "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                                      "type": "boolean"
                                                    },
                                                    "valueFiles": {
                                                      "type": "array",
                                                      "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "values": {
                                                      "type": "string",
                                                      "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                                    },
                                                    "valuesObject": {
                                                      "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                                      "type": "object",
                                                      "properties": {
                                                        "raw": {
                                                          "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                          "type": "string",
                                                          "format": "byte"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    },
                                                    "version": {
                                                      "type": "string",
                                                      "title": "Version is the Helm version to use for templating (\"3\")"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "kustomize": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                                  "properties": {
                                                    "apiVersions": {
                                                      "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "commonAnnotations": {
                                                      "type": "object",
                                                      "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                                      "additionalProperties": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "commonAnnotationsEnvsubst": {
                                                      "type": "boolean",
                                                      "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                                    },
                                                    "commonLabels": {
                                                      "type": "object",
                                                      "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                                      "additionalProperties": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "components": {
                                                      "type": "array",
                                                      "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "forceCommonAnnotations": {
                                                      "type": "boolean",
                                                      "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                                    },
                                                    "forceCommonLabels": {
                                                      "type": "boolean",
                                                      "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                                    },
                                                    "ignoreMissingComponents": {
                                                      "type": "boolean",
                                                      "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                                    },
                                                    "images": {
                                                      "type": "array",
                                                      "title": "Images is a list of Kustomize image override specifications",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "kubeVersion": {
                                                      "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                      "type": "string"
                                                    },
                                                    "labelIncludeTemplates": {
                                                      "type": "boolean",
                                                      "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                                    },
                                                    "labelWithoutSelector": {
                                                      "type": "boolean",
                                                      "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                                    },
                                                    "namePrefix": {
                                                      "type": "string",
                                                      "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                                    },
                                                    "nameSuffix": {
                                                      "type": "string",
                                                      "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                                    },
                                                    "namespace": {
                                                      "type": "string",
                                                      "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                                    },
                                                    "patches": {
                                                      "type": "array",
                                                      "title": "Patches is a list of Kustomize patches",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "options": {
                                                            "type": "object",
                                                            "additionalProperties": {
                                                              "type": "boolean"
                                                            }
                                                          },
                                                          "patch": {
                                                            "type": "string"
                                                          },
                                                          "path": {
                                                            "type": "string"
                                                          },
                                                          "target": {
                                                            "type": "object",
                                                            "properties": {
                                                              "annotationSelector": {
                                                                "type": "string"
                                                              },
                                                              "labelSelector": {
                                                                "type": "string"
                                                              },
                                                              "resId": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "gvk": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "group": {
                                                                        "type": "string"
                                                                      },
                                                                      "kind": {
                                                                        "type": "string"
                                                                      },
                                                                      "version": {
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "additionalProperties": false
                                                                  },
                                                                  "name": {
                                                                    "type": "string"
                                                                  },
                                                                  "namespace": {
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "additionalProperties": false
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "replicas": {
                                                      "type": "array",
                                                      "title": "Replicas is a list of Kustomize Replicas override specifications",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "count": {
                                                            "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                            "type": "object",
                                                            "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                            "properties": {
                                                              "intVal": {
                                                                "type": "integer",
                                                                "format": "int32"
                                                              },
                                                              "strVal": {
                                                                "type": "string"
                                                              },
                                                              "type": {
                                                                "type": "integer",
                                                                "format": "int64"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          },
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name of Deployment or StatefulSet"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "version": {
                                                      "type": "string",
                                                      "title": "Version controls which version of Kustomize to use for rendering manifests"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "name": {
                                                  "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                                  "type": "string"
                                                },
                                                "path": {
                                                  "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                                  "type": "string"
                                                },
                                                "plugin": {
                                                  "type": "object",
                                                  "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                                  "properties": {
                                                    "env": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "EnvEntry represents an entry in the application's environment",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the variable, usually expressed in uppercase"
                                                          },
                                                          "value": {
                                                            "type": "string",
                                                            "title": "Value is the value of the variable"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "parameters": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "array": {
                                                            "description": "Array is the value of an array type parameter.",
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "map": {
                                                            "description": "Map is the value of a map type parameter.",
                                                            "type": "object",
                                                            "additionalProperties": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "name": {
                                                            "description": "Name is the name identifying a parameter.",
                                                            "type": "string"
                                                          },
                                                          "string": {
                                                            "description": "String_ is the value of a string type parameter.",
                                                            "type": "string"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "ref": {
                                                  "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                                  "type": "string"
                                                },
                                                "repoURL": {
                                                  "type": "string",
                                                  "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                                },
                                                "targetRevision": {
                                                  "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "syncPolicy": {
                                            "type": "object",
                                            "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                                            "properties": {
                                              "automated": {
                                                "type": "object",
                                                "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                                                "properties": {
                                                  "allowEmpty": {
                                                    "type": "boolean",
                                                    "title": "AllowEmpty allows apps have zero live resources (default: false)"
                                                  },
                                                  "enable": {
                                                    "type": "boolean",
                                                    "title": "Enable allows apps to explicitly control automated sync"
                                                  },
                                                  "prune": {
                                                    "type": "boolean",
                                                    "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                                                  },
                                                  "selfHeal": {
                                                    "type": "boolean",
                                                    "title": "SelfHeal specifies whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "managedNamespaceMetadata": {
                                                "type": "object",
                                                "properties": {
                                                  "annotations": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "labels": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "retry": {
                                                "type": "object",
                                                "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                                                "properties": {
                                                  "backoff": {
                                                    "type": "object",
                                                    "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                                                    "properties": {
                                                      "duration": {
                                                        "type": "string",
                                                        "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                                                      },
                                                      "factor": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "title": "Factor is a factor to multiply the base duration after each failed retry"
                                                      },
                                                      "maxDuration": {
                                                        "type": "string",
                                                        "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "limit": {
                                                    "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                                    "type": "integer",
                                                    "format": "int64"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "syncOptions": {
                                                "type": "array",
                                                "title": "Options allow you to specify whole app sync-options",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "values": {
                                    "type": "object",
                                    "title": "Values contains key/value pairs which are passed directly as parameters to the template",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "git": {
                                "type": "object",
                                "properties": {
                                  "directories": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "exclude": {
                                          "type": "boolean"
                                        },
                                        "path": {
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "files": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "exclude": {
                                          "type": "boolean"
                                        },
                                        "path": {
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "pathParamPrefix": {
                                    "type": "string"
                                  },
                                  "repoURL": {
                                    "type": "string"
                                  },
                                  "requeueAfterSeconds": {
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "revision": {
                                    "type": "string"
                                  },
                                  "template": {
                                    "type": "object",
                                    "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
                                    "properties": {
                                      "metadata": {
                                        "type": "object",
                                        "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
                                        "properties": {
                                          "annotations": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "finalizers": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "labels": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "namespace": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "spec": {
                                        "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
                                        "type": "object",
                                        "properties": {
                                          "destination": {
                                            "type": "object",
                                            "title": "ApplicationDestination holds information about the application's destination",
                                            "properties": {
                                              "name": {
                                                "description": "Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.",
                                                "type": "string"
                                              },
                                              "namespace": {
                                                "type": "string",
                                                "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                                              },
                                              "server": {
                                                "description": "Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "ignoreDifferences": {
                                            "type": "array",
                                            "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                                            "items": {
                                              "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                                              "type": "object",
                                              "properties": {
                                                "group": {
                                                  "type": "string"
                                                },
                                                "jqPathExpressions": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "jsonPointers": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "kind": {
                                                  "type": "string"
                                                },
                                                "managedFieldsManagers": {
                                                  "type": "array",
                                                  "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "name": {
                                                  "type": "string"
                                                },
                                                "namespace": {
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "info": {
                                            "type": "array",
                                            "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "project": {
                                            "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                                            "type": "string"
                                          },
                                          "revisionHistoryLimit": {
                                            "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                                            "type": "integer",
                                            "format": "int64"
                                          },
                                          "source": {
                                            "type": "object",
                                            "title": "ApplicationSource contains all required information about the source of an application",
                                            "properties": {
                                              "chart": {
                                                "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                                "type": "string"
                                              },
                                              "directory": {
                                                "type": "object",
                                                "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                                "properties": {
                                                  "exclude": {
                                                    "type": "string",
                                                    "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                                  },
                                                  "include": {
                                                    "type": "string",
                                                    "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                                  },
                                                  "jsonnet": {
                                                    "type": "object",
                                                    "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                                    "properties": {
                                                      "extVars": {
                                                        "type": "array",
                                                        "title": "ExtVars is a list of Jsonnet External Variables",
                                                        "items": {
                                                          "type": "object",
                                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                          "properties": {
                                                            "code": {
                                                              "type": "boolean"
                                                            },
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      },
                                                      "libs": {
                                                        "type": "array",
                                                        "title": "Additional library search dirs",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "tlas": {
                                                        "type": "array",
                                                        "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                        "items": {
                                                          "type": "object",
                                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                          "properties": {
                                                            "code": {
                                                              "type": "boolean"
                                                            },
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "recurse": {
                                                    "type": "boolean",
                                                    "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "helm": {
                                                "type": "object",
                                                "title": "ApplicationSourceHelm holds helm specific options",
                                                "properties": {
                                                  "apiVersions": {
                                                    "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "fileParameters": {
                                                    "type": "array",
                                                    "title": "FileParameters are file parameters to the helm template",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the Helm parameter"
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "title": "Path is the path to the file containing the values for the Helm parameter"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "ignoreMissingValueFiles": {
                                                    "type": "boolean",
                                                    "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                                  },
                                                  "kubeVersion": {
                                                    "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                    "type": "string"
                                                  },
                                                  "namespace": {
                                                    "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                                    "type": "string"
                                                  },
                                                  "parameters": {
                                                    "type": "array",
                                                    "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                                      "properties": {
                                                        "forceString": {
                                                          "type": "boolean",
                                                          "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the Helm parameter"
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "title": "Value is the value for the Helm parameter"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "passCredentials": {
                                                    "type": "boolean",
                                                    "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                                  },
                                                  "releaseName": {
                                                    "type": "string",
                                                    "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                                  },
                                                  "skipCrds": {
                                                    "type": "boolean",
                                                    "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                                  },
                                                  "skipSchemaValidation": {
                                                    "type": "boolean",
                                                    "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                                  },
                                                  "skipTests": {
                                                    "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                                    "type": "boolean"
                                                  },
                                                  "valueFiles": {
                                                    "type": "array",
                                                    "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "values": {
                                                    "type": "string",
                                                    "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                                  },
                                                  "valuesObject": {
                                                    "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                                    "type": "object",
                                                    "properties": {
                                                      "raw": {
                                                        "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                        "type": "string",
                                                        "format": "byte"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "version": {
                                                    "type": "string",
                                                    "title": "Version is the Helm version to use for templating (\"3\")"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "kustomize": {
                                                "type": "object",
                                                "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                                "properties": {
                                                  "apiVersions": {
                                                    "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "commonAnnotations": {
                                                    "type": "object",
                                                    "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "commonAnnotationsEnvsubst": {
                                                    "type": "boolean",
                                                    "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                                  },
                                                  "commonLabels": {
                                                    "type": "object",
                                                    "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "components": {
                                                    "type": "array",
                                                    "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "forceCommonAnnotations": {
                                                    "type": "boolean",
                                                    "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                                  },
                                                  "forceCommonLabels": {
                                                    "type": "boolean",
                                                    "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                                  },
                                                  "ignoreMissingComponents": {
                                                    "type": "boolean",
                                                    "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                                  },
                                                  "images": {
                                                    "type": "array",
                                                    "title": "Images is a list of Kustomize image override specifications",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "kubeVersion": {
                                                    "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                    "type": "string"
                                                  },
                                                  "labelIncludeTemplates": {
                                                    "type": "boolean",
                                                    "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                                  },
                                                  "labelWithoutSelector": {
                                                    "type": "boolean",
                                                    "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                                  },
                                                  "namePrefix": {
                                                    "type": "string",
                                                    "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                                  },
                                                  "nameSuffix": {
                                                    "type": "string",
                                                    "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                                  },
                                                  "namespace": {
                                                    "type": "string",
                                                    "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                                  },
                                                  "patches": {
                                                    "type": "array",
                                                    "title": "Patches is a list of Kustomize patches",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "options": {
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "type": "boolean"
                                                          }
                                                        },
                                                        "patch": {
                                                          "type": "string"
                                                        },
                                                        "path": {
                                                          "type": "string"
                                                        },
                                                        "target": {
                                                          "type": "object",
                                                          "properties": {
                                                            "annotationSelector": {
                                                              "type": "string"
                                                            },
                                                            "labelSelector": {
                                                              "type": "string"
                                                            },
                                                            "resId": {
                                                              "type": "object",
                                                              "properties": {
                                                                "gvk": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "group": {
                                                                      "type": "string"
                                                                    },
                                                                    "kind": {
                                                                      "type": "string"
                                                                    },
                                                                    "version": {
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "additionalProperties": false
                                                                },
                                                                "name": {
                                                                  "type": "string"
                                                                },
                                                                "namespace": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "additionalProperties": false
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "replicas": {
                                                    "type": "array",
                                                    "title": "Replicas is a list of Kustomize Replicas override specifications",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "count": {
                                                          "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                          "type": "object",
                                                          "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                          "properties": {
                                                            "intVal": {
                                                              "type": "integer",
                                                              "format": "int32"
                                                            },
                                                            "strVal": {
                                                              "type": "string"
                                                            },
                                                            "type": {
                                                              "type": "integer",
                                                              "format": "int64"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name of Deployment or StatefulSet"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "version": {
                                                    "type": "string",
                                                    "title": "Version controls which version of Kustomize to use for rendering manifests"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "name": {
                                                "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                                "type": "string"
                                              },
                                              "path": {
                                                "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                                "type": "string"
                                              },
                                              "plugin": {
                                                "type": "object",
                                                "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                                "properties": {
                                                  "env": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "EnvEntry represents an entry in the application's environment",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the variable, usually expressed in uppercase"
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "title": "Value is the value of the variable"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "parameters": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "array": {
                                                          "description": "Array is the value of an array type parameter.",
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "map": {
                                                          "description": "Map is the value of a map type parameter.",
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "name": {
                                                          "description": "Name is the name identifying a parameter.",
                                                          "type": "string"
                                                        },
                                                        "string": {
                                                          "description": "String_ is the value of a string type parameter.",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "ref": {
                                                "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                                "type": "string"
                                              },
                                              "repoURL": {
                                                "type": "string",
                                                "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                              },
                                              "targetRevision": {
                                                "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "sourceHydrator": {
                                            "description": "SourceHydrator specifies a dry \"don't repeat yourself\" source for manifests, a sync source from which to sync\nhydrated manifests, and an optional hydrateTo location to act as a \"staging\" aread for hydrated manifests.",
                                            "type": "object",
                                            "properties": {
                                              "drySource": {
                                                "description": "DrySource specifies a location for dry \"don't repeat yourself\" manifest source information.",
                                                "type": "object",
                                                "properties": {
                                                  "path": {
                                                    "type": "string",
                                                    "title": "Path is a directory path within the Git repository where the manifests are located"
                                                  },
                                                  "repoURL": {
                                                    "type": "string",
                                                    "title": "RepoURL is the URL to the git repository that contains the application manifests"
                                                  },
                                                  "targetRevision": {
                                                    "type": "string",
                                                    "title": "TargetRevision defines the revision of the source to hydrate"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "hydrateTo": {
                                                "description": "HydrateTo specifies a location to which hydrated manifests should be pushed as a \"staging area\" before being moved to\nthe SyncSource. The RepoURL and Path are assumed based on the associated SyncSource config in the SourceHydrator.",
                                                "type": "object",
                                                "properties": {
                                                  "targetBranch": {
                                                    "type": "string",
                                                    "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "syncSource": {
                                                "description": "SyncSource specifies a location from which hydrated manifests may be synced. RepoURL is assumed based on the\nassociated DrySource config in the SourceHydrator.",
                                                "type": "object",
                                                "properties": {
                                                  "path": {
                                                    "description": "Path is a directory path within the git repository where hydrated manifests should be committed to and synced\nfrom. If hydrateTo is set, this is just the path from which hydrated manifests will be synced.",
                                                    "type": "string"
                                                  },
                                                  "targetBranch": {
                                                    "type": "string",
                                                    "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "sources": {
                                            "type": "array",
                                            "title": "Sources is a reference to the location of the application's manifests or chart",
                                            "items": {
                                              "type": "object",
                                              "title": "ApplicationSource contains all required information about the source of an application",
                                              "properties": {
                                                "chart": {
                                                  "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                                  "type": "string"
                                                },
                                                "directory": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                                  "properties": {
                                                    "exclude": {
                                                      "type": "string",
                                                      "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                                    },
                                                    "include": {
                                                      "type": "string",
                                                      "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                                    },
                                                    "jsonnet": {
                                                      "type": "object",
                                                      "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                                      "properties": {
                                                        "extVars": {
                                                          "type": "array",
                                                          "title": "ExtVars is a list of Jsonnet External Variables",
                                                          "items": {
                                                            "type": "object",
                                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                            "properties": {
                                                              "code": {
                                                                "type": "boolean"
                                                              },
                                                              "name": {
                                                                "type": "string"
                                                              },
                                                              "value": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        },
                                                        "libs": {
                                                          "type": "array",
                                                          "title": "Additional library search dirs",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "tlas": {
                                                          "type": "array",
                                                          "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                          "items": {
                                                            "type": "object",
                                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                            "properties": {
                                                              "code": {
                                                                "type": "boolean"
                                                              },
                                                              "name": {
                                                                "type": "string"
                                                              },
                                                              "value": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    },
                                                    "recurse": {
                                                      "type": "boolean",
                                                      "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "helm": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceHelm holds helm specific options",
                                                  "properties": {
                                                    "apiVersions": {
                                                      "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "fileParameters": {
                                                      "type": "array",
                                                      "title": "FileParameters are file parameters to the helm template",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the Helm parameter"
                                                          },
                                                          "path": {
                                                            "type": "string",
                                                            "title": "Path is the path to the file containing the values for the Helm parameter"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "ignoreMissingValueFiles": {
                                                      "type": "boolean",
                                                      "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                                    },
                                                    "kubeVersion": {
                                                      "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                      "type": "string"
                                                    },
                                                    "namespace": {
                                                      "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                                      "type": "string"
                                                    },
                                                    "parameters": {
                                                      "type": "array",
                                                      "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                                        "properties": {
                                                          "forceString": {
                                                            "type": "boolean",
                                                            "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                          },
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the Helm parameter"
                                                          },
                                                          "value": {
                                                            "type": "string",
                                                            "title": "Value is the value for the Helm parameter"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "passCredentials": {
                                                      "type": "boolean",
                                                      "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                                    },
                                                    "releaseName": {
                                                      "type": "string",
                                                      "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                                    },
                                                    "skipCrds": {
                                                      "type": "boolean",
                                                      "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                                    },
                                                    "skipSchemaValidation": {
                                                      "type": "boolean",
                                                      "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                                    },
                                                    "skipTests": {
                                                      "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                                      "type": "boolean"
                                                    },
                                                    "valueFiles": {
                                                      "type": "array",
                                                      "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "values": {
                                                      "type": "string",
                                                      "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                                    },
                                                    "valuesObject": {
                                                      "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                                      "type": "object",
                                                      "properties": {
                                                        "raw": {
                                                          "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                          "type": "string",
                                                          "format": "byte"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    },
                                                    "version": {
                                                      "type": "string",
                                                      "title": "Version is the Helm version to use for templating (\"3\")"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "kustomize": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                                  "properties": {
                                                    "apiVersions": {
                                                      "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "commonAnnotations": {
                                                      "type": "object",
                                                      "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                                      "additionalProperties": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "commonAnnotationsEnvsubst": {
                                                      "type": "boolean",
                                                      "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                                    },
                                                    "commonLabels": {
                                                      "type": "object",
                                                      "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                                      "additionalProperties": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "components": {
                                                      "type": "array",
                                                      "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "forceCommonAnnotations": {
                                                      "type": "boolean",
                                                      "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                                    },
                                                    "forceCommonLabels": {
                                                      "type": "boolean",
                                                      "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                                    },
                                                    "ignoreMissingComponents": {
                                                      "type": "boolean",
                                                      "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                                    },
                                                    "images": {
                                                      "type": "array",
                                                      "title": "Images is a list of Kustomize image override specifications",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "kubeVersion": {
                                                      "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                      "type": "string"
                                                    },
                                                    "labelIncludeTemplates": {
                                                      "type": "boolean",
                                                      "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                                    },
                                                    "labelWithoutSelector": {
                                                      "type": "boolean",
                                                      "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                                    },
                                                    "namePrefix": {
                                                      "type": "string",
                                                      "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                                    },
                                                    "nameSuffix": {
                                                      "type": "string",
                                                      "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                                    },
                                                    "namespace": {
                                                      "type": "string",
                                                      "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                                    },
                                                    "patches": {
                                                      "type": "array",
                                                      "title": "Patches is a list of Kustomize patches",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "options": {
                                                            "type": "object",
                                                            "additionalProperties": {
                                                              "type": "boolean"
                                                            }
                                                          },
                                                          "patch": {
                                                            "type": "string"
                                                          },
                                                          "path": {
                                                            "type": "string"
                                                          },
                                                          "target": {
                                                            "type": "object",
                                                            "properties": {
                                                              "annotationSelector": {
                                                                "type": "string"
                                                              },
                                                              "labelSelector": {
                                                                "type": "string"
                                                              },
                                                              "resId": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "gvk": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "group": {
                                                                        "type": "string"
                                                                      },
                                                                      "kind": {
                                                                        "type": "string"
                                                                      },
                                                                      "version": {
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "additionalProperties": false
                                                                  },
                                                                  "name": {
                                                                    "type": "string"
                                                                  },
                                                                  "namespace": {
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "additionalProperties": false
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "replicas": {
                                                      "type": "array",
                                                      "title": "Replicas is a list of Kustomize Replicas override specifications",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "count": {
                                                            "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                            "type": "object",
                                                            "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                            "properties": {
                                                              "intVal": {
                                                                "type": "integer",
                                                                "format": "int32"
                                                              },
                                                              "strVal": {
                                                                "type": "string"
                                                              },
                                                              "type": {
                                                                "type": "integer",
                                                                "format": "int64"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          },
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name of Deployment or StatefulSet"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "version": {
                                                      "type": "string",
                                                      "title": "Version controls which version of Kustomize to use for rendering manifests"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "name": {
                                                  "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                                  "type": "string"
                                                },
                                                "path": {
                                                  "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                                  "type": "string"
                                                },
                                                "plugin": {
                                                  "type": "object",
                                                  "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                                  "properties": {
                                                    "env": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "EnvEntry represents an entry in the application's environment",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the variable, usually expressed in uppercase"
                                                          },
                                                          "value": {
                                                            "type": "string",
                                                            "title": "Value is the value of the variable"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "parameters": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "array": {
                                                            "description": "Array is the value of an array type parameter.",
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "map": {
                                                            "description": "Map is the value of a map type parameter.",
                                                            "type": "object",
                                                            "additionalProperties": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "name": {
                                                            "description": "Name is the name identifying a parameter.",
                                                            "type": "string"
                                                          },
                                                          "string": {
                                                            "description": "String_ is the value of a string type parameter.",
                                                            "type": "string"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "ref": {
                                                  "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                                  "type": "string"
                                                },
                                                "repoURL": {
                                                  "type": "string",
                                                  "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                                },
                                                "targetRevision": {
                                                  "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "syncPolicy": {
                                            "type": "object",
                                            "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                                            "properties": {
                                              "automated": {
                                                "type": "object",
                                                "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                                                "properties": {
                                                  "allowEmpty": {
                                                    "type": "boolean",
                                                    "title": "AllowEmpty allows apps have zero live resources (default: false)"
                                                  },
                                                  "enable": {
                                                    "type": "boolean",
                                                    "title": "Enable allows apps to explicitly control automated sync"
                                                  },
                                                  "prune": {
                                                    "type": "boolean",
                                                    "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                                                  },
                                                  "selfHeal": {
                                                    "type": "boolean",
                                                    "title": "SelfHeal specifies whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "managedNamespaceMetadata": {
                                                "type": "object",
                                                "properties": {
                                                  "annotations": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "labels": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "retry": {
                                                "type": "object",
                                                "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                                                "properties": {
                                                  "backoff": {
                                                    "type": "object",
                                                    "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                                                    "properties": {
                                                      "duration": {
                                                        "type": "string",
                                                        "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                                                      },
                                                      "factor": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "title": "Factor is a factor to multiply the base duration after each failed retry"
                                                      },
                                                      "maxDuration": {
                                                        "type": "string",
                                                        "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "limit": {
                                                    "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                                    "type": "integer",
                                                    "format": "int64"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "syncOptions": {
                                                "type": "array",
                                                "title": "Options allow you to specify whole app sync-options",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "values": {
                                    "type": "object",
                                    "title": "Values contains key/value pairs which are passed directly as parameters to the template",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "list": {
                                "type": "object",
                                "title": "ListGenerator include items info",
                                "properties": {
                                  "elements": {
                                    "type": "array",
                                    "title": "+kubebuilder:validation:Optional",
                                    "items": {
                                      "description": "JSON represents any valid JSON value.\nThese types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.",
                                      "type": "object",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "format": "byte"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "elementsYaml": {
                                    "type": "string"
                                  },
                                  "template": {
                                    "type": "object",
                                    "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
                                    "properties": {
                                      "metadata": {
                                        "type": "object",
                                        "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
                                        "properties": {
                                          "annotations": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "finalizers": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "labels": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "namespace": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "spec": {
                                        "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
                                        "type": "object",
                                        "properties": {
                                          "destination": {
                                            "type": "object",
                                            "title": "ApplicationDestination holds information about the application's destination",
                                            "properties": {
                                              "name": {
                                                "description": "Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.",
                                                "type": "string"
                                              },
                                              "namespace": {
                                                "type": "string",
                                                "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                                              },
                                              "server": {
                                                "description": "Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "ignoreDifferences": {
                                            "type": "array",
                                            "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                                            "items": {
                                              "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                                              "type": "object",
                                              "properties": {
                                                "group": {
                                                  "type": "string"
                                                },
                                                "jqPathExpressions": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "jsonPointers": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "kind": {
                                                  "type": "string"
                                                },
                                                "managedFieldsManagers": {
                                                  "type": "array",
                                                  "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "name": {
                                                  "type": "string"
                                                },
                                                "namespace": {
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "info": {
                                            "type": "array",
                                            "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "project": {
                                            "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                                            "type": "string"
                                          },
                                          "revisionHistoryLimit": {
                                            "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                                            "type": "integer",
                                            "format": "int64"
                                          },
                                          "source": {
                                            "type": "object",
                                            "title": "ApplicationSource contains all required information about the source of an application",
                                            "properties": {
                                              "chart": {
                                                "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                                "type": "string"
                                              },
                                              "directory": {
                                                "type": "object",
                                                "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                                "properties": {
                                                  "exclude": {
                                                    "type": "string",
                                                    "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                                  },
                                                  "include": {
                                                    "type": "string",
                                                    "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                                  },
                                                  "jsonnet": {
                                                    "type": "object",
                                                    "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                                    "properties": {
                                                      "extVars": {
                                                        "type": "array",
                                                        "title": "ExtVars is a list of Jsonnet External Variables",
                                                        "items": {
                                                          "type": "object",
                                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                          "properties": {
                                                            "code": {
                                                              "type": "boolean"
                                                            },
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      },
                                                      "libs": {
                                                        "type": "array",
                                                        "title": "Additional library search dirs",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "tlas": {
                                                        "type": "array",
                                                        "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                        "items": {
                                                          "type": "object",
                                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                          "properties": {
                                                            "code": {
                                                              "type": "boolean"
                                                            },
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "recurse": {
                                                    "type": "boolean",
                                                    "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "helm": {
                                                "type": "object",
                                                "title": "ApplicationSourceHelm holds helm specific options",
                                                "properties": {
                                                  "apiVersions": {
                                                    "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "fileParameters": {
                                                    "type": "array",
                                                    "title": "FileParameters are file parameters to the helm template",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the Helm parameter"
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "title": "Path is the path to the file containing the values for the Helm parameter"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "ignoreMissingValueFiles": {
                                                    "type": "boolean",
                                                    "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                                  },
                                                  "kubeVersion": {
                                                    "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                    "type": "string"
                                                  },
                                                  "namespace": {
                                                    "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                                    "type": "string"
                                                  },
                                                  "parameters": {
                                                    "type": "array",
                                                    "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                                      "properties": {
                                                        "forceString": {
                                                          "type": "boolean",
                                                          "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the Helm parameter"
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "title": "Value is the value for the Helm parameter"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "passCredentials": {
                                                    "type": "boolean",
                                                    "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                                  },
                                                  "releaseName": {
                                                    "type": "string",
                                                    "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                                  },
                                                  "skipCrds": {
                                                    "type": "boolean",
                                                    "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                                  },
                                                  "skipSchemaValidation": {
                                                    "type": "boolean",
                                                    "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                                  },
                                                  "skipTests": {
                                                    "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                                    "type": "boolean"
                                                  },
                                                  "valueFiles": {
                                                    "type": "array",
                                                    "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "values": {
                                                    "type": "string",
                                                    "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                                  },
                                                  "valuesObject": {
                                                    "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                                    "type": "object",
                                                    "properties": {
                                                      "raw": {
                                                        "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                        "type": "string",
                                                        "format": "byte"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "version": {
                                                    "type": "string",
                                                    "title": "Version is the Helm version to use for templating (\"3\")"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "kustomize": {
                                                "type": "object",
                                                "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                                "properties": {
                                                  "apiVersions": {
                                                    "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "commonAnnotations": {
                                                    "type": "object",
                                                    "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "commonAnnotationsEnvsubst": {
                                                    "type": "boolean",
                                                    "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                                  },
                                                  "commonLabels": {
                                                    "type": "object",
                                                    "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "components": {
                                                    "type": "array",
                                                    "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "forceCommonAnnotations": {
                                                    "type": "boolean",
                                                    "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                                  },
                                                  "forceCommonLabels": {
                                                    "type": "boolean",
                                                    "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                                  },
                                                  "ignoreMissingComponents": {
                                                    "type": "boolean",
                                                    "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                                  },
                                                  "images": {
                                                    "type": "array",
                                                    "title": "Images is a list of Kustomize image override specifications",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "kubeVersion": {
                                                    "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                    "type": "string"
                                                  },
                                                  "labelIncludeTemplates": {
                                                    "type": "boolean",
                                                    "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                                  },
                                                  "labelWithoutSelector": {
                                                    "type": "boolean",
                                                    "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                                  },
                                                  "namePrefix": {
                                                    "type": "string",
                                                    "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                                  },
                                                  "nameSuffix": {
                                                    "type": "string",
                                                    "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                                  },
                                                  "namespace": {
                                                    "type": "string",
                                                    "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                                  },
                                                  "patches": {
                                                    "type": "array",
                                                    "title": "Patches is a list of Kustomize patches",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "options": {
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "type": "boolean"
                                                          }
                                                        },
                                                        "patch": {
                                                          "type": "string"
                                                        },
                                                        "path": {
                                                          "type": "string"
                                                        },
                                                        "target": {
                                                          "type": "object",
                                                          "properties": {
                                                            "annotationSelector": {
                                                              "type": "string"
                                                            },
                                                            "labelSelector": {
                                                              "type": "string"
                                                            },
                                                            "resId": {
                                                              "type": "object",
                                                              "properties": {
                                                                "gvk": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "group": {
                                                                      "type": "string"
                                                                    },
                                                                    "kind": {
                                                                      "type": "string"
                                                                    },
                                                                    "version": {
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "additionalProperties": false
                                                                },
                                                                "name": {
                                                                  "type": "string"
                                                                },
                                                                "namespace": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "additionalProperties": false
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "replicas": {
                                                    "type": "array",
                                                    "title": "Replicas is a list of Kustomize Replicas override specifications",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "count": {
                                                          "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                          "type": "object",
                                                          "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                          "properties": {
                                                            "intVal": {
                                                              "type": "integer",
                                                              "format": "int32"
                                                            },
                                                            "strVal": {
                                                              "type": "string"
                                                            },
                                                            "type": {
                                                              "type": "integer",
                                                              "format": "int64"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name of Deployment or StatefulSet"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "version": {
                                                    "type": "string",
                                                    "title": "Version controls which version of Kustomize to use for rendering manifests"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "name": {
                                                "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                                "type": "string"
                                              },
                                              "path": {
                                                "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                                "type": "string"
                                              },
                                              "plugin": {
                                                "type": "object",
                                                "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                                "properties": {
                                                  "env": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "EnvEntry represents an entry in the application's environment",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the variable, usually expressed in uppercase"
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "title": "Value is the value of the variable"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "parameters": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "array": {
                                                          "description": "Array is the value of an array type parameter.",
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "map": {
                                                          "description": "Map is the value of a map type parameter.",
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "name": {
                                                          "description": "Name is the name identifying a parameter.",
                                                          "type": "string"
                                                        },
                                                        "string": {
                                                          "description": "String_ is the value of a string type parameter.",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "ref": {
                                                "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                                "type": "string"
                                              },
                                              "repoURL": {
                                                "type": "string",
                                                "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                              },
                                              "targetRevision": {
                                                "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "sourceHydrator": {
                                            "description": "SourceHydrator specifies a dry \"don't repeat yourself\" source for manifests, a sync source from which to sync\nhydrated manifests, and an optional hydrateTo location to act as a \"staging\" aread for hydrated manifests.",
                                            "type": "object",
                                            "properties": {
                                              "drySource": {
                                                "description": "DrySource specifies a location for dry \"don't repeat yourself\" manifest source information.",
                                                "type": "object",
                                                "properties": {
                                                  "path": {
                                                    "type": "string",
                                                    "title": "Path is a directory path within the Git repository where the manifests are located"
                                                  },
                                                  "repoURL": {
                                                    "type": "string",
                                                    "title": "RepoURL is the URL to the git repository that contains the application manifests"
                                                  },
                                                  "targetRevision": {
                                                    "type": "string",
                                                    "title": "TargetRevision defines the revision of the source to hydrate"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "hydrateTo": {
                                                "description": "HydrateTo specifies a location to which hydrated manifests should be pushed as a \"staging area\" before being moved to\nthe SyncSource. The RepoURL and Path are assumed based on the associated SyncSource config in the SourceHydrator.",
                                                "type": "object",
                                                "properties": {
                                                  "targetBranch": {
                                                    "type": "string",
                                                    "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "syncSource": {
                                                "description": "SyncSource specifies a location from which hydrated manifests may be synced. RepoURL is assumed based on the\nassociated DrySource config in the SourceHydrator.",
                                                "type": "object",
                                                "properties": {
                                                  "path": {
                                                    "description": "Path is a directory path within the git repository where hydrated manifests should be committed to and synced\nfrom. If hydrateTo is set, this is just the path from which hydrated manifests will be synced.",
                                                    "type": "string"
                                                  },
                                                  "targetBranch": {
                                                    "type": "string",
                                                    "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "sources": {
                                            "type": "array",
                                            "title": "Sources is a reference to the location of the application's manifests or chart",
                                            "items": {
                                              "type": "object",
                                              "title": "ApplicationSource contains all required information about the source of an application",
                                              "properties": {
                                                "chart": {
                                                  "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                                  "type": "string"
                                                },
                                                "directory": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                                  "properties": {
                                                    "exclude": {
                                                      "type": "string",
                                                      "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                                    },
                                                    "include": {
                                                      "type": "string",
                                                      "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                                    },
                                                    "jsonnet": {
                                                      "type": "object",
                                                      "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                                      "properties": {
                                                        "extVars": {
                                                          "type": "array",
                                                          "title": "ExtVars is a list of Jsonnet External Variables",
                                                          "items": {
                                                            "type": "object",
                                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                            "properties": {
                                                              "code": {
                                                                "type": "boolean"
                                                              },
                                                              "name": {
                                                                "type": "string"
                                                              },
                                                              "value": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        },
                                                        "libs": {
                                                          "type": "array",
                                                          "title": "Additional library search dirs",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "tlas": {
                                                          "type": "array",
                                                          "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                          "items": {
                                                            "type": "object",
                                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                            "properties": {
                                                              "code": {
                                                                "type": "boolean"
                                                              },
                                                              "name": {
                                                                "type": "string"
                                                              },
                                                              "value": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    },
                                                    "recurse": {
                                                      "type": "boolean",
                                                      "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "helm": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceHelm holds helm specific options",
                                                  "properties": {
                                                    "apiVersions": {
                                                      "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "fileParameters": {
                                                      "type": "array",
                                                      "title": "FileParameters are file parameters to the helm template",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the Helm parameter"
                                                          },
                                                          "path": {
                                                            "type": "string",
                                                            "title": "Path is the path to the file containing the values for the Helm parameter"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "ignoreMissingValueFiles": {
                                                      "type": "boolean",
                                                      "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                                    },
                                                    "kubeVersion": {
                                                      "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                      "type": "string"
                                                    },
                                                    "namespace": {
                                                      "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                                      "type": "string"
                                                    },
                                                    "parameters": {
                                                      "type": "array",
                                                      "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                                        "properties": {
                                                          "forceString": {
                                                            "type": "boolean",
                                                            "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                          },
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the Helm parameter"
                                                          },
                                                          "value": {
                                                            "type": "string",
                                                            "title": "Value is the value for the Helm parameter"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "passCredentials": {
                                                      "type": "boolean",
                                                      "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                                    },
                                                    "releaseName": {
                                                      "type": "string",
                                                      "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                                    },
                                                    "skipCrds": {
                                                      "type": "boolean",
                                                      "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                                    },
                                                    "skipSchemaValidation": {
                                                      "type": "boolean",
                                                      "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                                    },
                                                    "skipTests": {
                                                      "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                                      "type": "boolean"
                                                    },
                                                    "valueFiles": {
                                                      "type": "array",
                                                      "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "values": {
                                                      "type": "string",
                                                      "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                                    },
                                                    "valuesObject": {
                                                      "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                                      "type": "object",
                                                      "properties": {
                                                        "raw": {
                                                          "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                          "type": "string",
                                                          "format": "byte"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    },
                                                    "version": {
                                                      "type": "string",
                                                      "title": "Version is the Helm version to use for templating (\"3\")"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "kustomize": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                                  "properties": {
                                                    "apiVersions": {
                                                      "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "commonAnnotations": {
                                                      "type": "object",
                                                      "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                                      "additionalProperties": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "commonAnnotationsEnvsubst": {
                                                      "type": "boolean",
                                                      "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                                    },
                                                    "commonLabels": {
                                                      "type": "object",
                                                      "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                                      "additionalProperties": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "components": {
                                                      "type": "array",
                                                      "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "forceCommonAnnotations": {
                                                      "type": "boolean",
                                                      "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                                    },
                                                    "forceCommonLabels": {
                                                      "type": "boolean",
                                                      "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                                    },
                                                    "ignoreMissingComponents": {
                                                      "type": "boolean",
                                                      "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                                    },
                                                    "images": {
                                                      "type": "array",
                                                      "title": "Images is a list of Kustomize image override specifications",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "kubeVersion": {
                                                      "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                      "type": "string"
                                                    },
                                                    "labelIncludeTemplates": {
                                                      "type": "boolean",
                                                      "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                                    },
                                                    "labelWithoutSelector": {
                                                      "type": "boolean",
                                                      "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                                    },
                                                    "namePrefix": {
                                                      "type": "string",
                                                      "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                                    },
                                                    "nameSuffix": {
                                                      "type": "string",
                                                      "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                                    },
                                                    "namespace": {
                                                      "type": "string",
                                                      "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                                    },
                                                    "patches": {
                                                      "type": "array",
                                                      "title": "Patches is a list of Kustomize patches",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "options": {
                                                            "type": "object",
                                                            "additionalProperties": {
                                                              "type": "boolean"
                                                            }
                                                          },
                                                          "patch": {
                                                            "type": "string"
                                                          },
                                                          "path": {
                                                            "type": "string"
                                                          },
                                                          "target": {
                                                            "type": "object",
                                                            "properties": {
                                                              "annotationSelector": {
                                                                "type": "string"
                                                              },
                                                              "labelSelector": {
                                                                "type": "string"
                                                              },
                                                              "resId": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "gvk": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "group": {
                                                                        "type": "string"
                                                                      },
                                                                      "kind": {
                                                                        "type": "string"
                                                                      },
                                                                      "version": {
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "additionalProperties": false
                                                                  },
                                                                  "name": {
                                                                    "type": "string"
                                                                  },
                                                                  "namespace": {
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "additionalProperties": false
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "replicas": {
                                                      "type": "array",
                                                      "title": "Replicas is a list of Kustomize Replicas override specifications",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "count": {
                                                            "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                            "type": "object",
                                                            "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                            "properties": {
                                                              "intVal": {
                                                                "type": "integer",
                                                                "format": "int32"
                                                              },
                                                              "strVal": {
                                                                "type": "string"
                                                              },
                                                              "type": {
                                                                "type": "integer",
                                                                "format": "int64"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          },
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name of Deployment or StatefulSet"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "version": {
                                                      "type": "string",
                                                      "title": "Version controls which version of Kustomize to use for rendering manifests"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "name": {
                                                  "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                                  "type": "string"
                                                },
                                                "path": {
                                                  "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                                  "type": "string"
                                                },
                                                "plugin": {
                                                  "type": "object",
                                                  "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                                  "properties": {
                                                    "env": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "EnvEntry represents an entry in the application's environment",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the variable, usually expressed in uppercase"
                                                          },
                                                          "value": {
                                                            "type": "string",
                                                            "title": "Value is the value of the variable"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "parameters": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "array": {
                                                            "description": "Array is the value of an array type parameter.",
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "map": {
                                                            "description": "Map is the value of a map type parameter.",
                                                            "type": "object",
                                                            "additionalProperties": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "name": {
                                                            "description": "Name is the name identifying a parameter.",
                                                            "type": "string"
                                                          },
                                                          "string": {
                                                            "description": "String_ is the value of a string type parameter.",
                                                            "type": "string"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "ref": {
                                                  "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                                  "type": "string"
                                                },
                                                "repoURL": {
                                                  "type": "string",
                                                  "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                                },
                                                "targetRevision": {
                                                  "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "syncPolicy": {
                                            "type": "object",
                                            "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                                            "properties": {
                                              "automated": {
                                                "type": "object",
                                                "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                                                "properties": {
                                                  "allowEmpty": {
                                                    "type": "boolean",
                                                    "title": "AllowEmpty allows apps have zero live resources (default: false)"
                                                  },
                                                  "enable": {
                                                    "type": "boolean",
                                                    "title": "Enable allows apps to explicitly control automated sync"
                                                  },
                                                  "prune": {
                                                    "type": "boolean",
                                                    "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                                                  },
                                                  "selfHeal": {
                                                    "type": "boolean",
                                                    "title": "SelfHeal specifies whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "managedNamespaceMetadata": {
                                                "type": "object",
                                                "properties": {
                                                  "annotations": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "labels": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "retry": {
                                                "type": "object",
                                                "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                                                "properties": {
                                                  "backoff": {
                                                    "type": "object",
                                                    "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                                                    "properties": {
                                                      "duration": {
                                                        "type": "string",
                                                        "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                                                      },
                                                      "factor": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "title": "Factor is a factor to multiply the base duration after each failed retry"
                                                      },
                                                      "maxDuration": {
                                                        "type": "string",
                                                        "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "limit": {
                                                    "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                                    "type": "integer",
                                                    "format": "int64"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "syncOptions": {
                                                "type": "array",
                                                "title": "Options allow you to specify whole app sync-options",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false
                              },
                              "matrix": {
                                "description": "JSON represents any valid JSON value.\nThese types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.",
                                "type": "object",
                                "properties": {
                                  "raw": {
                                    "type": "string",
                                    "format": "byte"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "merge": {
                                "description": "JSON represents any valid JSON value.\nThese types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.",
                                "type": "object",
                                "properties": {
                                  "raw": {
                                    "type": "string",
                                    "format": "byte"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "plugin": {
                                "description": "PluginGenerator defines connection info specific to Plugin.",
                                "type": "object",
                                "properties": {
                                  "configMapRef": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "title": "Name of the ConfigMap"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "input": {
                                    "type": "object",
                                    "properties": {
                                      "parameters": {
                                        "description": "Parameters contains the information to pass to the plugin. It is a map. The keys must be strings, and the\nvalues can be any type.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "description": "JSON represents any valid JSON value.\nThese types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.",
                                          "type": "object",
                                          "properties": {
                                            "raw": {
                                              "type": "string",
                                              "format": "byte"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "requeueAfterSeconds": {
                                    "description": "RequeueAfterSeconds determines how long the ApplicationSet controller will wait before reconciling the ApplicationSet again.",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "template": {
                                    "type": "object",
                                    "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
                                    "properties": {
                                      "metadata": {
                                        "type": "object",
                                        "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
                                        "properties": {
                                          "annotations": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "finalizers": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "labels": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "namespace": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "spec": {
                                        "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
                                        "type": "object",
                                        "properties": {
                                          "destination": {
                                            "type": "object",
                                            "title": "ApplicationDestination holds information about the application's destination",
                                            "properties": {
                                              "name": {
                                                "description": "Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.",
                                                "type": "string"
                                              },
                                              "namespace": {
                                                "type": "string",
                                                "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                                              },
                                              "server": {
                                                "description": "Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "ignoreDifferences": {
                                            "type": "array",
                                            "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                                            "items": {
                                              "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                                              "type": "object",
                                              "properties": {
                                                "group": {
                                                  "type": "string"
                                                },
                                                "jqPathExpressions": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "jsonPointers": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "kind": {
                                                  "type": "string"
                                                },
                                                "managedFieldsManagers": {
                                                  "type": "array",
                                                  "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "name": {
                                                  "type": "string"
                                                },
                                                "namespace": {
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "info": {
                                            "type": "array",
                                            "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "project": {
                                            "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                                            "type": "string"
                                          },
                                          "revisionHistoryLimit": {
                                            "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                                            "type": "integer",
                                            "format": "int64"
                                          },
                                          "source": {
                                            "type": "object",
                                            "title": "ApplicationSource contains all required information about the source of an application",
                                            "properties": {
                                              "chart": {
                                                "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                                "type": "string"
                                              },
                                              "directory": {
                                                "type": "object",
                                                "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                                "properties": {
                                                  "exclude": {
                                                    "type": "string",
                                                    "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                                  },
                                                  "include": {
                                                    "type": "string",
                                                    "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                                  },
                                                  "jsonnet": {
                                                    "type": "object",
                                                    "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                                    "properties": {
                                                      "extVars": {
                                                        "type": "array",
                                                        "title": "ExtVars is a list of Jsonnet External Variables",
                                                        "items": {
                                                          "type": "object",
                                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                          "properties": {
                                                            "code": {
                                                              "type": "boolean"
                                                            },
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      },
                                                      "libs": {
                                                        "type": "array",
                                                        "title": "Additional library search dirs",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "tlas": {
                                                        "type": "array",
                                                        "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                        "items": {
                                                          "type": "object",
                                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                          "properties": {
                                                            "code": {
                                                              "type": "boolean"
                                                            },
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "recurse": {
                                                    "type": "boolean",
                                                    "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "helm": {
                                                "type": "object",
                                                "title": "ApplicationSourceHelm holds helm specific options",
                                                "properties": {
                                                  "apiVersions": {
                                                    "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "fileParameters": {
                                                    "type": "array",
                                                    "title": "FileParameters are file parameters to the helm template",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the Helm parameter"
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "title": "Path is the path to the file containing the values for the Helm parameter"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "ignoreMissingValueFiles": {
                                                    "type": "boolean",
                                                    "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                                  },
                                                  "kubeVersion": {
                                                    "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                    "type": "string"
                                                  },
                                                  "namespace": {
                                                    "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                                    "type": "string"
                                                  },
                                                  "parameters": {
                                                    "type": "array",
                                                    "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                                      "properties": {
                                                        "forceString": {
                                                          "type": "boolean",
                                                          "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the Helm parameter"
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "title": "Value is the value for the Helm parameter"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "passCredentials": {
                                                    "type": "boolean",
                                                    "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                                  },
                                                  "releaseName": {
                                                    "type": "string",
                                                    "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                                  },
                                                  "skipCrds": {
                                                    "type": "boolean",
                                                    "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                                  },
                                                  "skipSchemaValidation": {
                                                    "type": "boolean",
                                                    "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                                  },
                                                  "skipTests": {
                                                    "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                                    "type": "boolean"
                                                  },
                                                  "valueFiles": {
                                                    "type": "array",
                                                    "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "values": {
                                                    "type": "string",
                                                    "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                                  },
                                                  "valuesObject": {
                                                    "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                                    "type": "object",
                                                    "properties": {
                                                      "raw": {
                                                        "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                        "type": "string",
                                                        "format": "byte"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "version": {
                                                    "type": "string",
                                                    "title": "Version is the Helm version to use for templating (\"3\")"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "kustomize": {
                                                "type": "object",
                                                "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                                "properties": {
                                                  "apiVersions": {
                                                    "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "commonAnnotations": {
                                                    "type": "object",
                                                    "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "commonAnnotationsEnvsubst": {
                                                    "type": "boolean",
                                                    "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                                  },
                                                  "commonLabels": {
                                                    "type": "object",
                                                    "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "components": {
                                                    "type": "array",
                                                    "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "forceCommonAnnotations": {
                                                    "type": "boolean",
                                                    "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                                  },
                                                  "forceCommonLabels": {
                                                    "type": "boolean",
                                                    "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                                  },
                                                  "ignoreMissingComponents": {
                                                    "type": "boolean",
                                                    "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                                  },
                                                  "images": {
                                                    "type": "array",
                                                    "title": "Images is a list of Kustomize image override specifications",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "kubeVersion": {
                                                    "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                    "type": "string"
                                                  },
                                                  "labelIncludeTemplates": {
                                                    "type": "boolean",
                                                    "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                                  },
                                                  "labelWithoutSelector": {
                                                    "type": "boolean",
                                                    "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                                  },
                                                  "namePrefix": {
                                                    "type": "string",
                                                    "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                                  },
                                                  "nameSuffix": {
                                                    "type": "string",
                                                    "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                                  },
                                                  "namespace": {
                                                    "type": "string",
                                                    "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                                  },
                                                  "patches": {
                                                    "type": "array",
                                                    "title": "Patches is a list of Kustomize patches",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "options": {
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "type": "boolean"
                                                          }
                                                        },
                                                        "patch": {
                                                          "type": "string"
                                                        },
                                                        "path": {
                                                          "type": "string"
                                                        },
                                                        "target": {
                                                          "type": "object",
                                                          "properties": {
                                                            "annotationSelector": {
                                                              "type": "string"
                                                            },
                                                            "labelSelector": {
                                                              "type": "string"
                                                            },
                                                            "resId": {
                                                              "type": "object",
                                                              "properties": {
                                                                "gvk": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "group": {
                                                                      "type": "string"
                                                                    },
                                                                    "kind": {
                                                                      "type": "string"
                                                                    },
                                                                    "version": {
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "additionalProperties": false
                                                                },
                                                                "name": {
                                                                  "type": "string"
                                                                },
                                                                "namespace": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "additionalProperties": false
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "replicas": {
                                                    "type": "array",
                                                    "title": "Replicas is a list of Kustomize Replicas override specifications",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "count": {
                                                          "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                          "type": "object",
                                                          "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                          "properties": {
                                                            "intVal": {
                                                              "type": "integer",
                                                              "format": "int32"
                                                            },
                                                            "strVal": {
                                                              "type": "string"
                                                            },
                                                            "type": {
                                                              "type": "integer",
                                                              "format": "int64"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name of Deployment or StatefulSet"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "version": {
                                                    "type": "string",
                                                    "title": "Version controls which version of Kustomize to use for rendering manifests"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "name": {
                                                "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                                "type": "string"
                                              },
                                              "path": {
                                                "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                                "type": "string"
                                              },
                                              "plugin": {
                                                "type": "object",
                                                "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                                "properties": {
                                                  "env": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "EnvEntry represents an entry in the application's environment",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the variable, usually expressed in uppercase"
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "title": "Value is the value of the variable"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "parameters": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "array": {
                                                          "description": "Array is the value of an array type parameter.",
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "map": {
                                                          "description": "Map is the value of a map type parameter.",
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "name": {
                                                          "description": "Name is the name identifying a parameter.",
                                                          "type": "string"
                                                        },
                                                        "string": {
                                                          "description": "String_ is the value of a string type parameter.",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "ref": {
                                                "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                                "type": "string"
                                              },
                                              "repoURL": {
                                                "type": "string",
                                                "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                              },
                                              "targetRevision": {
                                                "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "sourceHydrator": {
                                            "description": "SourceHydrator specifies a dry \"don't repeat yourself\" source for manifests, a sync source from which to sync\nhydrated manifests, and an optional hydrateTo location to act as a \"staging\" aread for hydrated manifests.",
                                            "type": "object",
                                            "properties": {
                                              "drySource": {
                                                "description": "DrySource specifies a location for dry \"don't repeat yourself\" manifest source information.",
                                                "type": "object",
                                                "properties": {
                                                  "path": {
                                                    "type": "string",
                                                    "title": "Path is a directory path within the Git repository where the manifests are located"
                                                  },
                                                  "repoURL": {
                                                    "type": "string",
                                                    "title": "RepoURL is the URL to the git repository that contains the application manifests"
                                                  },
                                                  "targetRevision": {
                                                    "type": "string",
                                                    "title": "TargetRevision defines the revision of the source to hydrate"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "hydrateTo": {
                                                "description": "HydrateTo specifies a location to which hydrated manifests should be pushed as a \"staging area\" before being moved to\nthe SyncSource. The RepoURL and Path are assumed based on the associated SyncSource config in the SourceHydrator.",
                                                "type": "object",
                                                "properties": {
                                                  "targetBranch": {
                                                    "type": "string",
                                                    "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "syncSource": {
                                                "description": "SyncSource specifies a location from which hydrated manifests may be synced. RepoURL is assumed based on the\nassociated DrySource config in the SourceHydrator.",
                                                "type": "object",
                                                "properties": {
                                                  "path": {
                                                    "description": "Path is a directory path within the git repository where hydrated manifests should be committed to and synced\nfrom. If hydrateTo is set, this is just the path from which hydrated manifests will be synced.",
                                                    "type": "string"
                                                  },
                                                  "targetBranch": {
                                                    "type": "string",
                                                    "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "sources": {
                                            "type": "array",
                                            "title": "Sources is a reference to the location of the application's manifests or chart",
                                            "items": {
                                              "type": "object",
                                              "title": "ApplicationSource contains all required information about the source of an application",
                                              "properties": {
                                                "chart": {
                                                  "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                                  "type": "string"
                                                },
                                                "directory": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                                  "properties": {
                                                    "exclude": {
                                                      "type": "string",
                                                      "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                                    },
                                                    "include": {
                                                      "type": "string",
                                                      "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                                    },
                                                    "jsonnet": {
                                                      "type": "object",
                                                      "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                                      "properties": {
                                                        "extVars": {
                                                          "type": "array",
                                                          "title": "ExtVars is a list of Jsonnet External Variables",
                                                          "items": {
                                                            "type": "object",
                                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                            "properties": {
                                                              "code": {
                                                                "type": "boolean"
                                                              },
                                                              "name": {
                                                                "type": "string"
                                                              },
                                                              "value": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        },
                                                        "libs": {
                                                          "type": "array",
                                                          "title": "Additional library search dirs",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "tlas": {
                                                          "type": "array",
                                                          "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                          "items": {
                                                            "type": "object",
                                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                            "properties": {
                                                              "code": {
                                                                "type": "boolean"
                                                              },
                                                              "name": {
                                                                "type": "string"
                                                              },
                                                              "value": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    },
                                                    "recurse": {
                                                      "type": "boolean",
                                                      "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "helm": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceHelm holds helm specific options",
                                                  "properties": {
                                                    "apiVersions": {
                                                      "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "fileParameters": {
                                                      "type": "array",
                                                      "title": "FileParameters are file parameters to the helm template",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the Helm parameter"
                                                          },
                                                          "path": {
                                                            "type": "string",
                                                            "title": "Path is the path to the file containing the values for the Helm parameter"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "ignoreMissingValueFiles": {
                                                      "type": "boolean",
                                                      "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                                    },
                                                    "kubeVersion": {
                                                      "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                      "type": "string"
                                                    },
                                                    "namespace": {
                                                      "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                                      "type": "string"
                                                    },
                                                    "parameters": {
                                                      "type": "array",
                                                      "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                                        "properties": {
                                                          "forceString": {
                                                            "type": "boolean",
                                                            "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                          },
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the Helm parameter"
                                                          },
                                                          "value": {
                                                            "type": "string",
                                                            "title": "Value is the value for the Helm parameter"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "passCredentials": {
                                                      "type": "boolean",
                                                      "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                                    },
                                                    "releaseName": {
                                                      "type": "string",
                                                      "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                                    },
                                                    "skipCrds": {
                                                      "type": "boolean",
                                                      "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                                    },
                                                    "skipSchemaValidation": {
                                                      "type": "boolean",
                                                      "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                                    },
                                                    "skipTests": {
                                                      "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                                      "type": "boolean"
                                                    },
                                                    "valueFiles": {
                                                      "type": "array",
                                                      "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "values": {
                                                      "type": "string",
                                                      "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                                    },
                                                    "valuesObject": {
                                                      "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                                      "type": "object",
                                                      "properties": {
                                                        "raw": {
                                                          "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                          "type": "string",
                                                          "format": "byte"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    },
                                                    "version": {
                                                      "type": "string",
                                                      "title": "Version is the Helm version to use for templating (\"3\")"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "kustomize": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                                  "properties": {
                                                    "apiVersions": {
                                                      "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "commonAnnotations": {
                                                      "type": "object",
                                                      "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                                      "additionalProperties": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "commonAnnotationsEnvsubst": {
                                                      "type": "boolean",
                                                      "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                                    },
                                                    "commonLabels": {
                                                      "type": "object",
                                                      "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                                      "additionalProperties": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "components": {
                                                      "type": "array",
                                                      "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "forceCommonAnnotations": {
                                                      "type": "boolean",
                                                      "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                                    },
                                                    "forceCommonLabels": {
                                                      "type": "boolean",
                                                      "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                                    },
                                                    "ignoreMissingComponents": {
                                                      "type": "boolean",
                                                      "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                                    },
                                                    "images": {
                                                      "type": "array",
                                                      "title": "Images is a list of Kustomize image override specifications",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "kubeVersion": {
                                                      "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                      "type": "string"
                                                    },
                                                    "labelIncludeTemplates": {
                                                      "type": "boolean",
                                                      "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                                    },
                                                    "labelWithoutSelector": {
                                                      "type": "boolean",
                                                      "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                                    },
                                                    "namePrefix": {
                                                      "type": "string",
                                                      "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                                    },
                                                    "nameSuffix": {
                                                      "type": "string",
                                                      "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                                    },
                                                    "namespace": {
                                                      "type": "string",
                                                      "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                                    },
                                                    "patches": {
                                                      "type": "array",
                                                      "title": "Patches is a list of Kustomize patches",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "options": {
                                                            "type": "object",
                                                            "additionalProperties": {
                                                              "type": "boolean"
                                                            }
                                                          },
                                                          "patch": {
                                                            "type": "string"
                                                          },
                                                          "path": {
                                                            "type": "string"
                                                          },
                                                          "target": {
                                                            "type": "object",
                                                            "properties": {
                                                              "annotationSelector": {
                                                                "type": "string"
                                                              },
                                                              "labelSelector": {
                                                                "type": "string"
                                                              },
                                                              "resId": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "gvk": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "group": {
                                                                        "type": "string"
                                                                      },
                                                                      "kind": {
                                                                        "type": "string"
                                                                      },
                                                                      "version": {
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "additionalProperties": false
                                                                  },
                                                                  "name": {
                                                                    "type": "string"
                                                                  },
                                                                  "namespace": {
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "additionalProperties": false
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "replicas": {
                                                      "type": "array",
                                                      "title": "Replicas is a list of Kustomize Replicas override specifications",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "count": {
                                                            "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                            "type": "object",
                                                            "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                            "properties": {
                                                              "intVal": {
                                                                "type": "integer",
                                                                "format": "int32"
                                                              },
                                                              "strVal": {
                                                                "type": "string"
                                                              },
                                                              "type": {
                                                                "type": "integer",
                                                                "format": "int64"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          },
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name of Deployment or StatefulSet"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "version": {
                                                      "type": "string",
                                                      "title": "Version controls which version of Kustomize to use for rendering manifests"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "name": {
                                                  "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                                  "type": "string"
                                                },
                                                "path": {
                                                  "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                                  "type": "string"
                                                },
                                                "plugin": {
                                                  "type": "object",
                                                  "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                                  "properties": {
                                                    "env": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "EnvEntry represents an entry in the application's environment",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the variable, usually expressed in uppercase"
                                                          },
                                                          "value": {
                                                            "type": "string",
                                                            "title": "Value is the value of the variable"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "parameters": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "array": {
                                                            "description": "Array is the value of an array type parameter.",
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "map": {
                                                            "description": "Map is the value of a map type parameter.",
                                                            "type": "object",
                                                            "additionalProperties": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "name": {
                                                            "description": "Name is the name identifying a parameter.",
                                                            "type": "string"
                                                          },
                                                          "string": {
                                                            "description": "String_ is the value of a string type parameter.",
                                                            "type": "string"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "ref": {
                                                  "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                                  "type": "string"
                                                },
                                                "repoURL": {
                                                  "type": "string",
                                                  "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                                },
                                                "targetRevision": {
                                                  "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "syncPolicy": {
                                            "type": "object",
                                            "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                                            "properties": {
                                              "automated": {
                                                "type": "object",
                                                "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                                                "properties": {
                                                  "allowEmpty": {
                                                    "type": "boolean",
                                                    "title": "AllowEmpty allows apps have zero live resources (default: false)"
                                                  },
                                                  "enable": {
                                                    "type": "boolean",
                                                    "title": "Enable allows apps to explicitly control automated sync"
                                                  },
                                                  "prune": {
                                                    "type": "boolean",
                                                    "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                                                  },
                                                  "selfHeal": {
                                                    "type": "boolean",
                                                    "title": "SelfHeal specifies whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "managedNamespaceMetadata": {
                                                "type": "object",
                                                "properties": {
                                                  "annotations": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "labels": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "retry": {
                                                "type": "object",
                                                "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                                                "properties": {
                                                  "backoff": {
                                                    "type": "object",
                                                    "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                                                    "properties": {
                                                      "duration": {
                                                        "type": "string",
                                                        "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                                                      },
                                                      "factor": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "title": "Factor is a factor to multiply the base duration after each failed retry"
                                                      },
                                                      "maxDuration": {
                                                        "type": "string",
                                                        "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "limit": {
                                                    "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                                    "type": "integer",
                                                    "format": "int64"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "syncOptions": {
                                                "type": "array",
                                                "title": "Options allow you to specify whole app sync-options",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "values": {
                                    "description": "Values contains key/value pairs which are passed directly as parameters to the template. These values will not be\nsent as parameters to the plugin.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "pullRequest": {
                                "description": "PullRequestGenerator defines a generator that scrapes a PullRequest API to find candidate pull requests.",
                                "type": "object",
                                "properties": {
                                  "azuredevops": {
                                    "description": "PullRequestGeneratorAzureDevOps defines connection info specific to AzureDevOps.",
                                    "type": "object",
                                    "properties": {
                                      "api": {
                                        "description": "The Azure DevOps API URL to talk to. If blank, use https://dev.azure.com/.",
                                        "type": "string"
                                      },
                                      "labels": {
                                        "type": "array",
                                        "title": "Labels is used to filter the PRs that you want to target",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "organization": {
                                        "description": "Azure DevOps org to scan. Required.",
                                        "type": "string"
                                      },
                                      "project": {
                                        "description": "Azure DevOps project name to scan. Required.",
                                        "type": "string"
                                      },
                                      "repo": {
                                        "description": "Azure DevOps repo name to scan. Required.",
                                        "type": "string"
                                      },
                                      "tokenRef": {
                                        "description": "Utility struct for a reference to a secret key.",
                                        "type": "object",
                                        "properties": {
                                          "key": {
                                            "type": "string"
                                          },
                                          "secretName": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "bitbucket": {
                                    "description": "PullRequestGeneratorBitbucket defines connection info specific to Bitbucket.",
                                    "type": "object",
                                    "properties": {
                                      "api": {
                                        "description": "The Bitbucket REST API URL to talk to. If blank, uses https://api.bitbucket.org/2.0.",
                                        "type": "string"
                                      },
                                      "basicAuth": {
                                        "description": "BasicAuthBitbucketServer defines the username/(password or personal access token) for Basic auth.",
                                        "type": "object",
                                        "properties": {
                                          "passwordRef": {
                                            "description": "Utility struct for a reference to a secret key.",
                                            "type": "object",
                                            "properties": {
                                              "key": {
                                                "type": "string"
                                              },
                                              "secretName": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "username": {
                                            "type": "string",
                                            "title": "Username for Basic auth"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "bearerToken": {
                                        "description": "BearerTokenBitbucketCloud defines the Bearer token for BitBucket AppToken auth.",
                                        "type": "object",
                                        "properties": {
                                          "tokenRef": {
                                            "description": "Utility struct for a reference to a secret key.",
                                            "type": "object",
                                            "properties": {
                                              "key": {
                                                "type": "string"
                                              },
                                              "secretName": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "owner": {
                                        "description": "Workspace to scan. Required.",
                                        "type": "string"
                                      },
                                      "repo": {
                                        "description": "Repo name to scan. Required.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "bitbucketServer": {
                                    "description": "PullRequestGeneratorBitbucketServer defines connection info specific to BitbucketServer.",
                                    "type": "object",
                                    "properties": {
                                      "api": {
                                        "description": "The Bitbucket REST API URL to talk to e.g. https://bitbucket.org/rest Required.",
                                        "type": "string"
                                      },
                                      "basicAuth": {
                                        "description": "BasicAuthBitbucketServer defines the username/(password or personal access token) for Basic auth.",
                                        "type": "object",
                                        "properties": {
                                          "passwordRef": {
                                            "description": "Utility struct for a reference to a secret key.",
                                            "type": "object",
                                            "properties": {
                                              "key": {
                                                "type": "string"
                                              },
                                              "secretName": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "username": {
                                            "type": "string",
                                            "title": "Username for Basic auth"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "bearerToken": {
                                        "description": "BearerTokenBitbucket defines the Bearer token for BitBucket AppToken auth.",
                                        "type": "object",
                                        "properties": {
                                          "tokenRef": {
                                            "description": "Utility struct for a reference to a secret key.",
                                            "type": "object",
                                            "properties": {
                                              "key": {
                                                "type": "string"
                                              },
                                              "secretName": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "caRef": {
                                        "description": "Utility struct for a reference to a configmap key.",
                                        "type": "object",
                                        "properties": {
                                          "configMapName": {
                                            "type": "string"
                                          },
                                          "key": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "insecure": {
                                        "type": "boolean",
                                        "title": "Allow self-signed TLS / Certificates; default: false"
                                      },
                                      "project": {
                                        "description": "Project to scan. Required.",
                                        "type": "string"
                                      },
                                      "repo": {
                                        "description": "Repo name to scan. Required.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "continueOnRepoNotFoundError": {
                                    "description": "ContinueOnRepoNotFoundError is a flag to continue the ApplicationSet Pull Request generator parameters generation even if the repository is not found.",
                                    "type": "boolean"
                                  },
                                  "filters": {
                                    "description": "Filters for which pull requests should be considered.",
                                    "type": "array",
                                    "items": {
                                      "description": "PullRequestGeneratorFilter is a single pull request filter.\nIf multiple filter types are set on a single struct, they will be AND'd together. All filters must\npass for a pull request to be included.",
                                      "type": "object",
                                      "properties": {
                                        "branchMatch": {
                                          "type": "string"
                                        },
                                        "targetBranchMatch": {
                                          "type": "string"
                                        },
                                        "titleMatch": {
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "gitea": {
                                    "description": "PullRequestGeneratorGitea defines connection info specific to Gitea.",
                                    "type": "object",
                                    "properties": {
                                      "api": {
                                        "type": "string",
                                        "title": "The Gitea API URL to talk to. Required"
                                      },
                                      "insecure": {
                                        "description": "Allow insecure tls, for self-signed certificates; default: false.",
                                        "type": "boolean"
                                      },
                                      "labels": {
                                        "type": "array",
                                        "title": "Labels is used to filter the PRs that you want to target",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "owner": {
                                        "description": "Gitea org or user to scan. Required.",
                                        "type": "string"
                                      },
                                      "repo": {
                                        "description": "Gitea repo name to scan. Required.",
                                        "type": "string"
                                      },
                                      "tokenRef": {
                                        "description": "Utility struct for a reference to a secret key.",
                                        "type": "object",
                                        "properties": {
                                          "key": {
                                            "type": "string"
                                          },
                                          "secretName": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "github": {
                                    "description": "PullRequestGenerator defines connection info specific to GitHub.",
                                    "type": "object",
                                    "properties": {
                                      "api": {
                                        "description": "The GitHub API URL to talk to. If blank, use https://api.github.com/.",
                                        "type": "string"
                                      },
                                      "appSecretName": {
                                        "description": "AppSecretName is a reference to a GitHub App repo-creds secret with permission to access pull requests.",
                                        "type": "string"
                                      },
                                      "labels": {
                                        "type": "array",
                                        "title": "Labels is used to filter the PRs that you want to target",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "owner": {
                                        "description": "GitHub org or user to scan. Required.",
                                        "type": "string"
                                      },
                                      "repo": {
                                        "description": "GitHub repo name to scan. Required.",
                                        "type": "string"
                                      },
                                      "tokenRef": {
                                        "description": "Utility struct for a reference to a secret key.",
                                        "type": "object",
                                        "properties": {
                                          "key": {
                                            "type": "string"
                                          },
                                          "secretName": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "gitlab": {
                                    "description": "PullRequestGeneratorGitLab defines connection info specific to GitLab.",
                                    "type": "object",
                                    "properties": {
                                      "api": {
                                        "description": "The GitLab API URL to talk to. If blank, uses https://gitlab.com/.",
                                        "type": "string"
                                      },
                                      "caRef": {
                                        "description": "Utility struct for a reference to a configmap key.",
                                        "type": "object",
                                        "properties": {
                                          "configMapName": {
                                            "type": "string"
                                          },
                                          "key": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "insecure": {
                                        "type": "boolean",
                                        "title": "Skips validating the SCM provider's TLS certificate - useful for self-signed certificates.; default: false"
                                      },
                                      "labels": {
                                        "type": "array",
                                        "title": "Labels is used to filter the MRs that you want to target",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "project": {
                                        "description": "GitLab project to scan. Required.",
                                        "type": "string"
                                      },
                                      "pullRequestState": {
                                        "description": "PullRequestState is an additional MRs filter to get only those with a certain state. Default: \"\" (all states).\nValid values: opened, closed, merged, locked\".",
                                        "type": "string"
                                      },
                                      "tokenRef": {
                                        "description": "Utility struct for a reference to a secret key.",
                                        "type": "object",
                                        "properties": {
                                          "key": {
                                            "type": "string"
                                          },
                                          "secretName": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "requeueAfterSeconds": {
                                    "description": "Standard parameters.",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "template": {
                                    "type": "object",
                                    "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
                                    "properties": {
                                      "metadata": {
                                        "type": "object",
                                        "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
                                        "properties": {
                                          "annotations": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "finalizers": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "labels": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "namespace": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "spec": {
                                        "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
                                        "type": "object",
                                        "properties": {
                                          "destination": {
                                            "type": "object",
                                            "title": "ApplicationDestination holds information about the application's destination",
                                            "properties": {
                                              "name": {
                                                "description": "Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.",
                                                "type": "string"
                                              },
                                              "namespace": {
                                                "type": "string",
                                                "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                                              },
                                              "server": {
                                                "description": "Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "ignoreDifferences": {
                                            "type": "array",
                                            "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                                            "items": {
                                              "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                                              "type": "object",
                                              "properties": {
                                                "group": {
                                                  "type": "string"
                                                },
                                                "jqPathExpressions": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "jsonPointers": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "kind": {
                                                  "type": "string"
                                                },
                                                "managedFieldsManagers": {
                                                  "type": "array",
                                                  "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "name": {
                                                  "type": "string"
                                                },
                                                "namespace": {
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "info": {
                                            "type": "array",
                                            "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "project": {
                                            "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                                            "type": "string"
                                          },
                                          "revisionHistoryLimit": {
                                            "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                                            "type": "integer",
                                            "format": "int64"
                                          },
                                          "source": {
                                            "type": "object",
                                            "title": "ApplicationSource contains all required information about the source of an application",
                                            "properties": {
                                              "chart": {
                                                "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                                "type": "string"
                                              },
                                              "directory": {
                                                "type": "object",
                                                "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                                "properties": {
                                                  "exclude": {
                                                    "type": "string",
                                                    "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                                  },
                                                  "include": {
                                                    "type": "string",
                                                    "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                                  },
                                                  "jsonnet": {
                                                    "type": "object",
                                                    "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                                    "properties": {
                                                      "extVars": {
                                                        "type": "array",
                                                        "title": "ExtVars is a list of Jsonnet External Variables",
                                                        "items": {
                                                          "type": "object",
                                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                          "properties": {
                                                            "code": {
                                                              "type": "boolean"
                                                            },
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      },
                                                      "libs": {
                                                        "type": "array",
                                                        "title": "Additional library search dirs",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "tlas": {
                                                        "type": "array",
                                                        "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                        "items": {
                                                          "type": "object",
                                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                          "properties": {
                                                            "code": {
                                                              "type": "boolean"
                                                            },
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "recurse": {
                                                    "type": "boolean",
                                                    "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "helm": {
                                                "type": "object",
                                                "title": "ApplicationSourceHelm holds helm specific options",
                                                "properties": {
                                                  "apiVersions": {
                                                    "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "fileParameters": {
                                                    "type": "array",
                                                    "title": "FileParameters are file parameters to the helm template",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the Helm parameter"
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "title": "Path is the path to the file containing the values for the Helm parameter"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "ignoreMissingValueFiles": {
                                                    "type": "boolean",
                                                    "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                                  },
                                                  "kubeVersion": {
                                                    "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                    "type": "string"
                                                  },
                                                  "namespace": {
                                                    "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                                    "type": "string"
                                                  },
                                                  "parameters": {
                                                    "type": "array",
                                                    "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                                      "properties": {
                                                        "forceString": {
                                                          "type": "boolean",
                                                          "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the Helm parameter"
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "title": "Value is the value for the Helm parameter"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "passCredentials": {
                                                    "type": "boolean",
                                                    "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                                  },
                                                  "releaseName": {
                                                    "type": "string",
                                                    "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                                  },
                                                  "skipCrds": {
                                                    "type": "boolean",
                                                    "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                                  },
                                                  "skipSchemaValidation": {
                                                    "type": "boolean",
                                                    "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                                  },
                                                  "skipTests": {
                                                    "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                                    "type": "boolean"
                                                  },
                                                  "valueFiles": {
                                                    "type": "array",
                                                    "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "values": {
                                                    "type": "string",
                                                    "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                                  },
                                                  "valuesObject": {
                                                    "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                                    "type": "object",
                                                    "properties": {
                                                      "raw": {
                                                        "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                        "type": "string",
                                                        "format": "byte"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "version": {
                                                    "type": "string",
                                                    "title": "Version is the Helm version to use for templating (\"3\")"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "kustomize": {
                                                "type": "object",
                                                "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                                "properties": {
                                                  "apiVersions": {
                                                    "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "commonAnnotations": {
                                                    "type": "object",
                                                    "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "commonAnnotationsEnvsubst": {
                                                    "type": "boolean",
                                                    "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                                  },
                                                  "commonLabels": {
                                                    "type": "object",
                                                    "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "components": {
                                                    "type": "array",
                                                    "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "forceCommonAnnotations": {
                                                    "type": "boolean",
                                                    "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                                  },
                                                  "forceCommonLabels": {
                                                    "type": "boolean",
                                                    "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                                  },
                                                  "ignoreMissingComponents": {
                                                    "type": "boolean",
                                                    "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                                  },
                                                  "images": {
                                                    "type": "array",
                                                    "title": "Images is a list of Kustomize image override specifications",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "kubeVersion": {
                                                    "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                    "type": "string"
                                                  },
                                                  "labelIncludeTemplates": {
                                                    "type": "boolean",
                                                    "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                                  },
                                                  "labelWithoutSelector": {
                                                    "type": "boolean",
                                                    "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                                  },
                                                  "namePrefix": {
                                                    "type": "string",
                                                    "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                                  },
                                                  "nameSuffix": {
                                                    "type": "string",
                                                    "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                                  },
                                                  "namespace": {
                                                    "type": "string",
                                                    "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                                  },
                                                  "patches": {
                                                    "type": "array",
                                                    "title": "Patches is a list of Kustomize patches",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "options": {
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "type": "boolean"
                                                          }
                                                        },
                                                        "patch": {
                                                          "type": "string"
                                                        },
                                                        "path": {
                                                          "type": "string"
                                                        },
                                                        "target": {
                                                          "type": "object",
                                                          "properties": {
                                                            "annotationSelector": {
                                                              "type": "string"
                                                            },
                                                            "labelSelector": {
                                                              "type": "string"
                                                            },
                                                            "resId": {
                                                              "type": "object",
                                                              "properties": {
                                                                "gvk": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "group": {
                                                                      "type": "string"
                                                                    },
                                                                    "kind": {
                                                                      "type": "string"
                                                                    },
                                                                    "version": {
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "additionalProperties": false
                                                                },
                                                                "name": {
                                                                  "type": "string"
                                                                },
                                                                "namespace": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "additionalProperties": false
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "replicas": {
                                                    "type": "array",
                                                    "title": "Replicas is a list of Kustomize Replicas override specifications",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "count": {
                                                          "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                          "type": "object",
                                                          "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                          "properties": {
                                                            "intVal": {
                                                              "type": "integer",
                                                              "format": "int32"
                                                            },
                                                            "strVal": {
                                                              "type": "string"
                                                            },
                                                            "type": {
                                                              "type": "integer",
                                                              "format": "int64"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name of Deployment or StatefulSet"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "version": {
                                                    "type": "string",
                                                    "title": "Version controls which version of Kustomize to use for rendering manifests"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "name": {
                                                "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                                "type": "string"
                                              },
                                              "path": {
                                                "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                                "type": "string"
                                              },
                                              "plugin": {
                                                "type": "object",
                                                "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                                "properties": {
                                                  "env": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "EnvEntry represents an entry in the application's environment",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the variable, usually expressed in uppercase"
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "title": "Value is the value of the variable"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "parameters": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "array": {
                                                          "description": "Array is the value of an array type parameter.",
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "map": {
                                                          "description": "Map is the value of a map type parameter.",
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "name": {
                                                          "description": "Name is the name identifying a parameter.",
                                                          "type": "string"
                                                        },
                                                        "string": {
                                                          "description": "String_ is the value of a string type parameter.",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "ref": {
                                                "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                                "type": "string"
                                              },
                                              "repoURL": {
                                                "type": "string",
                                                "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                              },
                                              "targetRevision": {
                                                "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "sourceHydrator": {
                                            "description": "SourceHydrator specifies a dry \"don't repeat yourself\" source for manifests, a sync source from which to sync\nhydrated manifests, and an optional hydrateTo location to act as a \"staging\" aread for hydrated manifests.",
                                            "type": "object",
                                            "properties": {
                                              "drySource": {
                                                "description": "DrySource specifies a location for dry \"don't repeat yourself\" manifest source information.",
                                                "type": "object",
                                                "properties": {
                                                  "path": {
                                                    "type": "string",
                                                    "title": "Path is a directory path within the Git repository where the manifests are located"
                                                  },
                                                  "repoURL": {
                                                    "type": "string",
                                                    "title": "RepoURL is the URL to the git repository that contains the application manifests"
                                                  },
                                                  "targetRevision": {
                                                    "type": "string",
                                                    "title": "TargetRevision defines the revision of the source to hydrate"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "hydrateTo": {
                                                "description": "HydrateTo specifies a location to which hydrated manifests should be pushed as a \"staging area\" before being moved to\nthe SyncSource. The RepoURL and Path are assumed based on the associated SyncSource config in the SourceHydrator.",
                                                "type": "object",
                                                "properties": {
                                                  "targetBranch": {
                                                    "type": "string",
                                                    "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "syncSource": {
                                                "description": "SyncSource specifies a location from which hydrated manifests may be synced. RepoURL is assumed based on the\nassociated DrySource config in the SourceHydrator.",
                                                "type": "object",
                                                "properties": {
                                                  "path": {
                                                    "description": "Path is a directory path within the git repository where hydrated manifests should be committed to and synced\nfrom. If hydrateTo is set, this is just the path from which hydrated manifests will be synced.",
                                                    "type": "string"
                                                  },
                                                  "targetBranch": {
                                                    "type": "string",
                                                    "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "sources": {
                                            "type": "array",
                                            "title": "Sources is a reference to the location of the application's manifests or chart",
                                            "items": {
                                              "type": "object",
                                              "title": "ApplicationSource contains all required information about the source of an application",
                                              "properties": {
                                                "chart": {
                                                  "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                                  "type": "string"
                                                },
                                                "directory": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                                  "properties": {
                                                    "exclude": {
                                                      "type": "string",
                                                      "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                                    },
                                                    "include": {
                                                      "type": "string",
                                                      "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                                    },
                                                    "jsonnet": {
                                                      "type": "object",
                                                      "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                                      "properties": {
                                                        "extVars": {
                                                          "type": "array",
                                                          "title": "ExtVars is a list of Jsonnet External Variables",
                                                          "items": {
                                                            "type": "object",
                                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                            "properties": {
                                                              "code": {
                                                                "type": "boolean"
                                                              },
                                                              "name": {
                                                                "type": "string"
                                                              },
                                                              "value": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        },
                                                        "libs": {
                                                          "type": "array",
                                                          "title": "Additional library search dirs",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "tlas": {
                                                          "type": "array",
                                                          "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                          "items": {
                                                            "type": "object",
                                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                            "properties": {
                                                              "code": {
                                                                "type": "boolean"
                                                              },
                                                              "name": {
                                                                "type": "string"
                                                              },
                                                              "value": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    },
                                                    "recurse": {
                                                      "type": "boolean",
                                                      "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "helm": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceHelm holds helm specific options",
                                                  "properties": {
                                                    "apiVersions": {
                                                      "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "fileParameters": {
                                                      "type": "array",
                                                      "title": "FileParameters are file parameters to the helm template",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the Helm parameter"
                                                          },
                                                          "path": {
                                                            "type": "string",
                                                            "title": "Path is the path to the file containing the values for the Helm parameter"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "ignoreMissingValueFiles": {
                                                      "type": "boolean",
                                                      "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                                    },
                                                    "kubeVersion": {
                                                      "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                      "type": "string"
                                                    },
                                                    "namespace": {
                                                      "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                                      "type": "string"
                                                    },
                                                    "parameters": {
                                                      "type": "array",
                                                      "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                                        "properties": {
                                                          "forceString": {
                                                            "type": "boolean",
                                                            "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                          },
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the Helm parameter"
                                                          },
                                                          "value": {
                                                            "type": "string",
                                                            "title": "Value is the value for the Helm parameter"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "passCredentials": {
                                                      "type": "boolean",
                                                      "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                                    },
                                                    "releaseName": {
                                                      "type": "string",
                                                      "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                                    },
                                                    "skipCrds": {
                                                      "type": "boolean",
                                                      "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                                    },
                                                    "skipSchemaValidation": {
                                                      "type": "boolean",
                                                      "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                                    },
                                                    "skipTests": {
                                                      "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                                      "type": "boolean"
                                                    },
                                                    "valueFiles": {
                                                      "type": "array",
                                                      "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "values": {
                                                      "type": "string",
                                                      "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                                    },
                                                    "valuesObject": {
                                                      "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                                      "type": "object",
                                                      "properties": {
                                                        "raw": {
                                                          "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                          "type": "string",
                                                          "format": "byte"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    },
                                                    "version": {
                                                      "type": "string",
                                                      "title": "Version is the Helm version to use for templating (\"3\")"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "kustomize": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                                  "properties": {
                                                    "apiVersions": {
                                                      "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "commonAnnotations": {
                                                      "type": "object",
                                                      "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                                      "additionalProperties": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "commonAnnotationsEnvsubst": {
                                                      "type": "boolean",
                                                      "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                                    },
                                                    "commonLabels": {
                                                      "type": "object",
                                                      "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                                      "additionalProperties": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "components": {
                                                      "type": "array",
                                                      "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "forceCommonAnnotations": {
                                                      "type": "boolean",
                                                      "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                                    },
                                                    "forceCommonLabels": {
                                                      "type": "boolean",
                                                      "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                                    },
                                                    "ignoreMissingComponents": {
                                                      "type": "boolean",
                                                      "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                                    },
                                                    "images": {
                                                      "type": "array",
                                                      "title": "Images is a list of Kustomize image override specifications",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "kubeVersion": {
                                                      "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                      "type": "string"
                                                    },
                                                    "labelIncludeTemplates": {
                                                      "type": "boolean",
                                                      "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                                    },
                                                    "labelWithoutSelector": {
                                                      "type": "boolean",
                                                      "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                                    },
                                                    "namePrefix": {
                                                      "type": "string",
                                                      "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                                    },
                                                    "nameSuffix": {
                                                      "type": "string",
                                                      "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                                    },
                                                    "namespace": {
                                                      "type": "string",
                                                      "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                                    },
                                                    "patches": {
                                                      "type": "array",
                                                      "title": "Patches is a list of Kustomize patches",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "options": {
                                                            "type": "object",
                                                            "additionalProperties": {
                                                              "type": "boolean"
                                                            }
                                                          },
                                                          "patch": {
                                                            "type": "string"
                                                          },
                                                          "path": {
                                                            "type": "string"
                                                          },
                                                          "target": {
                                                            "type": "object",
                                                            "properties": {
                                                              "annotationSelector": {
                                                                "type": "string"
                                                              },
                                                              "labelSelector": {
                                                                "type": "string"
                                                              },
                                                              "resId": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "gvk": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "group": {
                                                                        "type": "string"
                                                                      },
                                                                      "kind": {
                                                                        "type": "string"
                                                                      },
                                                                      "version": {
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "additionalProperties": false
                                                                  },
                                                                  "name": {
                                                                    "type": "string"
                                                                  },
                                                                  "namespace": {
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "additionalProperties": false
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "replicas": {
                                                      "type": "array",
                                                      "title": "Replicas is a list of Kustomize Replicas override specifications",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "count": {
                                                            "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                            "type": "object",
                                                            "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                            "properties": {
                                                              "intVal": {
                                                                "type": "integer",
                                                                "format": "int32"
                                                              },
                                                              "strVal": {
                                                                "type": "string"
                                                              },
                                                              "type": {
                                                                "type": "integer",
                                                                "format": "int64"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          },
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name of Deployment or StatefulSet"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "version": {
                                                      "type": "string",
                                                      "title": "Version controls which version of Kustomize to use for rendering manifests"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "name": {
                                                  "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                                  "type": "string"
                                                },
                                                "path": {
                                                  "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                                  "type": "string"
                                                },
                                                "plugin": {
                                                  "type": "object",
                                                  "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                                  "properties": {
                                                    "env": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "EnvEntry represents an entry in the application's environment",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the variable, usually expressed in uppercase"
                                                          },
                                                          "value": {
                                                            "type": "string",
                                                            "title": "Value is the value of the variable"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "parameters": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "array": {
                                                            "description": "Array is the value of an array type parameter.",
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "map": {
                                                            "description": "Map is the value of a map type parameter.",
                                                            "type": "object",
                                                            "additionalProperties": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "name": {
                                                            "description": "Name is the name identifying a parameter.",
                                                            "type": "string"
                                                          },
                                                          "string": {
                                                            "description": "String_ is the value of a string type parameter.",
                                                            "type": "string"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "ref": {
                                                  "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                                  "type": "string"
                                                },
                                                "repoURL": {
                                                  "type": "string",
                                                  "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                                },
                                                "targetRevision": {
                                                  "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "syncPolicy": {
                                            "type": "object",
                                            "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                                            "properties": {
                                              "automated": {
                                                "type": "object",
                                                "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                                                "properties": {
                                                  "allowEmpty": {
                                                    "type": "boolean",
                                                    "title": "AllowEmpty allows apps have zero live resources (default: false)"
                                                  },
                                                  "enable": {
                                                    "type": "boolean",
                                                    "title": "Enable allows apps to explicitly control automated sync"
                                                  },
                                                  "prune": {
                                                    "type": "boolean",
                                                    "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                                                  },
                                                  "selfHeal": {
                                                    "type": "boolean",
                                                    "title": "SelfHeal specifies whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "managedNamespaceMetadata": {
                                                "type": "object",
                                                "properties": {
                                                  "annotations": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "labels": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "retry": {
                                                "type": "object",
                                                "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                                                "properties": {
                                                  "backoff": {
                                                    "type": "object",
                                                    "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                                                    "properties": {
                                                      "duration": {
                                                        "type": "string",
                                                        "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                                                      },
                                                      "factor": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "title": "Factor is a factor to multiply the base duration after each failed retry"
                                                      },
                                                      "maxDuration": {
                                                        "type": "string",
                                                        "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "limit": {
                                                    "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                                    "type": "integer",
                                                    "format": "int64"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "syncOptions": {
                                                "type": "array",
                                                "title": "Options allow you to specify whole app sync-options",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "values": {
                                    "type": "object",
                                    "title": "Values contains key/value pairs which are passed directly as parameters to the template",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "scmProvider": {
                                "description": "SCMProviderGenerator defines a generator that scrapes a SCMaaS API to find candidate repos.",
                                "type": "object",
                                "properties": {
                                  "awsCodeCommit": {
                                    "description": "SCMProviderGeneratorAWSCodeCommit defines connection info specific to AWS CodeCommit.",
                                    "type": "object",
                                    "properties": {
                                      "allBranches": {
                                        "description": "Scan all branches instead of just the default branch.",
                                        "type": "boolean"
                                      },
                                      "region": {
                                        "description": "Region provides the AWS region to discover repos.\nif not provided, AppSet controller will infer the current region from environment.",
                                        "type": "string"
                                      },
                                      "role": {
                                        "description": "Role provides the AWS IAM role to assume, for cross-account repo discovery\nif not provided, AppSet controller will use its pod/node identity to discover.",
                                        "type": "string"
                                      },
                                      "tagFilters": {
                                        "type": "array",
                                        "title": "TagFilters provides the tag filter(s) for repo discovery",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "key": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "azureDevOps": {
                                    "description": "SCMProviderGeneratorAzureDevOps defines connection info specific to Azure DevOps.",
                                    "type": "object",
                                    "properties": {
                                      "accessTokenRef": {
                                        "description": "Utility struct for a reference to a secret key.",
                                        "type": "object",
                                        "properties": {
                                          "key": {
                                            "type": "string"
                                          },
                                          "secretName": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "allBranches": {
                                        "description": "Scan all branches instead of just the default branch.",
                                        "type": "boolean"
                                      },
                                      "api": {
                                        "description": "The URL to Azure DevOps. If blank, use https://dev.azure.com.",
                                        "type": "string"
                                      },
                                      "organization": {
                                        "description": "Azure Devops organization. Required. E.g. \"my-organization\".",
                                        "type": "string"
                                      },
                                      "teamProject": {
                                        "description": "Azure Devops team project. Required. E.g. \"my-team\".",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "bitbucket": {
                                    "description": "SCMProviderGeneratorBitbucket defines connection info specific to Bitbucket Cloud (API version 2).",
                                    "type": "object",
                                    "properties": {
                                      "allBranches": {
                                        "description": "Scan all branches instead of just the main branch.",
                                        "type": "boolean"
                                      },
                                      "appPasswordRef": {
                                        "description": "Utility struct for a reference to a secret key.",
                                        "type": "object",
                                        "properties": {
                                          "key": {
                                            "type": "string"
                                          },
                                          "secretName": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "owner": {
                                        "description": "Bitbucket workspace to scan. Required.",
                                        "type": "string"
                                      },
                                      "user": {
                                        "type": "string",
                                        "title": "Bitbucket user to use when authenticating.  Should have a \"member\" role to be able to read all repositories and branches.  Required"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "bitbucketServer": {
                                    "description": "SCMProviderGeneratorBitbucketServer defines connection info specific to Bitbucket Server.",
                                    "type": "object",
                                    "properties": {
                                      "allBranches": {
                                        "description": "Scan all branches instead of just the default branch.",
                                        "type": "boolean"
                                      },
                                      "api": {
                                        "description": "The Bitbucket Server REST API URL to talk to. Required.",
                                        "type": "string"
                                      },
                                      "basicAuth": {
                                        "description": "BasicAuthBitbucketServer defines the username/(password or personal access token) for Basic auth.",
                                        "type": "object",
                                        "properties": {
                                          "passwordRef": {
                                            "description": "Utility struct for a reference to a secret key.",
                                            "type": "object",
                                            "properties": {
                                              "key": {
                                                "type": "string"
                                              },
                                              "secretName": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "username": {
                                            "type": "string",
                                            "title": "Username for Basic auth"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "bearerToken": {
                                        "description": "BearerTokenBitbucket defines the Bearer token for BitBucket AppToken auth.",
                                        "type": "object",
                                        "properties": {
                                          "tokenRef": {
                                            "description": "Utility struct for a reference to a secret key.",
                                            "type": "object",
                                            "properties": {
                                              "key": {
                                                "type": "string"
                                              },
                                              "secretName": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "caRef": {
                                        "description": "Utility struct for a reference to a configmap key.",
                                        "type": "object",
                                        "properties": {
                                          "configMapName": {
                                            "type": "string"
                                          },
                                          "key": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "insecure": {
                                        "type": "boolean",
                                        "title": "Allow self-signed TLS / Certificates; default: false"
                                      },
                                      "project": {
                                        "description": "Project to scan. Required.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "cloneProtocol": {
                                    "description": "Which protocol to use for the SCM URL. Default is provider-specific but ssh if possible. Not all providers\nnecessarily support all protocols.",
                                    "type": "string"
                                  },
                                  "filters": {
                                    "description": "Filters for which repos should be considered.",
                                    "type": "array",
                                    "items": {
                                      "description": "SCMProviderGeneratorFilter is a single repository filter.\nIf multiple filter types are set on a single struct, they will be AND'd together. All filters must\npass for a repo to be included.",
                                      "type": "object",
                                      "properties": {
                                        "branchMatch": {
                                          "description": "A regex which must match the branch name.",
                                          "type": "string"
                                        },
                                        "labelMatch": {
                                          "description": "A regex which must match at least one label.",
                                          "type": "string"
                                        },
                                        "pathsDoNotExist": {
                                          "description": "An array of paths, all of which must not exist.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "pathsExist": {
                                          "description": "An array of paths, all of which must exist.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "repositoryMatch": {
                                          "description": "A regex for repo names.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "gitea": {
                                    "description": "SCMProviderGeneratorGitea defines a connection info specific to Gitea.",
                                    "type": "object",
                                    "properties": {
                                      "allBranches": {
                                        "description": "Scan all branches instead of just the default branch.",
                                        "type": "boolean"
                                      },
                                      "api": {
                                        "description": "The Gitea URL to talk to. For example https://gitea.mydomain.com/.",
                                        "type": "string"
                                      },
                                      "insecure": {
                                        "type": "boolean",
                                        "title": "Allow self-signed TLS / Certificates; default: false"
                                      },
                                      "owner": {
                                        "description": "Gitea organization or user to scan. Required.",
                                        "type": "string"
                                      },
                                      "tokenRef": {
                                        "description": "Utility struct for a reference to a secret key.",
                                        "type": "object",
                                        "properties": {
                                          "key": {
                                            "type": "string"
                                          },
                                          "secretName": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "github": {
                                    "description": "SCMProviderGeneratorGithub defines connection info specific to GitHub.",
                                    "type": "object",
                                    "properties": {
                                      "allBranches": {
                                        "description": "Scan all branches instead of just the default branch.",
                                        "type": "boolean"
                                      },
                                      "api": {
                                        "description": "The GitHub API URL to talk to. If blank, use https://api.github.com/.",
                                        "type": "string"
                                      },
                                      "appSecretName": {
                                        "description": "AppSecretName is a reference to a GitHub App repo-creds secret.",
                                        "type": "string"
                                      },
                                      "organization": {
                                        "description": "GitHub org to scan. Required.",
                                        "type": "string"
                                      },
                                      "tokenRef": {
                                        "description": "Utility struct for a reference to a secret key.",
                                        "type": "object",
                                        "properties": {
                                          "key": {
                                            "type": "string"
                                          },
                                          "secretName": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "gitlab": {
                                    "description": "SCMProviderGeneratorGitlab defines connection info specific to Gitlab.",
                                    "type": "object",
                                    "properties": {
                                      "allBranches": {
                                        "description": "Scan all branches instead of just the default branch.",
                                        "type": "boolean"
                                      },
                                      "api": {
                                        "description": "The Gitlab API URL to talk to.",
                                        "type": "string"
                                      },
                                      "caRef": {
                                        "description": "Utility struct for a reference to a configmap key.",
                                        "type": "object",
                                        "properties": {
                                          "configMapName": {
                                            "type": "string"
                                          },
                                          "key": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "group": {
                                        "description": "Gitlab group to scan. Required.  You can use either the project id (recommended) or the full namespaced path.",
                                        "type": "string"
                                      },
                                      "includeSharedProjects": {
                                        "type": "boolean",
                                        "title": "When recursing through subgroups, also include shared Projects (true) or scan only the subgroups under same path (false).  Defaults to \"true\""
                                      },
                                      "includeSubgroups": {
                                        "type": "boolean",
                                        "title": "Recurse through subgroups (true) or scan only the base group (false).  Defaults to \"false\""
                                      },
                                      "insecure": {
                                        "type": "boolean",
                                        "title": "Skips validating the SCM provider's TLS certificate - useful for self-signed certificates.; default: false"
                                      },
                                      "tokenRef": {
                                        "description": "Utility struct for a reference to a secret key.",
                                        "type": "object",
                                        "properties": {
                                          "key": {
                                            "type": "string"
                                          },
                                          "secretName": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "topic": {
                                        "description": "Filter repos list based on Gitlab Topic.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "requeueAfterSeconds": {
                                    "description": "Standard parameters.",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "template": {
                                    "type": "object",
                                    "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
                                    "properties": {
                                      "metadata": {
                                        "type": "object",
                                        "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
                                        "properties": {
                                          "annotations": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "finalizers": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "labels": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "namespace": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "spec": {
                                        "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
                                        "type": "object",
                                        "properties": {
                                          "destination": {
                                            "type": "object",
                                            "title": "ApplicationDestination holds information about the application's destination",
                                            "properties": {
                                              "name": {
                                                "description": "Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.",
                                                "type": "string"
                                              },
                                              "namespace": {
                                                "type": "string",
                                                "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                                              },
                                              "server": {
                                                "description": "Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "ignoreDifferences": {
                                            "type": "array",
                                            "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                                            "items": {
                                              "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                                              "type": "object",
                                              "properties": {
                                                "group": {
                                                  "type": "string"
                                                },
                                                "jqPathExpressions": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "jsonPointers": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "kind": {
                                                  "type": "string"
                                                },
                                                "managedFieldsManagers": {
                                                  "type": "array",
                                                  "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "name": {
                                                  "type": "string"
                                                },
                                                "namespace": {
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "info": {
                                            "type": "array",
                                            "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "project": {
                                            "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                                            "type": "string"
                                          },
                                          "revisionHistoryLimit": {
                                            "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                                            "type": "integer",
                                            "format": "int64"
                                          },
                                          "source": {
                                            "type": "object",
                                            "title": "ApplicationSource contains all required information about the source of an application",
                                            "properties": {
                                              "chart": {
                                                "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                                "type": "string"
                                              },
                                              "directory": {
                                                "type": "object",
                                                "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                                "properties": {
                                                  "exclude": {
                                                    "type": "string",
                                                    "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                                  },
                                                  "include": {
                                                    "type": "string",
                                                    "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                                  },
                                                  "jsonnet": {
                                                    "type": "object",
                                                    "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                                    "properties": {
                                                      "extVars": {
                                                        "type": "array",
                                                        "title": "ExtVars is a list of Jsonnet External Variables",
                                                        "items": {
                                                          "type": "object",
                                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                          "properties": {
                                                            "code": {
                                                              "type": "boolean"
                                                            },
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      },
                                                      "libs": {
                                                        "type": "array",
                                                        "title": "Additional library search dirs",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "tlas": {
                                                        "type": "array",
                                                        "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                        "items": {
                                                          "type": "object",
                                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                          "properties": {
                                                            "code": {
                                                              "type": "boolean"
                                                            },
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "recurse": {
                                                    "type": "boolean",
                                                    "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "helm": {
                                                "type": "object",
                                                "title": "ApplicationSourceHelm holds helm specific options",
                                                "properties": {
                                                  "apiVersions": {
                                                    "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "fileParameters": {
                                                    "type": "array",
                                                    "title": "FileParameters are file parameters to the helm template",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the Helm parameter"
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "title": "Path is the path to the file containing the values for the Helm parameter"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "ignoreMissingValueFiles": {
                                                    "type": "boolean",
                                                    "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                                  },
                                                  "kubeVersion": {
                                                    "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                    "type": "string"
                                                  },
                                                  "namespace": {
                                                    "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                                    "type": "string"
                                                  },
                                                  "parameters": {
                                                    "type": "array",
                                                    "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                                      "properties": {
                                                        "forceString": {
                                                          "type": "boolean",
                                                          "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the Helm parameter"
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "title": "Value is the value for the Helm parameter"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "passCredentials": {
                                                    "type": "boolean",
                                                    "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                                  },
                                                  "releaseName": {
                                                    "type": "string",
                                                    "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                                  },
                                                  "skipCrds": {
                                                    "type": "boolean",
                                                    "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                                  },
                                                  "skipSchemaValidation": {
                                                    "type": "boolean",
                                                    "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                                  },
                                                  "skipTests": {
                                                    "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                                    "type": "boolean"
                                                  },
                                                  "valueFiles": {
                                                    "type": "array",
                                                    "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "values": {
                                                    "type": "string",
                                                    "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                                  },
                                                  "valuesObject": {
                                                    "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                                    "type": "object",
                                                    "properties": {
                                                      "raw": {
                                                        "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                        "type": "string",
                                                        "format": "byte"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "version": {
                                                    "type": "string",
                                                    "title": "Version is the Helm version to use for templating (\"3\")"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "kustomize": {
                                                "type": "object",
                                                "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                                "properties": {
                                                  "apiVersions": {
                                                    "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "commonAnnotations": {
                                                    "type": "object",
                                                    "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "commonAnnotationsEnvsubst": {
                                                    "type": "boolean",
                                                    "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                                  },
                                                  "commonLabels": {
                                                    "type": "object",
                                                    "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "components": {
                                                    "type": "array",
                                                    "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "forceCommonAnnotations": {
                                                    "type": "boolean",
                                                    "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                                  },
                                                  "forceCommonLabels": {
                                                    "type": "boolean",
                                                    "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                                  },
                                                  "ignoreMissingComponents": {
                                                    "type": "boolean",
                                                    "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                                  },
                                                  "images": {
                                                    "type": "array",
                                                    "title": "Images is a list of Kustomize image override specifications",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "kubeVersion": {
                                                    "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                    "type": "string"
                                                  },
                                                  "labelIncludeTemplates": {
                                                    "type": "boolean",
                                                    "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                                  },
                                                  "labelWithoutSelector": {
                                                    "type": "boolean",
                                                    "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                                  },
                                                  "namePrefix": {
                                                    "type": "string",
                                                    "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                                  },
                                                  "nameSuffix": {
                                                    "type": "string",
                                                    "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                                  },
                                                  "namespace": {
                                                    "type": "string",
                                                    "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                                  },
                                                  "patches": {
                                                    "type": "array",
                                                    "title": "Patches is a list of Kustomize patches",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "options": {
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "type": "boolean"
                                                          }
                                                        },
                                                        "patch": {
                                                          "type": "string"
                                                        },
                                                        "path": {
                                                          "type": "string"
                                                        },
                                                        "target": {
                                                          "type": "object",
                                                          "properties": {
                                                            "annotationSelector": {
                                                              "type": "string"
                                                            },
                                                            "labelSelector": {
                                                              "type": "string"
                                                            },
                                                            "resId": {
                                                              "type": "object",
                                                              "properties": {
                                                                "gvk": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "group": {
                                                                      "type": "string"
                                                                    },
                                                                    "kind": {
                                                                      "type": "string"
                                                                    },
                                                                    "version": {
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "additionalProperties": false
                                                                },
                                                                "name": {
                                                                  "type": "string"
                                                                },
                                                                "namespace": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "additionalProperties": false
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "replicas": {
                                                    "type": "array",
                                                    "title": "Replicas is a list of Kustomize Replicas override specifications",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "count": {
                                                          "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                          "type": "object",
                                                          "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                          "properties": {
                                                            "intVal": {
                                                              "type": "integer",
                                                              "format": "int32"
                                                            },
                                                            "strVal": {
                                                              "type": "string"
                                                            },
                                                            "type": {
                                                              "type": "integer",
                                                              "format": "int64"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name of Deployment or StatefulSet"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "version": {
                                                    "type": "string",
                                                    "title": "Version controls which version of Kustomize to use for rendering manifests"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "name": {
                                                "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                                "type": "string"
                                              },
                                              "path": {
                                                "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                                "type": "string"
                                              },
                                              "plugin": {
                                                "type": "object",
                                                "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                                "properties": {
                                                  "env": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "EnvEntry represents an entry in the application's environment",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the variable, usually expressed in uppercase"
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "title": "Value is the value of the variable"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "parameters": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "array": {
                                                          "description": "Array is the value of an array type parameter.",
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "map": {
                                                          "description": "Map is the value of a map type parameter.",
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "name": {
                                                          "description": "Name is the name identifying a parameter.",
                                                          "type": "string"
                                                        },
                                                        "string": {
                                                          "description": "String_ is the value of a string type parameter.",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "ref": {
                                                "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                                "type": "string"
                                              },
                                              "repoURL": {
                                                "type": "string",
                                                "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                              },
                                              "targetRevision": {
                                                "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "sourceHydrator": {
                                            "description": "SourceHydrator specifies a dry \"don't repeat yourself\" source for manifests, a sync source from which to sync\nhydrated manifests, and an optional hydrateTo location to act as a \"staging\" aread for hydrated manifests.",
                                            "type": "object",
                                            "properties": {
                                              "drySource": {
                                                "description": "DrySource specifies a location for dry \"don't repeat yourself\" manifest source information.",
                                                "type": "object",
                                                "properties": {
                                                  "path": {
                                                    "type": "string",
                                                    "title": "Path is a directory path within the Git repository where the manifests are located"
                                                  },
                                                  "repoURL": {
                                                    "type": "string",
                                                    "title": "RepoURL is the URL to the git repository that contains the application manifests"
                                                  },
                                                  "targetRevision": {
                                                    "type": "string",
                                                    "title": "TargetRevision defines the revision of the source to hydrate"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "hydrateTo": {
                                                "description": "HydrateTo specifies a location to which hydrated manifests should be pushed as a \"staging area\" before being moved to\nthe SyncSource. The RepoURL and Path are assumed based on the associated SyncSource config in the SourceHydrator.",
                                                "type": "object",
                                                "properties": {
                                                  "targetBranch": {
                                                    "type": "string",
                                                    "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "syncSource": {
                                                "description": "SyncSource specifies a location from which hydrated manifests may be synced. RepoURL is assumed based on the\nassociated DrySource config in the SourceHydrator.",
                                                "type": "object",
                                                "properties": {
                                                  "path": {
                                                    "description": "Path is a directory path within the git repository where hydrated manifests should be committed to and synced\nfrom. If hydrateTo is set, this is just the path from which hydrated manifests will be synced.",
                                                    "type": "string"
                                                  },
                                                  "targetBranch": {
                                                    "type": "string",
                                                    "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "sources": {
                                            "type": "array",
                                            "title": "Sources is a reference to the location of the application's manifests or chart",
                                            "items": {
                                              "type": "object",
                                              "title": "ApplicationSource contains all required information about the source of an application",
                                              "properties": {
                                                "chart": {
                                                  "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                                  "type": "string"
                                                },
                                                "directory": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                                  "properties": {
                                                    "exclude": {
                                                      "type": "string",
                                                      "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                                    },
                                                    "include": {
                                                      "type": "string",
                                                      "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                                    },
                                                    "jsonnet": {
                                                      "type": "object",
                                                      "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                                      "properties": {
                                                        "extVars": {
                                                          "type": "array",
                                                          "title": "ExtVars is a list of Jsonnet External Variables",
                                                          "items": {
                                                            "type": "object",
                                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                            "properties": {
                                                              "code": {
                                                                "type": "boolean"
                                                              },
                                                              "name": {
                                                                "type": "string"
                                                              },
                                                              "value": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        },
                                                        "libs": {
                                                          "type": "array",
                                                          "title": "Additional library search dirs",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "tlas": {
                                                          "type": "array",
                                                          "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                          "items": {
                                                            "type": "object",
                                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                            "properties": {
                                                              "code": {
                                                                "type": "boolean"
                                                              },
                                                              "name": {
                                                                "type": "string"
                                                              },
                                                              "value": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    },
                                                    "recurse": {
                                                      "type": "boolean",
                                                      "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "helm": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceHelm holds helm specific options",
                                                  "properties": {
                                                    "apiVersions": {
                                                      "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "fileParameters": {
                                                      "type": "array",
                                                      "title": "FileParameters are file parameters to the helm template",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the Helm parameter"
                                                          },
                                                          "path": {
                                                            "type": "string",
                                                            "title": "Path is the path to the file containing the values for the Helm parameter"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "ignoreMissingValueFiles": {
                                                      "type": "boolean",
                                                      "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                                    },
                                                    "kubeVersion": {
                                                      "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                      "type": "string"
                                                    },
                                                    "namespace": {
                                                      "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                                      "type": "string"
                                                    },
                                                    "parameters": {
                                                      "type": "array",
                                                      "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                                        "properties": {
                                                          "forceString": {
                                                            "type": "boolean",
                                                            "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                          },
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the Helm parameter"
                                                          },
                                                          "value": {
                                                            "type": "string",
                                                            "title": "Value is the value for the Helm parameter"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "passCredentials": {
                                                      "type": "boolean",
                                                      "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                                    },
                                                    "releaseName": {
                                                      "type": "string",
                                                      "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                                    },
                                                    "skipCrds": {
                                                      "type": "boolean",
                                                      "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                                    },
                                                    "skipSchemaValidation": {
                                                      "type": "boolean",
                                                      "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                                    },
                                                    "skipTests": {
                                                      "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                                      "type": "boolean"
                                                    },
                                                    "valueFiles": {
                                                      "type": "array",
                                                      "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "values": {
                                                      "type": "string",
                                                      "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                                    },
                                                    "valuesObject": {
                                                      "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                                      "type": "object",
                                                      "properties": {
                                                        "raw": {
                                                          "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                          "type": "string",
                                                          "format": "byte"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    },
                                                    "version": {
                                                      "type": "string",
                                                      "title": "Version is the Helm version to use for templating (\"3\")"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "kustomize": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                                  "properties": {
                                                    "apiVersions": {
                                                      "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "commonAnnotations": {
                                                      "type": "object",
                                                      "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                                      "additionalProperties": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "commonAnnotationsEnvsubst": {
                                                      "type": "boolean",
                                                      "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                                    },
                                                    "commonLabels": {
                                                      "type": "object",
                                                      "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                                      "additionalProperties": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "components": {
                                                      "type": "array",
                                                      "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "forceCommonAnnotations": {
                                                      "type": "boolean",
                                                      "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                                    },
                                                    "forceCommonLabels": {
                                                      "type": "boolean",
                                                      "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                                    },
                                                    "ignoreMissingComponents": {
                                                      "type": "boolean",
                                                      "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                                    },
                                                    "images": {
                                                      "type": "array",
                                                      "title": "Images is a list of Kustomize image override specifications",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "kubeVersion": {
                                                      "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                      "type": "string"
                                                    },
                                                    "labelIncludeTemplates": {
                                                      "type": "boolean",
                                                      "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                                    },
                                                    "labelWithoutSelector": {
                                                      "type": "boolean",
                                                      "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                                    },
                                                    "namePrefix": {
                                                      "type": "string",
                                                      "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                                    },
                                                    "nameSuffix": {
                                                      "type": "string",
                                                      "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                                    },
                                                    "namespace": {
                                                      "type": "string",
                                                      "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                                    },
                                                    "patches": {
                                                      "type": "array",
                                                      "title": "Patches is a list of Kustomize patches",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "options": {
                                                            "type": "object",
                                                            "additionalProperties": {
                                                              "type": "boolean"
                                                            }
                                                          },
                                                          "patch": {
                                                            "type": "string"
                                                          },
                                                          "path": {
                                                            "type": "string"
                                                          },
                                                          "target": {
                                                            "type": "object",
                                                            "properties": {
                                                              "annotationSelector": {
                                                                "type": "string"
                                                              },
                                                              "labelSelector": {
                                                                "type": "string"
                                                              },
                                                              "resId": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "gvk": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "group": {
                                                                        "type": "string"
                                                                      },
                                                                      "kind": {
                                                                        "type": "string"
                                                                      },
                                                                      "version": {
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "additionalProperties": false
                                                                  },
                                                                  "name": {
                                                                    "type": "string"
                                                                  },
                                                                  "namespace": {
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "additionalProperties": false
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "replicas": {
                                                      "type": "array",
                                                      "title": "Replicas is a list of Kustomize Replicas override specifications",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "count": {
                                                            "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                            "type": "object",
                                                            "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                            "properties": {
                                                              "intVal": {
                                                                "type": "integer",
                                                                "format": "int32"
                                                              },
                                                              "strVal": {
                                                                "type": "string"
                                                              },
                                                              "type": {
                                                                "type": "integer",
                                                                "format": "int64"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          },
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name of Deployment or StatefulSet"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "version": {
                                                      "type": "string",
                                                      "title": "Version controls which version of Kustomize to use for rendering manifests"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "name": {
                                                  "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                                  "type": "string"
                                                },
                                                "path": {
                                                  "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                                  "type": "string"
                                                },
                                                "plugin": {
                                                  "type": "object",
                                                  "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                                  "properties": {
                                                    "env": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "EnvEntry represents an entry in the application's environment",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the variable, usually expressed in uppercase"
                                                          },
                                                          "value": {
                                                            "type": "string",
                                                            "title": "Value is the value of the variable"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "parameters": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "array": {
                                                            "description": "Array is the value of an array type parameter.",
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "map": {
                                                            "description": "Map is the value of a map type parameter.",
                                                            "type": "object",
                                                            "additionalProperties": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "name": {
                                                            "description": "Name is the name identifying a parameter.",
                                                            "type": "string"
                                                          },
                                                          "string": {
                                                            "description": "String_ is the value of a string type parameter.",
                                                            "type": "string"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "ref": {
                                                  "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                                  "type": "string"
                                                },
                                                "repoURL": {
                                                  "type": "string",
                                                  "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                                },
                                                "targetRevision": {
                                                  "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "syncPolicy": {
                                            "type": "object",
                                            "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                                            "properties": {
                                              "automated": {
                                                "type": "object",
                                                "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                                                "properties": {
                                                  "allowEmpty": {
                                                    "type": "boolean",
                                                    "title": "AllowEmpty allows apps have zero live resources (default: false)"
                                                  },
                                                  "enable": {
                                                    "type": "boolean",
                                                    "title": "Enable allows apps to explicitly control automated sync"
                                                  },
                                                  "prune": {
                                                    "type": "boolean",
                                                    "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                                                  },
                                                  "selfHeal": {
                                                    "type": "boolean",
                                                    "title": "SelfHeal specifies whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "managedNamespaceMetadata": {
                                                "type": "object",
                                                "properties": {
                                                  "annotations": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "labels": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "retry": {
                                                "type": "object",
                                                "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                                                "properties": {
                                                  "backoff": {
                                                    "type": "object",
                                                    "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                                                    "properties": {
                                                      "duration": {
                                                        "type": "string",
                                                        "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                                                      },
                                                      "factor": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "title": "Factor is a factor to multiply the base duration after each failed retry"
                                                      },
                                                      "maxDuration": {
                                                        "type": "string",
                                                        "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "limit": {
                                                    "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                                    "type": "integer",
                                                    "format": "int64"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "syncOptions": {
                                                "type": "array",
                                                "title": "Options allow you to specify whole app sync-options",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "values": {
                                    "type": "object",
                                    "title": "Values contains key/value pairs which are passed directly as parameters to the template",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "selector": {
                                "type": "object",
                                "title": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.\n+structType=atomic",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "title": "matchExpressions is a list of label selector requirements. The requirements are ANDed.\n+optional\n+listType=atomic",
                                    "items": {
                                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "description": "key is the label key that the selector applies to.",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "title": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.\n+optional\n+listType=atomic",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "title": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n+optional",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "template": {
                          "type": "object",
                          "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
                          "properties": {
                            "metadata": {
                              "type": "object",
                              "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
                              "properties": {
                                "annotations": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "finalizers": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "labels": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "name": {
                                  "type": "string"
                                },
                                "namespace": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "spec": {
                              "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
                              "type": "object",
                              "properties": {
                                "destination": {
                                  "type": "object",
                                  "title": "ApplicationDestination holds information about the application's destination",
                                  "properties": {
                                    "name": {
                                      "description": "Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.",
                                      "type": "string"
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                                    },
                                    "server": {
                                      "description": "Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "ignoreDifferences": {
                                  "type": "array",
                                  "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                                  "items": {
                                    "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                                    "type": "object",
                                    "properties": {
                                      "group": {
                                        "type": "string"
                                      },
                                      "jqPathExpressions": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "jsonPointers": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "kind": {
                                        "type": "string"
                                      },
                                      "managedFieldsManagers": {
                                        "type": "array",
                                        "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "namespace": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "info": {
                                  "type": "array",
                                  "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "value": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "project": {
                                  "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                                  "type": "string"
                                },
                                "revisionHistoryLimit": {
                                  "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "source": {
                                  "type": "object",
                                  "title": "ApplicationSource contains all required information about the source of an application",
                                  "properties": {
                                    "chart": {
                                      "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                      "type": "string"
                                    },
                                    "directory": {
                                      "type": "object",
                                      "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                      "properties": {
                                        "exclude": {
                                          "type": "string",
                                          "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                        },
                                        "include": {
                                          "type": "string",
                                          "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                        },
                                        "jsonnet": {
                                          "type": "object",
                                          "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                          "properties": {
                                            "extVars": {
                                              "type": "array",
                                              "title": "ExtVars is a list of Jsonnet External Variables",
                                              "items": {
                                                "type": "object",
                                                "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                "properties": {
                                                  "code": {
                                                    "type": "boolean"
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "value": {
                                                    "type": "string"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "libs": {
                                              "type": "array",
                                              "title": "Additional library search dirs",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "tlas": {
                                              "type": "array",
                                              "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                              "items": {
                                                "type": "object",
                                                "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                "properties": {
                                                  "code": {
                                                    "type": "boolean"
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "value": {
                                                    "type": "string"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "recurse": {
                                          "type": "boolean",
                                          "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "helm": {
                                      "type": "object",
                                      "title": "ApplicationSourceHelm holds helm specific options",
                                      "properties": {
                                        "apiVersions": {
                                          "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "fileParameters": {
                                          "type": "array",
                                          "title": "FileParameters are file parameters to the helm template",
                                          "items": {
                                            "type": "object",
                                            "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "title": "Name is the name of the Helm parameter"
                                              },
                                              "path": {
                                                "type": "string",
                                                "title": "Path is the path to the file containing the values for the Helm parameter"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "ignoreMissingValueFiles": {
                                          "type": "boolean",
                                          "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                        },
                                        "kubeVersion": {
                                          "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                          "type": "string"
                                        },
                                        "namespace": {
                                          "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                          "type": "string"
                                        },
                                        "parameters": {
                                          "type": "array",
                                          "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                          "items": {
                                            "type": "object",
                                            "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                            "properties": {
                                              "forceString": {
                                                "type": "boolean",
                                                "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                              },
                                              "name": {
                                                "type": "string",
                                                "title": "Name is the name of the Helm parameter"
                                              },
                                              "value": {
                                                "type": "string",
                                                "title": "Value is the value for the Helm parameter"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "passCredentials": {
                                          "type": "boolean",
                                          "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                        },
                                        "releaseName": {
                                          "type": "string",
                                          "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                        },
                                        "skipCrds": {
                                          "type": "boolean",
                                          "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                        },
                                        "skipSchemaValidation": {
                                          "type": "boolean",
                                          "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                        },
                                        "skipTests": {
                                          "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                          "type": "boolean"
                                        },
                                        "valueFiles": {
                                          "type": "array",
                                          "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "values": {
                                          "type": "string",
                                          "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                        },
                                        "valuesObject": {
                                          "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                          "type": "object",
                                          "properties": {
                                            "raw": {
                                              "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                              "type": "string",
                                              "format": "byte"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "version": {
                                          "type": "string",
                                          "title": "Version is the Helm version to use for templating (\"3\")"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "kustomize": {
                                      "type": "object",
                                      "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                      "properties": {
                                        "apiVersions": {
                                          "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "commonAnnotations": {
                                          "type": "object",
                                          "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "commonAnnotationsEnvsubst": {
                                          "type": "boolean",
                                          "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                        },
                                        "commonLabels": {
                                          "type": "object",
                                          "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "components": {
                                          "type": "array",
                                          "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "forceCommonAnnotations": {
                                          "type": "boolean",
                                          "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                        },
                                        "forceCommonLabels": {
                                          "type": "boolean",
                                          "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                        },
                                        "ignoreMissingComponents": {
                                          "type": "boolean",
                                          "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                        },
                                        "images": {
                                          "type": "array",
                                          "title": "Images is a list of Kustomize image override specifications",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "kubeVersion": {
                                          "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                          "type": "string"
                                        },
                                        "labelIncludeTemplates": {
                                          "type": "boolean",
                                          "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                        },
                                        "labelWithoutSelector": {
                                          "type": "boolean",
                                          "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                        },
                                        "namePrefix": {
                                          "type": "string",
                                          "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                        },
                                        "nameSuffix": {
                                          "type": "string",
                                          "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                        },
                                        "namespace": {
                                          "type": "string",
                                          "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                        },
                                        "patches": {
                                          "type": "array",
                                          "title": "Patches is a list of Kustomize patches",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "options": {
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "boolean"
                                                }
                                              },
                                              "patch": {
                                                "type": "string"
                                              },
                                              "path": {
                                                "type": "string"
                                              },
                                              "target": {
                                                "type": "object",
                                                "properties": {
                                                  "annotationSelector": {
                                                    "type": "string"
                                                  },
                                                  "labelSelector": {
                                                    "type": "string"
                                                  },
                                                  "resId": {
                                                    "type": "object",
                                                    "properties": {
                                                      "gvk": {
                                                        "type": "object",
                                                        "properties": {
                                                          "group": {
                                                            "type": "string"
                                                          },
                                                          "kind": {
                                                            "type": "string"
                                                          },
                                                          "version": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      },
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "namespace": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "replicas": {
                                          "type": "array",
                                          "title": "Replicas is a list of Kustomize Replicas override specifications",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "count": {
                                                "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                "type": "object",
                                                "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                "properties": {
                                                  "intVal": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                  },
                                                  "strVal": {
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "name": {
                                                "type": "string",
                                                "title": "Name of Deployment or StatefulSet"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "version": {
                                          "type": "string",
                                          "title": "Version controls which version of Kustomize to use for rendering manifests"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "name": {
                                      "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                      "type": "string"
                                    },
                                    "plugin": {
                                      "type": "object",
                                      "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                      "properties": {
                                        "env": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "title": "EnvEntry represents an entry in the application's environment",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "title": "Name is the name of the variable, usually expressed in uppercase"
                                              },
                                              "value": {
                                                "type": "string",
                                                "title": "Value is the value of the variable"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "parameters": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "array": {
                                                "description": "Array is the value of an array type parameter.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "map": {
                                                "description": "Map is the value of a map type parameter.",
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              },
                                              "name": {
                                                "description": "Name is the name identifying a parameter.",
                                                "type": "string"
                                              },
                                              "string": {
                                                "description": "String_ is the value of a string type parameter.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "ref": {
                                      "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                      "type": "string"
                                    },
                                    "repoURL": {
                                      "type": "string",
                                      "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                    },
                                    "targetRevision": {
                                      "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "sourceHydrator": {
                                  "description": "SourceHydrator specifies a dry \"don't repeat yourself\" source for manifests, a sync source from which to sync\nhydrated manifests, and an optional hydrateTo location to act as a \"staging\" aread for hydrated manifests.",
                                  "type": "object",
                                  "properties": {
                                    "drySource": {
                                      "description": "DrySource specifies a location for dry \"don't repeat yourself\" manifest source information.",
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string",
                                          "title": "Path is a directory path within the Git repository where the manifests are located"
                                        },
                                        "repoURL": {
                                          "type": "string",
                                          "title": "RepoURL is the URL to the git repository that contains the application manifests"
                                        },
                                        "targetRevision": {
                                          "type": "string",
                                          "title": "TargetRevision defines the revision of the source to hydrate"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "hydrateTo": {
                                      "description": "HydrateTo specifies a location to which hydrated manifests should be pushed as a \"staging area\" before being moved to\nthe SyncSource. The RepoURL and Path are assumed based on the associated SyncSource config in the SourceHydrator.",
                                      "type": "object",
                                      "properties": {
                                        "targetBranch": {
                                          "type": "string",
                                          "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "syncSource": {
                                      "description": "SyncSource specifies a location from which hydrated manifests may be synced. RepoURL is assumed based on the\nassociated DrySource config in the SourceHydrator.",
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "description": "Path is a directory path within the git repository where hydrated manifests should be committed to and synced\nfrom. If hydrateTo is set, this is just the path from which hydrated manifests will be synced.",
                                          "type": "string"
                                        },
                                        "targetBranch": {
                                          "type": "string",
                                          "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "sources": {
                                  "type": "array",
                                  "title": "Sources is a reference to the location of the application's manifests or chart",
                                  "items": {
                                    "type": "object",
                                    "title": "ApplicationSource contains all required information about the source of an application",
                                    "properties": {
                                      "chart": {
                                        "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                        "type": "string"
                                      },
                                      "directory": {
                                        "type": "object",
                                        "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                        "properties": {
                                          "exclude": {
                                            "type": "string",
                                            "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                          },
                                          "include": {
                                            "type": "string",
                                            "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                          },
                                          "jsonnet": {
                                            "type": "object",
                                            "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                            "properties": {
                                              "extVars": {
                                                "type": "array",
                                                "title": "ExtVars is a list of Jsonnet External Variables",
                                                "items": {
                                                  "type": "object",
                                                  "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                  "properties": {
                                                    "code": {
                                                      "type": "boolean"
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              },
                                              "libs": {
                                                "type": "array",
                                                "title": "Additional library search dirs",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "tlas": {
                                                "type": "array",
                                                "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                "items": {
                                                  "type": "object",
                                                  "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                  "properties": {
                                                    "code": {
                                                      "type": "boolean"
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "recurse": {
                                            "type": "boolean",
                                            "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "helm": {
                                        "type": "object",
                                        "title": "ApplicationSourceHelm holds helm specific options",
                                        "properties": {
                                          "apiVersions": {
                                            "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "fileParameters": {
                                            "type": "array",
                                            "title": "FileParameters are file parameters to the helm template",
                                            "items": {
                                              "type": "object",
                                              "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name is the name of the Helm parameter"
                                                },
                                                "path": {
                                                  "type": "string",
                                                  "title": "Path is the path to the file containing the values for the Helm parameter"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "ignoreMissingValueFiles": {
                                            "type": "boolean",
                                            "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                          },
                                          "kubeVersion": {
                                            "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                            "type": "string"
                                          },
                                          "namespace": {
                                            "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                            "type": "string"
                                          },
                                          "parameters": {
                                            "type": "array",
                                            "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                            "items": {
                                              "type": "object",
                                              "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                              "properties": {
                                                "forceString": {
                                                  "type": "boolean",
                                                  "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name is the name of the Helm parameter"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "title": "Value is the value for the Helm parameter"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "passCredentials": {
                                            "type": "boolean",
                                            "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                          },
                                          "releaseName": {
                                            "type": "string",
                                            "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                          },
                                          "skipCrds": {
                                            "type": "boolean",
                                            "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                          },
                                          "skipSchemaValidation": {
                                            "type": "boolean",
                                            "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                          },
                                          "skipTests": {
                                            "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                            "type": "boolean"
                                          },
                                          "valueFiles": {
                                            "type": "array",
                                            "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "values": {
                                            "type": "string",
                                            "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                          },
                                          "valuesObject": {
                                            "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                            "type": "object",
                                            "properties": {
                                              "raw": {
                                                "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                "type": "string",
                                                "format": "byte"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "version": {
                                            "type": "string",
                                            "title": "Version is the Helm version to use for templating (\"3\")"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "kustomize": {
                                        "type": "object",
                                        "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                        "properties": {
                                          "apiVersions": {
                                            "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "commonAnnotations": {
                                            "type": "object",
                                            "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "commonAnnotationsEnvsubst": {
                                            "type": "boolean",
                                            "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                          },
                                          "commonLabels": {
                                            "type": "object",
                                            "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "components": {
                                            "type": "array",
                                            "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "forceCommonAnnotations": {
                                            "type": "boolean",
                                            "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                          },
                                          "forceCommonLabels": {
                                            "type": "boolean",
                                            "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                          },
                                          "ignoreMissingComponents": {
                                            "type": "boolean",
                                            "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                          },
                                          "images": {
                                            "type": "array",
                                            "title": "Images is a list of Kustomize image override specifications",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "kubeVersion": {
                                            "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                            "type": "string"
                                          },
                                          "labelIncludeTemplates": {
                                            "type": "boolean",
                                            "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                          },
                                          "labelWithoutSelector": {
                                            "type": "boolean",
                                            "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                          },
                                          "namePrefix": {
                                            "type": "string",
                                            "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                          },
                                          "nameSuffix": {
                                            "type": "string",
                                            "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                          },
                                          "namespace": {
                                            "type": "string",
                                            "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                          },
                                          "patches": {
                                            "type": "array",
                                            "title": "Patches is a list of Kustomize patches",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "options": {
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "type": "boolean"
                                                  }
                                                },
                                                "patch": {
                                                  "type": "string"
                                                },
                                                "path": {
                                                  "type": "string"
                                                },
                                                "target": {
                                                  "type": "object",
                                                  "properties": {
                                                    "annotationSelector": {
                                                      "type": "string"
                                                    },
                                                    "labelSelector": {
                                                      "type": "string"
                                                    },
                                                    "resId": {
                                                      "type": "object",
                                                      "properties": {
                                                        "gvk": {
                                                          "type": "object",
                                                          "properties": {
                                                            "group": {
                                                              "type": "string"
                                                            },
                                                            "kind": {
                                                              "type": "string"
                                                            },
                                                            "version": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        },
                                                        "name": {
                                                          "type": "string"
                                                        },
                                                        "namespace": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "replicas": {
                                            "type": "array",
                                            "title": "Replicas is a list of Kustomize Replicas override specifications",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "count": {
                                                  "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                  "type": "object",
                                                  "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                  "properties": {
                                                    "intVal": {
                                                      "type": "integer",
                                                      "format": "int32"
                                                    },
                                                    "strVal": {
                                                      "type": "string"
                                                    },
                                                    "type": {
                                                      "type": "integer",
                                                      "format": "int64"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name of Deployment or StatefulSet"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "version": {
                                            "type": "string",
                                            "title": "Version controls which version of Kustomize to use for rendering manifests"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "name": {
                                        "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                        "type": "string"
                                      },
                                      "path": {
                                        "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                        "type": "string"
                                      },
                                      "plugin": {
                                        "type": "object",
                                        "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                        "properties": {
                                          "env": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "title": "EnvEntry represents an entry in the application's environment",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name is the name of the variable, usually expressed in uppercase"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "title": "Value is the value of the variable"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "parameters": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "array": {
                                                  "description": "Array is the value of an array type parameter.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "map": {
                                                  "description": "Map is the value of a map type parameter.",
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "type": "string"
                                                  }
                                                },
                                                "name": {
                                                  "description": "Name is the name identifying a parameter.",
                                                  "type": "string"
                                                },
                                                "string": {
                                                  "description": "String_ is the value of a string type parameter.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "ref": {
                                        "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                        "type": "string"
                                      },
                                      "repoURL": {
                                        "type": "string",
                                        "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                      },
                                      "targetRevision": {
                                        "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "syncPolicy": {
                                  "type": "object",
                                  "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                                  "properties": {
                                    "automated": {
                                      "type": "object",
                                      "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                                      "properties": {
                                        "allowEmpty": {
                                          "type": "boolean",
                                          "title": "AllowEmpty allows apps have zero live resources (default: false)"
                                        },
                                        "enable": {
                                          "type": "boolean",
                                          "title": "Enable allows apps to explicitly control automated sync"
                                        },
                                        "prune": {
                                          "type": "boolean",
                                          "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                                        },
                                        "selfHeal": {
                                          "type": "boolean",
                                          "title": "SelfHeal specifies whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "managedNamespaceMetadata": {
                                      "type": "object",
                                      "properties": {
                                        "annotations": {
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "labels": {
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "retry": {
                                      "type": "object",
                                      "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                                      "properties": {
                                        "backoff": {
                                          "type": "object",
                                          "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                                          "properties": {
                                            "duration": {
                                              "type": "string",
                                              "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                                            },
                                            "factor": {
                                              "type": "integer",
                                              "format": "int64",
                                              "title": "Factor is a factor to multiply the base duration after each failed retry"
                                            },
                                            "maxDuration": {
                                              "type": "string",
                                              "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "limit": {
                                          "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                          "type": "integer",
                                          "format": "int64"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "syncOptions": {
                                      "type": "array",
                                      "title": "Options allow you to specify whole app sync-options",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "merge": {
                      "description": "MergeGenerator merges the output of two or more generators. Where the values for all specified merge keys are equal\nbetween two sets of generated parameters, the parameter sets will be merged with the parameters from the latter\ngenerator taking precedence. Parameter sets with merge keys not present in the base generator's params will be\nignored.\nFor example, if the first generator produced [{a: '1', b: '2'}, {c: '1', d: '1'}] and the second generator produced\n[{'a': 'override'}], the united parameters for merge keys = ['a'] would be\n[{a: 'override', b: '1'}, {c: '1', d: '1'}].\n\nMergeGenerator supports template overriding. If a MergeGenerator is one of multiple top-level generators, its\ntemplate will be merged with the top-level generator before the parameters are applied.",
                      "type": "object",
                      "properties": {
                        "generators": {
                          "type": "array",
                          "items": {
                            "description": "ApplicationSetNestedGenerator represents a generator nested within a combination-type generator (MatrixGenerator or\nMergeGenerator).",
                            "type": "object",
                            "properties": {
                              "clusterDecisionResource": {
                                "description": "DuckType defines a generator to match against clusters registered with ArgoCD.",
                                "type": "object",
                                "properties": {
                                  "configMapRef": {
                                    "type": "string",
                                    "title": "ConfigMapRef is a ConfigMap with the duck type definitions needed to retrieve the data\n             this includes apiVersion(group/version), kind, matchKey and validation settings\nName is the resource name of the kind, group and version, defined in the ConfigMapRef\nRequeueAfterSeconds is how long before the duckType will be rechecked for a change"
                                  },
                                  "labelSelector": {
                                    "type": "object",
                                    "title": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.\n+structType=atomic",
                                    "properties": {
                                      "matchExpressions": {
                                        "type": "array",
                                        "title": "matchExpressions is a list of label selector requirements. The requirements are ANDed.\n+optional\n+listType=atomic",
                                        "items": {
                                          "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                          "type": "object",
                                          "properties": {
                                            "key": {
                                              "description": "key is the label key that the selector applies to.",
                                              "type": "string"
                                            },
                                            "operator": {
                                              "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                              "type": "string"
                                            },
                                            "values": {
                                              "type": "array",
                                              "title": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.\n+optional\n+listType=atomic",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "matchLabels": {
                                        "type": "object",
                                        "title": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n+optional",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "requeueAfterSeconds": {
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "template": {
                                    "type": "object",
                                    "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
                                    "properties": {
                                      "metadata": {
                                        "type": "object",
                                        "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
                                        "properties": {
                                          "annotations": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "finalizers": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "labels": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "namespace": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "spec": {
                                        "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
                                        "type": "object",
                                        "properties": {
                                          "destination": {
                                            "type": "object",
                                            "title": "ApplicationDestination holds information about the application's destination",
                                            "properties": {
                                              "name": {
                                                "description": "Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.",
                                                "type": "string"
                                              },
                                              "namespace": {
                                                "type": "string",
                                                "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                                              },
                                              "server": {
                                                "description": "Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "ignoreDifferences": {
                                            "type": "array",
                                            "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                                            "items": {
                                              "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                                              "type": "object",
                                              "properties": {
                                                "group": {
                                                  "type": "string"
                                                },
                                                "jqPathExpressions": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "jsonPointers": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "kind": {
                                                  "type": "string"
                                                },
                                                "managedFieldsManagers": {
                                                  "type": "array",
                                                  "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "name": {
                                                  "type": "string"
                                                },
                                                "namespace": {
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "info": {
                                            "type": "array",
                                            "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "project": {
                                            "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                                            "type": "string"
                                          },
                                          "revisionHistoryLimit": {
                                            "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                                            "type": "integer",
                                            "format": "int64"
                                          },
                                          "source": {
                                            "type": "object",
                                            "title": "ApplicationSource contains all required information about the source of an application",
                                            "properties": {
                                              "chart": {
                                                "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                                "type": "string"
                                              },
                                              "directory": {
                                                "type": "object",
                                                "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                                "properties": {
                                                  "exclude": {
                                                    "type": "string",
                                                    "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                                  },
                                                  "include": {
                                                    "type": "string",
                                                    "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                                  },
                                                  "jsonnet": {
                                                    "type": "object",
                                                    "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                                    "properties": {
                                                      "extVars": {
                                                        "type": "array",
                                                        "title": "ExtVars is a list of Jsonnet External Variables",
                                                        "items": {
                                                          "type": "object",
                                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                          "properties": {
                                                            "code": {
                                                              "type": "boolean"
                                                            },
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      },
                                                      "libs": {
                                                        "type": "array",
                                                        "title": "Additional library search dirs",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "tlas": {
                                                        "type": "array",
                                                        "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                        "items": {
                                                          "type": "object",
                                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                          "properties": {
                                                            "code": {
                                                              "type": "boolean"
                                                            },
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "recurse": {
                                                    "type": "boolean",
                                                    "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "helm": {
                                                "type": "object",
                                                "title": "ApplicationSourceHelm holds helm specific options",
                                                "properties": {
                                                  "apiVersions": {
                                                    "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "fileParameters": {
                                                    "type": "array",
                                                    "title": "FileParameters are file parameters to the helm template",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the Helm parameter"
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "title": "Path is the path to the file containing the values for the Helm parameter"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "ignoreMissingValueFiles": {
                                                    "type": "boolean",
                                                    "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                                  },
                                                  "kubeVersion": {
                                                    "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                    "type": "string"
                                                  },
                                                  "namespace": {
                                                    "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                                    "type": "string"
                                                  },
                                                  "parameters": {
                                                    "type": "array",
                                                    "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                                      "properties": {
                                                        "forceString": {
                                                          "type": "boolean",
                                                          "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the Helm parameter"
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "title": "Value is the value for the Helm parameter"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "passCredentials": {
                                                    "type": "boolean",
                                                    "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                                  },
                                                  "releaseName": {
                                                    "type": "string",
                                                    "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                                  },
                                                  "skipCrds": {
                                                    "type": "boolean",
                                                    "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                                  },
                                                  "skipSchemaValidation": {
                                                    "type": "boolean",
                                                    "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                                  },
                                                  "skipTests": {
                                                    "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                                    "type": "boolean"
                                                  },
                                                  "valueFiles": {
                                                    "type": "array",
                                                    "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "values": {
                                                    "type": "string",
                                                    "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                                  },
                                                  "valuesObject": {
                                                    "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                                    "type": "object",
                                                    "properties": {
                                                      "raw": {
                                                        "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                        "type": "string",
                                                        "format": "byte"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "version": {
                                                    "type": "string",
                                                    "title": "Version is the Helm version to use for templating (\"3\")"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "kustomize": {
                                                "type": "object",
                                                "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                                "properties": {
                                                  "apiVersions": {
                                                    "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "commonAnnotations": {
                                                    "type": "object",
                                                    "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "commonAnnotationsEnvsubst": {
                                                    "type": "boolean",
                                                    "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                                  },
                                                  "commonLabels": {
                                                    "type": "object",
                                                    "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "components": {
                                                    "type": "array",
                                                    "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "forceCommonAnnotations": {
                                                    "type": "boolean",
                                                    "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                                  },
                                                  "forceCommonLabels": {
                                                    "type": "boolean",
                                                    "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                                  },
                                                  "ignoreMissingComponents": {
                                                    "type": "boolean",
                                                    "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                                  },
                                                  "images": {
                                                    "type": "array",
                                                    "title": "Images is a list of Kustomize image override specifications",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "kubeVersion": {
                                                    "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                    "type": "string"
                                                  },
                                                  "labelIncludeTemplates": {
                                                    "type": "boolean",
                                                    "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                                  },
                                                  "labelWithoutSelector": {
                                                    "type": "boolean",
                                                    "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                                  },
                                                  "namePrefix": {
                                                    "type": "string",
                                                    "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                                  },
                                                  "nameSuffix": {
                                                    "type": "string",
                                                    "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                                  },
                                                  "namespace": {
                                                    "type": "string",
                                                    "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                                  },
                                                  "patches": {
                                                    "type": "array",
                                                    "title": "Patches is a list of Kustomize patches",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "options": {
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "type": "boolean"
                                                          }
                                                        },
                                                        "patch": {
                                                          "type": "string"
                                                        },
                                                        "path": {
                                                          "type": "string"
                                                        },
                                                        "target": {
                                                          "type": "object",
                                                          "properties": {
                                                            "annotationSelector": {
                                                              "type": "string"
                                                            },
                                                            "labelSelector": {
                                                              "type": "string"
                                                            },
                                                            "resId": {
                                                              "type": "object",
                                                              "properties": {
                                                                "gvk": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "group": {
                                                                      "type": "string"
                                                                    },
                                                                    "kind": {
                                                                      "type": "string"
                                                                    },
                                                                    "version": {
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "additionalProperties": false
                                                                },
                                                                "name": {
                                                                  "type": "string"
                                                                },
                                                                "namespace": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "additionalProperties": false
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "replicas": {
                                                    "type": "array",
                                                    "title": "Replicas is a list of Kustomize Replicas override specifications",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "count": {
                                                          "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                          "type": "object",
                                                          "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                          "properties": {
                                                            "intVal": {
                                                              "type": "integer",
                                                              "format": "int32"
                                                            },
                                                            "strVal": {
                                                              "type": "string"
                                                            },
                                                            "type": {
                                                              "type": "integer",
                                                              "format": "int64"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name of Deployment or StatefulSet"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "version": {
                                                    "type": "string",
                                                    "title": "Version controls which version of Kustomize to use for rendering manifests"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "name": {
                                                "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                                "type": "string"
                                              },
                                              "path": {
                                                "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                                "type": "string"
                                              },
                                              "plugin": {
                                                "type": "object",
                                                "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                                "properties": {
                                                  "env": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "EnvEntry represents an entry in the application's environment",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the variable, usually expressed in uppercase"
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "title": "Value is the value of the variable"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "parameters": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "array": {
                                                          "description": "Array is the value of an array type parameter.",
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "map": {
                                                          "description": "Map is the value of a map type parameter.",
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "name": {
                                                          "description": "Name is the name identifying a parameter.",
                                                          "type": "string"
                                                        },
                                                        "string": {
                                                          "description": "String_ is the value of a string type parameter.",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "ref": {
                                                "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                                "type": "string"
                                              },
                                              "repoURL": {
                                                "type": "string",
                                                "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                              },
                                              "targetRevision": {
                                                "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "sourceHydrator": {
                                            "description": "SourceHydrator specifies a dry \"don't repeat yourself\" source for manifests, a sync source from which to sync\nhydrated manifests, and an optional hydrateTo location to act as a \"staging\" aread for hydrated manifests.",
                                            "type": "object",
                                            "properties": {
                                              "drySource": {
                                                "description": "DrySource specifies a location for dry \"don't repeat yourself\" manifest source information.",
                                                "type": "object",
                                                "properties": {
                                                  "path": {
                                                    "type": "string",
                                                    "title": "Path is a directory path within the Git repository where the manifests are located"
                                                  },
                                                  "repoURL": {
                                                    "type": "string",
                                                    "title": "RepoURL is the URL to the git repository that contains the application manifests"
                                                  },
                                                  "targetRevision": {
                                                    "type": "string",
                                                    "title": "TargetRevision defines the revision of the source to hydrate"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "hydrateTo": {
                                                "description": "HydrateTo specifies a location to which hydrated manifests should be pushed as a \"staging area\" before being moved to\nthe SyncSource. The RepoURL and Path are assumed based on the associated SyncSource config in the SourceHydrator.",
                                                "type": "object",
                                                "properties": {
                                                  "targetBranch": {
                                                    "type": "string",
                                                    "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "syncSource": {
                                                "description": "SyncSource specifies a location from which hydrated manifests may be synced. RepoURL is assumed based on the\nassociated DrySource config in the SourceHydrator.",
                                                "type": "object",
                                                "properties": {
                                                  "path": {
                                                    "description": "Path is a directory path within the git repository where hydrated manifests should be committed to and synced\nfrom. If hydrateTo is set, this is just the path from which hydrated manifests will be synced.",
                                                    "type": "string"
                                                  },
                                                  "targetBranch": {
                                                    "type": "string",
                                                    "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "sources": {
                                            "type": "array",
                                            "title": "Sources is a reference to the location of the application's manifests or chart",
                                            "items": {
                                              "type": "object",
                                              "title": "ApplicationSource contains all required information about the source of an application",
                                              "properties": {
                                                "chart": {
                                                  "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                                  "type": "string"
                                                },
                                                "directory": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                                  "properties": {
                                                    "exclude": {
                                                      "type": "string",
                                                      "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                                    },
                                                    "include": {
                                                      "type": "string",
                                                      "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                                    },
                                                    "jsonnet": {
                                                      "type": "object",
                                                      "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                                      "properties": {
                                                        "extVars": {
                                                          "type": "array",
                                                          "title": "ExtVars is a list of Jsonnet External Variables",
                                                          "items": {
                                                            "type": "object",
                                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                            "properties": {
                                                              "code": {
                                                                "type": "boolean"
                                                              },
                                                              "name": {
                                                                "type": "string"
                                                              },
                                                              "value": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        },
                                                        "libs": {
                                                          "type": "array",
                                                          "title": "Additional library search dirs",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "tlas": {
                                                          "type": "array",
                                                          "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                          "items": {
                                                            "type": "object",
                                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                            "properties": {
                                                              "code": {
                                                                "type": "boolean"
                                                              },
                                                              "name": {
                                                                "type": "string"
                                                              },
                                                              "value": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    },
                                                    "recurse": {
                                                      "type": "boolean",
                                                      "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "helm": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceHelm holds helm specific options",
                                                  "properties": {
                                                    "apiVersions": {
                                                      "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "fileParameters": {
                                                      "type": "array",
                                                      "title": "FileParameters are file parameters to the helm template",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the Helm parameter"
                                                          },
                                                          "path": {
                                                            "type": "string",
                                                            "title": "Path is the path to the file containing the values for the Helm parameter"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "ignoreMissingValueFiles": {
                                                      "type": "boolean",
                                                      "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                                    },
                                                    "kubeVersion": {
                                                      "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                      "type": "string"
                                                    },
                                                    "namespace": {
                                                      "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                                      "type": "string"
                                                    },
                                                    "parameters": {
                                                      "type": "array",
                                                      "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                                        "properties": {
                                                          "forceString": {
                                                            "type": "boolean",
                                                            "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                          },
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the Helm parameter"
                                                          },
                                                          "value": {
                                                            "type": "string",
                                                            "title": "Value is the value for the Helm parameter"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "passCredentials": {
                                                      "type": "boolean",
                                                      "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                                    },
                                                    "releaseName": {
                                                      "type": "string",
                                                      "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                                    },
                                                    "skipCrds": {
                                                      "type": "boolean",
                                                      "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                                    },
                                                    "skipSchemaValidation": {
                                                      "type": "boolean",
                                                      "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                                    },
                                                    "skipTests": {
                                                      "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                                      "type": "boolean"
                                                    },
                                                    "valueFiles": {
                                                      "type": "array",
                                                      "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "values": {
                                                      "type": "string",
                                                      "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                                    },
                                                    "valuesObject": {
                                                      "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                                      "type": "object",
                                                      "properties": {
                                                        "raw": {
                                                          "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                          "type": "string",
                                                          "format": "byte"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    },
                                                    "version": {
                                                      "type": "string",
                                                      "title": "Version is the Helm version to use for templating (\"3\")"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "kustomize": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                                  "properties": {
                                                    "apiVersions": {
                                                      "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "commonAnnotations": {
                                                      "type": "object",
                                                      "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                                      "additionalProperties": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "commonAnnotationsEnvsubst": {
                                                      "type": "boolean",
                                                      "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                                    },
                                                    "commonLabels": {
                                                      "type": "object",
                                                      "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                                      "additionalProperties": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "components": {
                                                      "type": "array",
                                                      "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "forceCommonAnnotations": {
                                                      "type": "boolean",
                                                      "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                                    },
                                                    "forceCommonLabels": {
                                                      "type": "boolean",
                                                      "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                                    },
                                                    "ignoreMissingComponents": {
                                                      "type": "boolean",
                                                      "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                                    },
                                                    "images": {
                                                      "type": "array",
                                                      "title": "Images is a list of Kustomize image override specifications",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "kubeVersion": {
                                                      "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                      "type": "string"
                                                    },
                                                    "labelIncludeTemplates": {
                                                      "type": "boolean",
                                                      "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                                    },
                                                    "labelWithoutSelector": {
                                                      "type": "boolean",
                                                      "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                                    },
                                                    "namePrefix": {
                                                      "type": "string",
                                                      "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                                    },
                                                    "nameSuffix": {
                                                      "type": "string",
                                                      "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                                    },
                                                    "namespace": {
                                                      "type": "string",
                                                      "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                                    },
                                                    "patches": {
                                                      "type": "array",
                                                      "title": "Patches is a list of Kustomize patches",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "options": {
                                                            "type": "object",
                                                            "additionalProperties": {
                                                              "type": "boolean"
                                                            }
                                                          },
                                                          "patch": {
                                                            "type": "string"
                                                          },
                                                          "path": {
                                                            "type": "string"
                                                          },
                                                          "target": {
                                                            "type": "object",
                                                            "properties": {
                                                              "annotationSelector": {
                                                                "type": "string"
                                                              },
                                                              "labelSelector": {
                                                                "type": "string"
                                                              },
                                                              "resId": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "gvk": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "group": {
                                                                        "type": "string"
                                                                      },
                                                                      "kind": {
                                                                        "type": "string"
                                                                      },
                                                                      "version": {
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "additionalProperties": false
                                                                  },
                                                                  "name": {
                                                                    "type": "string"
                                                                  },
                                                                  "namespace": {
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "additionalProperties": false
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "replicas": {
                                                      "type": "array",
                                                      "title": "Replicas is a list of Kustomize Replicas override specifications",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "count": {
                                                            "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                            "type": "object",
                                                            "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                            "properties": {
                                                              "intVal": {
                                                                "type": "integer",
                                                                "format": "int32"
                                                              },
                                                              "strVal": {
                                                                "type": "string"
                                                              },
                                                              "type": {
                                                                "type": "integer",
                                                                "format": "int64"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          },
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name of Deployment or StatefulSet"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "version": {
                                                      "type": "string",
                                                      "title": "Version controls which version of Kustomize to use for rendering manifests"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "name": {
                                                  "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                                  "type": "string"
                                                },
                                                "path": {
                                                  "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                                  "type": "string"
                                                },
                                                "plugin": {
                                                  "type": "object",
                                                  "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                                  "properties": {
                                                    "env": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "EnvEntry represents an entry in the application's environment",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the variable, usually expressed in uppercase"
                                                          },
                                                          "value": {
                                                            "type": "string",
                                                            "title": "Value is the value of the variable"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "parameters": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "array": {
                                                            "description": "Array is the value of an array type parameter.",
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "map": {
                                                            "description": "Map is the value of a map type parameter.",
                                                            "type": "object",
                                                            "additionalProperties": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "name": {
                                                            "description": "Name is the name identifying a parameter.",
                                                            "type": "string"
                                                          },
                                                          "string": {
                                                            "description": "String_ is the value of a string type parameter.",
                                                            "type": "string"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "ref": {
                                                  "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                                  "type": "string"
                                                },
                                                "repoURL": {
                                                  "type": "string",
                                                  "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                                },
                                                "targetRevision": {
                                                  "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "syncPolicy": {
                                            "type": "object",
                                            "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                                            "properties": {
                                              "automated": {
                                                "type": "object",
                                                "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                                                "properties": {
                                                  "allowEmpty": {
                                                    "type": "boolean",
                                                    "title": "AllowEmpty allows apps have zero live resources (default: false)"
                                                  },
                                                  "enable": {
                                                    "type": "boolean",
                                                    "title": "Enable allows apps to explicitly control automated sync"
                                                  },
                                                  "prune": {
                                                    "type": "boolean",
                                                    "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                                                  },
                                                  "selfHeal": {
                                                    "type": "boolean",
                                                    "title": "SelfHeal specifies whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "managedNamespaceMetadata": {
                                                "type": "object",
                                                "properties": {
                                                  "annotations": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "labels": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "retry": {
                                                "type": "object",
                                                "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                                                "properties": {
                                                  "backoff": {
                                                    "type": "object",
                                                    "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                                                    "properties": {
                                                      "duration": {
                                                        "type": "string",
                                                        "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                                                      },
                                                      "factor": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "title": "Factor is a factor to multiply the base duration after each failed retry"
                                                      },
                                                      "maxDuration": {
                                                        "type": "string",
                                                        "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "limit": {
                                                    "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                                    "type": "integer",
                                                    "format": "int64"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "syncOptions": {
                                                "type": "array",
                                                "title": "Options allow you to specify whole app sync-options",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "values": {
                                    "type": "object",
                                    "title": "Values contains key/value pairs which are passed directly as parameters to the template",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "clusters": {
                                "description": "ClusterGenerator defines a generator to match against clusters registered with ArgoCD.",
                                "type": "object",
                                "properties": {
                                  "flatList": {
                                    "type": "boolean",
                                    "title": "returns the clusters a single 'clusters' value in the template"
                                  },
                                  "selector": {
                                    "type": "object",
                                    "title": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.\n+structType=atomic",
                                    "properties": {
                                      "matchExpressions": {
                                        "type": "array",
                                        "title": "matchExpressions is a list of label selector requirements. The requirements are ANDed.\n+optional\n+listType=atomic",
                                        "items": {
                                          "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                          "type": "object",
                                          "properties": {
                                            "key": {
                                              "description": "key is the label key that the selector applies to.",
                                              "type": "string"
                                            },
                                            "operator": {
                                              "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                              "type": "string"
                                            },
                                            "values": {
                                              "type": "array",
                                              "title": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.\n+optional\n+listType=atomic",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "matchLabels": {
                                        "type": "object",
                                        "title": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n+optional",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "template": {
                                    "type": "object",
                                    "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
                                    "properties": {
                                      "metadata": {
                                        "type": "object",
                                        "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
                                        "properties": {
                                          "annotations": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "finalizers": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "labels": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "namespace": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "spec": {
                                        "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
                                        "type": "object",
                                        "properties": {
                                          "destination": {
                                            "type": "object",
                                            "title": "ApplicationDestination holds information about the application's destination",
                                            "properties": {
                                              "name": {
                                                "description": "Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.",
                                                "type": "string"
                                              },
                                              "namespace": {
                                                "type": "string",
                                                "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                                              },
                                              "server": {
                                                "description": "Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "ignoreDifferences": {
                                            "type": "array",
                                            "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                                            "items": {
                                              "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                                              "type": "object",
                                              "properties": {
                                                "group": {
                                                  "type": "string"
                                                },
                                                "jqPathExpressions": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "jsonPointers": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "kind": {
                                                  "type": "string"
                                                },
                                                "managedFieldsManagers": {
                                                  "type": "array",
                                                  "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "name": {
                                                  "type": "string"
                                                },
                                                "namespace": {
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "info": {
                                            "type": "array",
                                            "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "project": {
                                            "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                                            "type": "string"
                                          },
                                          "revisionHistoryLimit": {
                                            "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                                            "type": "integer",
                                            "format": "int64"
                                          },
                                          "source": {
                                            "type": "object",
                                            "title": "ApplicationSource contains all required information about the source of an application",
                                            "properties": {
                                              "chart": {
                                                "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                                "type": "string"
                                              },
                                              "directory": {
                                                "type": "object",
                                                "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                                "properties": {
                                                  "exclude": {
                                                    "type": "string",
                                                    "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                                  },
                                                  "include": {
                                                    "type": "string",
                                                    "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                                  },
                                                  "jsonnet": {
                                                    "type": "object",
                                                    "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                                    "properties": {
                                                      "extVars": {
                                                        "type": "array",
                                                        "title": "ExtVars is a list of Jsonnet External Variables",
                                                        "items": {
                                                          "type": "object",
                                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                          "properties": {
                                                            "code": {
                                                              "type": "boolean"
                                                            },
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      },
                                                      "libs": {
                                                        "type": "array",
                                                        "title": "Additional library search dirs",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "tlas": {
                                                        "type": "array",
                                                        "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                        "items": {
                                                          "type": "object",
                                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                          "properties": {
                                                            "code": {
                                                              "type": "boolean"
                                                            },
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "recurse": {
                                                    "type": "boolean",
                                                    "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "helm": {
                                                "type": "object",
                                                "title": "ApplicationSourceHelm holds helm specific options",
                                                "properties": {
                                                  "apiVersions": {
                                                    "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "fileParameters": {
                                                    "type": "array",
                                                    "title": "FileParameters are file parameters to the helm template",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the Helm parameter"
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "title": "Path is the path to the file containing the values for the Helm parameter"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "ignoreMissingValueFiles": {
                                                    "type": "boolean",
                                                    "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                                  },
                                                  "kubeVersion": {
                                                    "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                    "type": "string"
                                                  },
                                                  "namespace": {
                                                    "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                                    "type": "string"
                                                  },
                                                  "parameters": {
                                                    "type": "array",
                                                    "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                                      "properties": {
                                                        "forceString": {
                                                          "type": "boolean",
                                                          "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the Helm parameter"
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "title": "Value is the value for the Helm parameter"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "passCredentials": {
                                                    "type": "boolean",
                                                    "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                                  },
                                                  "releaseName": {
                                                    "type": "string",
                                                    "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                                  },
                                                  "skipCrds": {
                                                    "type": "boolean",
                                                    "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                                  },
                                                  "skipSchemaValidation": {
                                                    "type": "boolean",
                                                    "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                                  },
                                                  "skipTests": {
                                                    "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                                    "type": "boolean"
                                                  },
                                                  "valueFiles": {
                                                    "type": "array",
                                                    "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "values": {
                                                    "type": "string",
                                                    "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                                  },
                                                  "valuesObject": {
                                                    "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                                    "type": "object",
                                                    "properties": {
                                                      "raw": {
                                                        "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                        "type": "string",
                                                        "format": "byte"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "version": {
                                                    "type": "string",
                                                    "title": "Version is the Helm version to use for templating (\"3\")"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "kustomize": {
                                                "type": "object",
                                                "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                                "properties": {
                                                  "apiVersions": {
                                                    "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "commonAnnotations": {
                                                    "type": "object",
                                                    "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "commonAnnotationsEnvsubst": {
                                                    "type": "boolean",
                                                    "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                                  },
                                                  "commonLabels": {
                                                    "type": "object",
                                                    "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "components": {
                                                    "type": "array",
                                                    "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "forceCommonAnnotations": {
                                                    "type": "boolean",
                                                    "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                                  },
                                                  "forceCommonLabels": {
                                                    "type": "boolean",
                                                    "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                                  },
                                                  "ignoreMissingComponents": {
                                                    "type": "boolean",
                                                    "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                                  },
                                                  "images": {
                                                    "type": "array",
                                                    "title": "Images is a list of Kustomize image override specifications",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "kubeVersion": {
                                                    "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                    "type": "string"
                                                  },
                                                  "labelIncludeTemplates": {
                                                    "type": "boolean",
                                                    "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                                  },
                                                  "labelWithoutSelector": {
                                                    "type": "boolean",
                                                    "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                                  },
                                                  "namePrefix": {
                                                    "type": "string",
                                                    "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                                  },
                                                  "nameSuffix": {
                                                    "type": "string",
                                                    "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                                  },
                                                  "namespace": {
                                                    "type": "string",
                                                    "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                                  },
                                                  "patches": {
                                                    "type": "array",
                                                    "title": "Patches is a list of Kustomize patches",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "options": {
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "type": "boolean"
                                                          }
                                                        },
                                                        "patch": {
                                                          "type": "string"
                                                        },
                                                        "path": {
                                                          "type": "string"
                                                        },
                                                        "target": {
                                                          "type": "object",
                                                          "properties": {
                                                            "annotationSelector": {
                                                              "type": "string"
                                                            },
                                                            "labelSelector": {
                                                              "type": "string"
                                                            },
                                                            "resId": {
                                                              "type": "object",
                                                              "properties": {
                                                                "gvk": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "group": {
                                                                      "type": "string"
                                                                    },
                                                                    "kind": {
                                                                      "type": "string"
                                                                    },
                                                                    "version": {
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "additionalProperties": false
                                                                },
                                                                "name": {
                                                                  "type": "string"
                                                                },
                                                                "namespace": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "additionalProperties": false
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "replicas": {
                                                    "type": "array",
                                                    "title": "Replicas is a list of Kustomize Replicas override specifications",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "count": {
                                                          "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                          "type": "object",
                                                          "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                          "properties": {
                                                            "intVal": {
                                                              "type": "integer",
                                                              "format": "int32"
                                                            },
                                                            "strVal": {
                                                              "type": "string"
                                                            },
                                                            "type": {
                                                              "type": "integer",
                                                              "format": "int64"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name of Deployment or StatefulSet"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "version": {
                                                    "type": "string",
                                                    "title": "Version controls which version of Kustomize to use for rendering manifests"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "name": {
                                                "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                                "type": "string"
                                              },
                                              "path": {
                                                "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                                "type": "string"
                                              },
                                              "plugin": {
                                                "type": "object",
                                                "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                                "properties": {
                                                  "env": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "EnvEntry represents an entry in the application's environment",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the variable, usually expressed in uppercase"
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "title": "Value is the value of the variable"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "parameters": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "array": {
                                                          "description": "Array is the value of an array type parameter.",
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "map": {
                                                          "description": "Map is the value of a map type parameter.",
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "name": {
                                                          "description": "Name is the name identifying a parameter.",
                                                          "type": "string"
                                                        },
                                                        "string": {
                                                          "description": "String_ is the value of a string type parameter.",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "ref": {
                                                "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                                "type": "string"
                                              },
                                              "repoURL": {
                                                "type": "string",
                                                "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                              },
                                              "targetRevision": {
                                                "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "sourceHydrator": {
                                            "description": "SourceHydrator specifies a dry \"don't repeat yourself\" source for manifests, a sync source from which to sync\nhydrated manifests, and an optional hydrateTo location to act as a \"staging\" aread for hydrated manifests.",
                                            "type": "object",
                                            "properties": {
                                              "drySource": {
                                                "description": "DrySource specifies a location for dry \"don't repeat yourself\" manifest source information.",
                                                "type": "object",
                                                "properties": {
                                                  "path": {
                                                    "type": "string",
                                                    "title": "Path is a directory path within the Git repository where the manifests are located"
                                                  },
                                                  "repoURL": {
                                                    "type": "string",
                                                    "title": "RepoURL is the URL to the git repository that contains the application manifests"
                                                  },
                                                  "targetRevision": {
                                                    "type": "string",
                                                    "title": "TargetRevision defines the revision of the source to hydrate"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "hydrateTo": {
                                                "description": "HydrateTo specifies a location to which hydrated manifests should be pushed as a \"staging area\" before being moved to\nthe SyncSource. The RepoURL and Path are assumed based on the associated SyncSource config in the SourceHydrator.",
                                                "type": "object",
                                                "properties": {
                                                  "targetBranch": {
                                                    "type": "string",
                                                    "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "syncSource": {
                                                "description": "SyncSource specifies a location from which hydrated manifests may be synced. RepoURL is assumed based on the\nassociated DrySource config in the SourceHydrator.",
                                                "type": "object",
                                                "properties": {
                                                  "path": {
                                                    "description": "Path is a directory path within the git repository where hydrated manifests should be committed to and synced\nfrom. If hydrateTo is set, this is just the path from which hydrated manifests will be synced.",
                                                    "type": "string"
                                                  },
                                                  "targetBranch": {
                                                    "type": "string",
                                                    "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "sources": {
                                            "type": "array",
                                            "title": "Sources is a reference to the location of the application's manifests or chart",
                                            "items": {
                                              "type": "object",
                                              "title": "ApplicationSource contains all required information about the source of an application",
                                              "properties": {
                                                "chart": {
                                                  "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                                  "type": "string"
                                                },
                                                "directory": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                                  "properties": {
                                                    "exclude": {
                                                      "type": "string",
                                                      "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                                    },
                                                    "include": {
                                                      "type": "string",
                                                      "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                                    },
                                                    "jsonnet": {
                                                      "type": "object",
                                                      "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                                      "properties": {
                                                        "extVars": {
                                                          "type": "array",
                                                          "title": "ExtVars is a list of Jsonnet External Variables",
                                                          "items": {
                                                            "type": "object",
                                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                            "properties": {
                                                              "code": {
                                                                "type": "boolean"
                                                              },
                                                              "name": {
                                                                "type": "string"
                                                              },
                                                              "value": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        },
                                                        "libs": {
                                                          "type": "array",
                                                          "title": "Additional library search dirs",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "tlas": {
                                                          "type": "array",
                                                          "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                          "items": {
                                                            "type": "object",
                                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                            "properties": {
                                                              "code": {
                                                                "type": "boolean"
                                                              },
                                                              "name": {
                                                                "type": "string"
                                                              },
                                                              "value": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    },
                                                    "recurse": {
                                                      "type": "boolean",
                                                      "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "helm": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceHelm holds helm specific options",
                                                  "properties": {
                                                    "apiVersions": {
                                                      "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "fileParameters": {
                                                      "type": "array",
                                                      "title": "FileParameters are file parameters to the helm template",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the Helm parameter"
                                                          },
                                                          "path": {
                                                            "type": "string",
                                                            "title": "Path is the path to the file containing the values for the Helm parameter"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "ignoreMissingValueFiles": {
                                                      "type": "boolean",
                                                      "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                                    },
                                                    "kubeVersion": {
                                                      "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                      "type": "string"
                                                    },
                                                    "namespace": {
                                                      "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                                      "type": "string"
                                                    },
                                                    "parameters": {
                                                      "type": "array",
                                                      "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                                        "properties": {
                                                          "forceString": {
                                                            "type": "boolean",
                                                            "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                          },
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the Helm parameter"
                                                          },
                                                          "value": {
                                                            "type": "string",
                                                            "title": "Value is the value for the Helm parameter"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "passCredentials": {
                                                      "type": "boolean",
                                                      "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                                    },
                                                    "releaseName": {
                                                      "type": "string",
                                                      "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                                    },
                                                    "skipCrds": {
                                                      "type": "boolean",
                                                      "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                                    },
                                                    "skipSchemaValidation": {
                                                      "type": "boolean",
                                                      "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                                    },
                                                    "skipTests": {
                                                      "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                                      "type": "boolean"
                                                    },
                                                    "valueFiles": {
                                                      "type": "array",
                                                      "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "values": {
                                                      "type": "string",
                                                      "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                                    },
                                                    "valuesObject": {
                                                      "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                                      "type": "object",
                                                      "properties": {
                                                        "raw": {
                                                          "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                          "type": "string",
                                                          "format": "byte"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    },
                                                    "version": {
                                                      "type": "string",
                                                      "title": "Version is the Helm version to use for templating (\"3\")"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "kustomize": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                                  "properties": {
                                                    "apiVersions": {
                                                      "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "commonAnnotations": {
                                                      "type": "object",
                                                      "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                                      "additionalProperties": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "commonAnnotationsEnvsubst": {
                                                      "type": "boolean",
                                                      "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                                    },
                                                    "commonLabels": {
                                                      "type": "object",
                                                      "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                                      "additionalProperties": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "components": {
                                                      "type": "array",
                                                      "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "forceCommonAnnotations": {
                                                      "type": "boolean",
                                                      "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                                    },
                                                    "forceCommonLabels": {
                                                      "type": "boolean",
                                                      "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                                    },
                                                    "ignoreMissingComponents": {
                                                      "type": "boolean",
                                                      "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                                    },
                                                    "images": {
                                                      "type": "array",
                                                      "title": "Images is a list of Kustomize image override specifications",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "kubeVersion": {
                                                      "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                      "type": "string"
                                                    },
                                                    "labelIncludeTemplates": {
                                                      "type": "boolean",
                                                      "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                                    },
                                                    "labelWithoutSelector": {
                                                      "type": "boolean",
                                                      "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                                    },
                                                    "namePrefix": {
                                                      "type": "string",
                                                      "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                                    },
                                                    "nameSuffix": {
                                                      "type": "string",
                                                      "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                                    },
                                                    "namespace": {
                                                      "type": "string",
                                                      "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                                    },
                                                    "patches": {
                                                      "type": "array",
                                                      "title": "Patches is a list of Kustomize patches",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "options": {
                                                            "type": "object",
                                                            "additionalProperties": {
                                                              "type": "boolean"
                                                            }
                                                          },
                                                          "patch": {
                                                            "type": "string"
                                                          },
                                                          "path": {
                                                            "type": "string"
                                                          },
                                                          "target": {
                                                            "type": "object",
                                                            "properties": {
                                                              "annotationSelector": {
                                                                "type": "string"
                                                              },
                                                              "labelSelector": {
                                                                "type": "string"
                                                              },
                                                              "resId": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "gvk": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "group": {
                                                                        "type": "string"
                                                                      },
                                                                      "kind": {
                                                                        "type": "string"
                                                                      },
                                                                      "version": {
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "additionalProperties": false
                                                                  },
                                                                  "name": {
                                                                    "type": "string"
                                                                  },
                                                                  "namespace": {
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "additionalProperties": false
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "replicas": {
                                                      "type": "array",
                                                      "title": "Replicas is a list of Kustomize Replicas override specifications",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "count": {
                                                            "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                            "type": "object",
                                                            "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                            "properties": {
                                                              "intVal": {
                                                                "type": "integer",
                                                                "format": "int32"
                                                              },
                                                              "strVal": {
                                                                "type": "string"
                                                              },
                                                              "type": {
                                                                "type": "integer",
                                                                "format": "int64"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          },
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name of Deployment or StatefulSet"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "version": {
                                                      "type": "string",
                                                      "title": "Version controls which version of Kustomize to use for rendering manifests"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "name": {
                                                  "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                                  "type": "string"
                                                },
                                                "path": {
                                                  "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                                  "type": "string"
                                                },
                                                "plugin": {
                                                  "type": "object",
                                                  "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                                  "properties": {
                                                    "env": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "EnvEntry represents an entry in the application's environment",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the variable, usually expressed in uppercase"
                                                          },
                                                          "value": {
                                                            "type": "string",
                                                            "title": "Value is the value of the variable"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "parameters": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "array": {
                                                            "description": "Array is the value of an array type parameter.",
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "map": {
                                                            "description": "Map is the value of a map type parameter.",
                                                            "type": "object",
                                                            "additionalProperties": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "name": {
                                                            "description": "Name is the name identifying a parameter.",
                                                            "type": "string"
                                                          },
                                                          "string": {
                                                            "description": "String_ is the value of a string type parameter.",
                                                            "type": "string"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "ref": {
                                                  "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                                  "type": "string"
                                                },
                                                "repoURL": {
                                                  "type": "string",
                                                  "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                                },
                                                "targetRevision": {
                                                  "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "syncPolicy": {
                                            "type": "object",
                                            "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                                            "properties": {
                                              "automated": {
                                                "type": "object",
                                                "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                                                "properties": {
                                                  "allowEmpty": {
                                                    "type": "boolean",
                                                    "title": "AllowEmpty allows apps have zero live resources (default: false)"
                                                  },
                                                  "enable": {
                                                    "type": "boolean",
                                                    "title": "Enable allows apps to explicitly control automated sync"
                                                  },
                                                  "prune": {
                                                    "type": "boolean",
                                                    "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                                                  },
                                                  "selfHeal": {
                                                    "type": "boolean",
                                                    "title": "SelfHeal specifies whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "managedNamespaceMetadata": {
                                                "type": "object",
                                                "properties": {
                                                  "annotations": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "labels": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "retry": {
                                                "type": "object",
                                                "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                                                "properties": {
                                                  "backoff": {
                                                    "type": "object",
                                                    "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                                                    "properties": {
                                                      "duration": {
                                                        "type": "string",
                                                        "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                                                      },
                                                      "factor": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "title": "Factor is a factor to multiply the base duration after each failed retry"
                                                      },
                                                      "maxDuration": {
                                                        "type": "string",
                                                        "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "limit": {
                                                    "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                                    "type": "integer",
                                                    "format": "int64"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "syncOptions": {
                                                "type": "array",
                                                "title": "Options allow you to specify whole app sync-options",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "values": {
                                    "type": "object",
                                    "title": "Values contains key/value pairs which are passed directly as parameters to the template",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "git": {
                                "type": "object",
                                "properties": {
                                  "directories": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "exclude": {
                                          "type": "boolean"
                                        },
                                        "path": {
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "files": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "exclude": {
                                          "type": "boolean"
                                        },
                                        "path": {
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "pathParamPrefix": {
                                    "type": "string"
                                  },
                                  "repoURL": {
                                    "type": "string"
                                  },
                                  "requeueAfterSeconds": {
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "revision": {
                                    "type": "string"
                                  },
                                  "template": {
                                    "type": "object",
                                    "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
                                    "properties": {
                                      "metadata": {
                                        "type": "object",
                                        "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
                                        "properties": {
                                          "annotations": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "finalizers": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "labels": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "namespace": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "spec": {
                                        "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
                                        "type": "object",
                                        "properties": {
                                          "destination": {
                                            "type": "object",
                                            "title": "ApplicationDestination holds information about the application's destination",
                                            "properties": {
                                              "name": {
                                                "description": "Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.",
                                                "type": "string"
                                              },
                                              "namespace": {
                                                "type": "string",
                                                "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                                              },
                                              "server": {
                                                "description": "Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "ignoreDifferences": {
                                            "type": "array",
                                            "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                                            "items": {
                                              "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                                              "type": "object",
                                              "properties": {
                                                "group": {
                                                  "type": "string"
                                                },
                                                "jqPathExpressions": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "jsonPointers": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "kind": {
                                                  "type": "string"
                                                },
                                                "managedFieldsManagers": {
                                                  "type": "array",
                                                  "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "name": {
                                                  "type": "string"
                                                },
                                                "namespace": {
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "info": {
                                            "type": "array",
                                            "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "project": {
                                            "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                                            "type": "string"
                                          },
                                          "revisionHistoryLimit": {
                                            "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                                            "type": "integer",
                                            "format": "int64"
                                          },
                                          "source": {
                                            "type": "object",
                                            "title": "ApplicationSource contains all required information about the source of an application",
                                            "properties": {
                                              "chart": {
                                                "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                                "type": "string"
                                              },
                                              "directory": {
                                                "type": "object",
                                                "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                                "properties": {
                                                  "exclude": {
                                                    "type": "string",
                                                    "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                                  },
                                                  "include": {
                                                    "type": "string",
                                                    "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                                  },
                                                  "jsonnet": {
                                                    "type": "object",
                                                    "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                                    "properties": {
                                                      "extVars": {
                                                        "type": "array",
                                                        "title": "ExtVars is a list of Jsonnet External Variables",
                                                        "items": {
                                                          "type": "object",
                                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                          "properties": {
                                                            "code": {
                                                              "type": "boolean"
                                                            },
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      },
                                                      "libs": {
                                                        "type": "array",
                                                        "title": "Additional library search dirs",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "tlas": {
                                                        "type": "array",
                                                        "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                        "items": {
                                                          "type": "object",
                                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                          "properties": {
                                                            "code": {
                                                              "type": "boolean"
                                                            },
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "recurse": {
                                                    "type": "boolean",
                                                    "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "helm": {
                                                "type": "object",
                                                "title": "ApplicationSourceHelm holds helm specific options",
                                                "properties": {
                                                  "apiVersions": {
                                                    "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "fileParameters": {
                                                    "type": "array",
                                                    "title": "FileParameters are file parameters to the helm template",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the Helm parameter"
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "title": "Path is the path to the file containing the values for the Helm parameter"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "ignoreMissingValueFiles": {
                                                    "type": "boolean",
                                                    "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                                  },
                                                  "kubeVersion": {
                                                    "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                    "type": "string"
                                                  },
                                                  "namespace": {
                                                    "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                                    "type": "string"
                                                  },
                                                  "parameters": {
                                                    "type": "array",
                                                    "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                                      "properties": {
                                                        "forceString": {
                                                          "type": "boolean",
                                                          "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the Helm parameter"
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "title": "Value is the value for the Helm parameter"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "passCredentials": {
                                                    "type": "boolean",
                                                    "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                                  },
                                                  "releaseName": {
                                                    "type": "string",
                                                    "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                                  },
                                                  "skipCrds": {
                                                    "type": "boolean",
                                                    "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                                  },
                                                  "skipSchemaValidation": {
                                                    "type": "boolean",
                                                    "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                                  },
                                                  "skipTests": {
                                                    "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                                    "type": "boolean"
                                                  },
                                                  "valueFiles": {
                                                    "type": "array",
                                                    "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "values": {
                                                    "type": "string",
                                                    "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                                  },
                                                  "valuesObject": {
                                                    "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                                    "type": "object",
                                                    "properties": {
                                                      "raw": {
                                                        "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                        "type": "string",
                                                        "format": "byte"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "version": {
                                                    "type": "string",
                                                    "title": "Version is the Helm version to use for templating (\"3\")"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "kustomize": {
                                                "type": "object",
                                                "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                                "properties": {
                                                  "apiVersions": {
                                                    "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "commonAnnotations": {
                                                    "type": "object",
                                                    "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "commonAnnotationsEnvsubst": {
                                                    "type": "boolean",
                                                    "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                                  },
                                                  "commonLabels": {
                                                    "type": "object",
                                                    "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "components": {
                                                    "type": "array",
                                                    "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "forceCommonAnnotations": {
                                                    "type": "boolean",
                                                    "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                                  },
                                                  "forceCommonLabels": {
                                                    "type": "boolean",
                                                    "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                                  },
                                                  "ignoreMissingComponents": {
                                                    "type": "boolean",
                                                    "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                                  },
                                                  "images": {
                                                    "type": "array",
                                                    "title": "Images is a list of Kustomize image override specifications",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "kubeVersion": {
                                                    "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                    "type": "string"
                                                  },
                                                  "labelIncludeTemplates": {
                                                    "type": "boolean",
                                                    "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                                  },
                                                  "labelWithoutSelector": {
                                                    "type": "boolean",
                                                    "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                                  },
                                                  "namePrefix": {
                                                    "type": "string",
                                                    "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                                  },
                                                  "nameSuffix": {
                                                    "type": "string",
                                                    "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                                  },
                                                  "namespace": {
                                                    "type": "string",
                                                    "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                                  },
                                                  "patches": {
                                                    "type": "array",
                                                    "title": "Patches is a list of Kustomize patches",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "options": {
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "type": "boolean"
                                                          }
                                                        },
                                                        "patch": {
                                                          "type": "string"
                                                        },
                                                        "path": {
                                                          "type": "string"
                                                        },
                                                        "target": {
                                                          "type": "object",
                                                          "properties": {
                                                            "annotationSelector": {
                                                              "type": "string"
                                                            },
                                                            "labelSelector": {
                                                              "type": "string"
                                                            },
                                                            "resId": {
                                                              "type": "object",
                                                              "properties": {
                                                                "gvk": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "group": {
                                                                      "type": "string"
                                                                    },
                                                                    "kind": {
                                                                      "type": "string"
                                                                    },
                                                                    "version": {
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "additionalProperties": false
                                                                },
                                                                "name": {
                                                                  "type": "string"
                                                                },
                                                                "namespace": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "additionalProperties": false
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "replicas": {
                                                    "type": "array",
                                                    "title": "Replicas is a list of Kustomize Replicas override specifications",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "count": {
                                                          "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                          "type": "object",
                                                          "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                          "properties": {
                                                            "intVal": {
                                                              "type": "integer",
                                                              "format": "int32"
                                                            },
                                                            "strVal": {
                                                              "type": "string"
                                                            },
                                                            "type": {
                                                              "type": "integer",
                                                              "format": "int64"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name of Deployment or StatefulSet"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "version": {
                                                    "type": "string",
                                                    "title": "Version controls which version of Kustomize to use for rendering manifests"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "name": {
                                                "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                                "type": "string"
                                              },
                                              "path": {
                                                "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                                "type": "string"
                                              },
                                              "plugin": {
                                                "type": "object",
                                                "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                                "properties": {
                                                  "env": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "EnvEntry represents an entry in the application's environment",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the variable, usually expressed in uppercase"
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "title": "Value is the value of the variable"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "parameters": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "array": {
                                                          "description": "Array is the value of an array type parameter.",
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "map": {
                                                          "description": "Map is the value of a map type parameter.",
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "name": {
                                                          "description": "Name is the name identifying a parameter.",
                                                          "type": "string"
                                                        },
                                                        "string": {
                                                          "description": "String_ is the value of a string type parameter.",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "ref": {
                                                "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                                "type": "string"
                                              },
                                              "repoURL": {
                                                "type": "string",
                                                "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                              },
                                              "targetRevision": {
                                                "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "sourceHydrator": {
                                            "description": "SourceHydrator specifies a dry \"don't repeat yourself\" source for manifests, a sync source from which to sync\nhydrated manifests, and an optional hydrateTo location to act as a \"staging\" aread for hydrated manifests.",
                                            "type": "object",
                                            "properties": {
                                              "drySource": {
                                                "description": "DrySource specifies a location for dry \"don't repeat yourself\" manifest source information.",
                                                "type": "object",
                                                "properties": {
                                                  "path": {
                                                    "type": "string",
                                                    "title": "Path is a directory path within the Git repository where the manifests are located"
                                                  },
                                                  "repoURL": {
                                                    "type": "string",
                                                    "title": "RepoURL is the URL to the git repository that contains the application manifests"
                                                  },
                                                  "targetRevision": {
                                                    "type": "string",
                                                    "title": "TargetRevision defines the revision of the source to hydrate"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "hydrateTo": {
                                                "description": "HydrateTo specifies a location to which hydrated manifests should be pushed as a \"staging area\" before being moved to\nthe SyncSource. The RepoURL and Path are assumed based on the associated SyncSource config in the SourceHydrator.",
                                                "type": "object",
                                                "properties": {
                                                  "targetBranch": {
                                                    "type": "string",
                                                    "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "syncSource": {
                                                "description": "SyncSource specifies a location from which hydrated manifests may be synced. RepoURL is assumed based on the\nassociated DrySource config in the SourceHydrator.",
                                                "type": "object",
                                                "properties": {
                                                  "path": {
                                                    "description": "Path is a directory path within the git repository where hydrated manifests should be committed to and synced\nfrom. If hydrateTo is set, this is just the path from which hydrated manifests will be synced.",
                                                    "type": "string"
                                                  },
                                                  "targetBranch": {
                                                    "type": "string",
                                                    "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "sources": {
                                            "type": "array",
                                            "title": "Sources is a reference to the location of the application's manifests or chart",
                                            "items": {
                                              "type": "object",
                                              "title": "ApplicationSource contains all required information about the source of an application",
                                              "properties": {
                                                "chart": {
                                                  "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                                  "type": "string"
                                                },
                                                "directory": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                                  "properties": {
                                                    "exclude": {
                                                      "type": "string",
                                                      "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                                    },
                                                    "include": {
                                                      "type": "string",
                                                      "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                                    },
                                                    "jsonnet": {
                                                      "type": "object",
                                                      "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                                      "properties": {
                                                        "extVars": {
                                                          "type": "array",
                                                          "title": "ExtVars is a list of Jsonnet External Variables",
                                                          "items": {
                                                            "type": "object",
                                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                            "properties": {
                                                              "code": {
                                                                "type": "boolean"
                                                              },
                                                              "name": {
                                                                "type": "string"
                                                              },
                                                              "value": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        },
                                                        "libs": {
                                                          "type": "array",
                                                          "title": "Additional library search dirs",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "tlas": {
                                                          "type": "array",
                                                          "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                          "items": {
                                                            "type": "object",
                                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                            "properties": {
                                                              "code": {
                                                                "type": "boolean"
                                                              },
                                                              "name": {
                                                                "type": "string"
                                                              },
                                                              "value": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    },
                                                    "recurse": {
                                                      "type": "boolean",
                                                      "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "helm": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceHelm holds helm specific options",
                                                  "properties": {
                                                    "apiVersions": {
                                                      "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "fileParameters": {
                                                      "type": "array",
                                                      "title": "FileParameters are file parameters to the helm template",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the Helm parameter"
                                                          },
                                                          "path": {
                                                            "type": "string",
                                                            "title": "Path is the path to the file containing the values for the Helm parameter"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "ignoreMissingValueFiles": {
                                                      "type": "boolean",
                                                      "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                                    },
                                                    "kubeVersion": {
                                                      "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                      "type": "string"
                                                    },
                                                    "namespace": {
                                                      "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                                      "type": "string"
                                                    },
                                                    "parameters": {
                                                      "type": "array",
                                                      "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                                        "properties": {
                                                          "forceString": {
                                                            "type": "boolean",
                                                            "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                          },
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the Helm parameter"
                                                          },
                                                          "value": {
                                                            "type": "string",
                                                            "title": "Value is the value for the Helm parameter"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "passCredentials": {
                                                      "type": "boolean",
                                                      "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                                    },
                                                    "releaseName": {
                                                      "type": "string",
                                                      "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                                    },
                                                    "skipCrds": {
                                                      "type": "boolean",
                                                      "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                                    },
                                                    "skipSchemaValidation": {
                                                      "type": "boolean",
                                                      "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                                    },
                                                    "skipTests": {
                                                      "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                                      "type": "boolean"
                                                    },
                                                    "valueFiles": {
                                                      "type": "array",
                                                      "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "values": {
                                                      "type": "string",
                                                      "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                                    },
                                                    "valuesObject": {
                                                      "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                                      "type": "object",
                                                      "properties": {
                                                        "raw": {
                                                          "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                          "type": "string",
                                                          "format": "byte"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    },
                                                    "version": {
                                                      "type": "string",
                                                      "title": "Version is the Helm version to use for templating (\"3\")"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "kustomize": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                                  "properties": {
                                                    "apiVersions": {
                                                      "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "commonAnnotations": {
                                                      "type": "object",
                                                      "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                                      "additionalProperties": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "commonAnnotationsEnvsubst": {
                                                      "type": "boolean",
                                                      "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                                    },
                                                    "commonLabels": {
                                                      "type": "object",
                                                      "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                                      "additionalProperties": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "components": {
                                                      "type": "array",
                                                      "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "forceCommonAnnotations": {
                                                      "type": "boolean",
                                                      "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                                    },
                                                    "forceCommonLabels": {
                                                      "type": "boolean",
                                                      "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                                    },
                                                    "ignoreMissingComponents": {
                                                      "type": "boolean",
                                                      "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                                    },
                                                    "images": {
                                                      "type": "array",
                                                      "title": "Images is a list of Kustomize image override specifications",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "kubeVersion": {
                                                      "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                      "type": "string"
                                                    },
                                                    "labelIncludeTemplates": {
                                                      "type": "boolean",
                                                      "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                                    },
                                                    "labelWithoutSelector": {
                                                      "type": "boolean",
                                                      "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                                    },
                                                    "namePrefix": {
                                                      "type": "string",
                                                      "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                                    },
                                                    "nameSuffix": {
                                                      "type": "string",
                                                      "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                                    },
                                                    "namespace": {
                                                      "type": "string",
                                                      "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                                    },
                                                    "patches": {
                                                      "type": "array",
                                                      "title": "Patches is a list of Kustomize patches",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "options": {
                                                            "type": "object",
                                                            "additionalProperties": {
                                                              "type": "boolean"
                                                            }
                                                          },
                                                          "patch": {
                                                            "type": "string"
                                                          },
                                                          "path": {
                                                            "type": "string"
                                                          },
                                                          "target": {
                                                            "type": "object",
                                                            "properties": {
                                                              "annotationSelector": {
                                                                "type": "string"
                                                              },
                                                              "labelSelector": {
                                                                "type": "string"
                                                              },
                                                              "resId": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "gvk": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "group": {
                                                                        "type": "string"
                                                                      },
                                                                      "kind": {
                                                                        "type": "string"
                                                                      },
                                                                      "version": {
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "additionalProperties": false
                                                                  },
                                                                  "name": {
                                                                    "type": "string"
                                                                  },
                                                                  "namespace": {
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "additionalProperties": false
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "replicas": {
                                                      "type": "array",
                                                      "title": "Replicas is a list of Kustomize Replicas override specifications",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "count": {
                                                            "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                            "type": "object",
                                                            "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                            "properties": {
                                                              "intVal": {
                                                                "type": "integer",
                                                                "format": "int32"
                                                              },
                                                              "strVal": {
                                                                "type": "string"
                                                              },
                                                              "type": {
                                                                "type": "integer",
                                                                "format": "int64"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          },
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name of Deployment or StatefulSet"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "version": {
                                                      "type": "string",
                                                      "title": "Version controls which version of Kustomize to use for rendering manifests"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "name": {
                                                  "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                                  "type": "string"
                                                },
                                                "path": {
                                                  "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                                  "type": "string"
                                                },
                                                "plugin": {
                                                  "type": "object",
                                                  "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                                  "properties": {
                                                    "env": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "EnvEntry represents an entry in the application's environment",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the variable, usually expressed in uppercase"
                                                          },
                                                          "value": {
                                                            "type": "string",
                                                            "title": "Value is the value of the variable"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "parameters": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "array": {
                                                            "description": "Array is the value of an array type parameter.",
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "map": {
                                                            "description": "Map is the value of a map type parameter.",
                                                            "type": "object",
                                                            "additionalProperties": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "name": {
                                                            "description": "Name is the name identifying a parameter.",
                                                            "type": "string"
                                                          },
                                                          "string": {
                                                            "description": "String_ is the value of a string type parameter.",
                                                            "type": "string"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "ref": {
                                                  "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                                  "type": "string"
                                                },
                                                "repoURL": {
                                                  "type": "string",
                                                  "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                                },
                                                "targetRevision": {
                                                  "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "syncPolicy": {
                                            "type": "object",
                                            "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                                            "properties": {
                                              "automated": {
                                                "type": "object",
                                                "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                                                "properties": {
                                                  "allowEmpty": {
                                                    "type": "boolean",
                                                    "title": "AllowEmpty allows apps have zero live resources (default: false)"
                                                  },
                                                  "enable": {
                                                    "type": "boolean",
                                                    "title": "Enable allows apps to explicitly control automated sync"
                                                  },
                                                  "prune": {
                                                    "type": "boolean",
                                                    "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                                                  },
                                                  "selfHeal": {
                                                    "type": "boolean",
                                                    "title": "SelfHeal specifies whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "managedNamespaceMetadata": {
                                                "type": "object",
                                                "properties": {
                                                  "annotations": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "labels": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "retry": {
                                                "type": "object",
                                                "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                                                "properties": {
                                                  "backoff": {
                                                    "type": "object",
                                                    "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                                                    "properties": {
                                                      "duration": {
                                                        "type": "string",
                                                        "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                                                      },
                                                      "factor": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "title": "Factor is a factor to multiply the base duration after each failed retry"
                                                      },
                                                      "maxDuration": {
                                                        "type": "string",
                                                        "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "limit": {
                                                    "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                                    "type": "integer",
                                                    "format": "int64"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "syncOptions": {
                                                "type": "array",
                                                "title": "Options allow you to specify whole app sync-options",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "values": {
                                    "type": "object",
                                    "title": "Values contains key/value pairs which are passed directly as parameters to the template",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "list": {
                                "type": "object",
                                "title": "ListGenerator include items info",
                                "properties": {
                                  "elements": {
                                    "type": "array",
                                    "title": "+kubebuilder:validation:Optional",
                                    "items": {
                                      "description": "JSON represents any valid JSON value.\nThese types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.",
                                      "type": "object",
                                      "properties": {
                                        "raw": {
                                          "type": "string",
                                          "format": "byte"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "elementsYaml": {
                                    "type": "string"
                                  },
                                  "template": {
                                    "type": "object",
                                    "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
                                    "properties": {
                                      "metadata": {
                                        "type": "object",
                                        "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
                                        "properties": {
                                          "annotations": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "finalizers": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "labels": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "namespace": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "spec": {
                                        "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
                                        "type": "object",
                                        "properties": {
                                          "destination": {
                                            "type": "object",
                                            "title": "ApplicationDestination holds information about the application's destination",
                                            "properties": {
                                              "name": {
                                                "description": "Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.",
                                                "type": "string"
                                              },
                                              "namespace": {
                                                "type": "string",
                                                "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                                              },
                                              "server": {
                                                "description": "Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "ignoreDifferences": {
                                            "type": "array",
                                            "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                                            "items": {
                                              "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                                              "type": "object",
                                              "properties": {
                                                "group": {
                                                  "type": "string"
                                                },
                                                "jqPathExpressions": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "jsonPointers": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "kind": {
                                                  "type": "string"
                                                },
                                                "managedFieldsManagers": {
                                                  "type": "array",
                                                  "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "name": {
                                                  "type": "string"
                                                },
                                                "namespace": {
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "info": {
                                            "type": "array",
                                            "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "project": {
                                            "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                                            "type": "string"
                                          },
                                          "revisionHistoryLimit": {
                                            "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                                            "type": "integer",
                                            "format": "int64"
                                          },
                                          "source": {
                                            "type": "object",
                                            "title": "ApplicationSource contains all required information about the source of an application",
                                            "properties": {
                                              "chart": {
                                                "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                                "type": "string"
                                              },
                                              "directory": {
                                                "type": "object",
                                                "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                                "properties": {
                                                  "exclude": {
                                                    "type": "string",
                                                    "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                                  },
                                                  "include": {
                                                    "type": "string",
                                                    "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                                  },
                                                  "jsonnet": {
                                                    "type": "object",
                                                    "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                                    "properties": {
                                                      "extVars": {
                                                        "type": "array",
                                                        "title": "ExtVars is a list of Jsonnet External Variables",
                                                        "items": {
                                                          "type": "object",
                                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                          "properties": {
                                                            "code": {
                                                              "type": "boolean"
                                                            },
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      },
                                                      "libs": {
                                                        "type": "array",
                                                        "title": "Additional library search dirs",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "tlas": {
                                                        "type": "array",
                                                        "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                        "items": {
                                                          "type": "object",
                                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                          "properties": {
                                                            "code": {
                                                              "type": "boolean"
                                                            },
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "recurse": {
                                                    "type": "boolean",
                                                    "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "helm": {
                                                "type": "object",
                                                "title": "ApplicationSourceHelm holds helm specific options",
                                                "properties": {
                                                  "apiVersions": {
                                                    "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "fileParameters": {
                                                    "type": "array",
                                                    "title": "FileParameters are file parameters to the helm template",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the Helm parameter"
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "title": "Path is the path to the file containing the values for the Helm parameter"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "ignoreMissingValueFiles": {
                                                    "type": "boolean",
                                                    "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                                  },
                                                  "kubeVersion": {
                                                    "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                    "type": "string"
                                                  },
                                                  "namespace": {
                                                    "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                                    "type": "string"
                                                  },
                                                  "parameters": {
                                                    "type": "array",
                                                    "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                                      "properties": {
                                                        "forceString": {
                                                          "type": "boolean",
                                                          "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the Helm parameter"
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "title": "Value is the value for the Helm parameter"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "passCredentials": {
                                                    "type": "boolean",
                                                    "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                                  },
                                                  "releaseName": {
                                                    "type": "string",
                                                    "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                                  },
                                                  "skipCrds": {
                                                    "type": "boolean",
                                                    "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                                  },
                                                  "skipSchemaValidation": {
                                                    "type": "boolean",
                                                    "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                                  },
                                                  "skipTests": {
                                                    "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                                    "type": "boolean"
                                                  },
                                                  "valueFiles": {
                                                    "type": "array",
                                                    "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "values": {
                                                    "type": "string",
                                                    "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                                  },
                                                  "valuesObject": {
                                                    "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                                    "type": "object",
                                                    "properties": {
                                                      "raw": {
                                                        "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                        "type": "string",
                                                        "format": "byte"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "version": {
                                                    "type": "string",
                                                    "title": "Version is the Helm version to use for templating (\"3\")"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "kustomize": {
                                                "type": "object",
                                                "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                                "properties": {
                                                  "apiVersions": {
                                                    "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "commonAnnotations": {
                                                    "type": "object",
                                                    "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "commonAnnotationsEnvsubst": {
                                                    "type": "boolean",
                                                    "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                                  },
                                                  "commonLabels": {
                                                    "type": "object",
                                                    "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "components": {
                                                    "type": "array",
                                                    "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "forceCommonAnnotations": {
                                                    "type": "boolean",
                                                    "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                                  },
                                                  "forceCommonLabels": {
                                                    "type": "boolean",
                                                    "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                                  },
                                                  "ignoreMissingComponents": {
                                                    "type": "boolean",
                                                    "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                                  },
                                                  "images": {
                                                    "type": "array",
                                                    "title": "Images is a list of Kustomize image override specifications",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "kubeVersion": {
                                                    "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                    "type": "string"
                                                  },
                                                  "labelIncludeTemplates": {
                                                    "type": "boolean",
                                                    "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                                  },
                                                  "labelWithoutSelector": {
                                                    "type": "boolean",
                                                    "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                                  },
                                                  "namePrefix": {
                                                    "type": "string",
                                                    "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                                  },
                                                  "nameSuffix": {
                                                    "type": "string",
                                                    "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                                  },
                                                  "namespace": {
                                                    "type": "string",
                                                    "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                                  },
                                                  "patches": {
                                                    "type": "array",
                                                    "title": "Patches is a list of Kustomize patches",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "options": {
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "type": "boolean"
                                                          }
                                                        },
                                                        "patch": {
                                                          "type": "string"
                                                        },
                                                        "path": {
                                                          "type": "string"
                                                        },
                                                        "target": {
                                                          "type": "object",
                                                          "properties": {
                                                            "annotationSelector": {
                                                              "type": "string"
                                                            },
                                                            "labelSelector": {
                                                              "type": "string"
                                                            },
                                                            "resId": {
                                                              "type": "object",
                                                              "properties": {
                                                                "gvk": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "group": {
                                                                      "type": "string"
                                                                    },
                                                                    "kind": {
                                                                      "type": "string"
                                                                    },
                                                                    "version": {
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "additionalProperties": false
                                                                },
                                                                "name": {
                                                                  "type": "string"
                                                                },
                                                                "namespace": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "additionalProperties": false
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "replicas": {
                                                    "type": "array",
                                                    "title": "Replicas is a list of Kustomize Replicas override specifications",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "count": {
                                                          "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                          "type": "object",
                                                          "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                          "properties": {
                                                            "intVal": {
                                                              "type": "integer",
                                                              "format": "int32"
                                                            },
                                                            "strVal": {
                                                              "type": "string"
                                                            },
                                                            "type": {
                                                              "type": "integer",
                                                              "format": "int64"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name of Deployment or StatefulSet"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "version": {
                                                    "type": "string",
                                                    "title": "Version controls which version of Kustomize to use for rendering manifests"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "name": {
                                                "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                                "type": "string"
                                              },
                                              "path": {
                                                "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                                "type": "string"
                                              },
                                              "plugin": {
                                                "type": "object",
                                                "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                                "properties": {
                                                  "env": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "EnvEntry represents an entry in the application's environment",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the variable, usually expressed in uppercase"
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "title": "Value is the value of the variable"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "parameters": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "array": {
                                                          "description": "Array is the value of an array type parameter.",
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "map": {
                                                          "description": "Map is the value of a map type parameter.",
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "name": {
                                                          "description": "Name is the name identifying a parameter.",
                                                          "type": "string"
                                                        },
                                                        "string": {
                                                          "description": "String_ is the value of a string type parameter.",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "ref": {
                                                "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                                "type": "string"
                                              },
                                              "repoURL": {
                                                "type": "string",
                                                "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                              },
                                              "targetRevision": {
                                                "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "sourceHydrator": {
                                            "description": "SourceHydrator specifies a dry \"don't repeat yourself\" source for manifests, a sync source from which to sync\nhydrated manifests, and an optional hydrateTo location to act as a \"staging\" aread for hydrated manifests.",
                                            "type": "object",
                                            "properties": {
                                              "drySource": {
                                                "description": "DrySource specifies a location for dry \"don't repeat yourself\" manifest source information.",
                                                "type": "object",
                                                "properties": {
                                                  "path": {
                                                    "type": "string",
                                                    "title": "Path is a directory path within the Git repository where the manifests are located"
                                                  },
                                                  "repoURL": {
                                                    "type": "string",
                                                    "title": "RepoURL is the URL to the git repository that contains the application manifests"
                                                  },
                                                  "targetRevision": {
                                                    "type": "string",
                                                    "title": "TargetRevision defines the revision of the source to hydrate"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "hydrateTo": {
                                                "description": "HydrateTo specifies a location to which hydrated manifests should be pushed as a \"staging area\" before being moved to\nthe SyncSource. The RepoURL and Path are assumed based on the associated SyncSource config in the SourceHydrator.",
                                                "type": "object",
                                                "properties": {
                                                  "targetBranch": {
                                                    "type": "string",
                                                    "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "syncSource": {
                                                "description": "SyncSource specifies a location from which hydrated manifests may be synced. RepoURL is assumed based on the\nassociated DrySource config in the SourceHydrator.",
                                                "type": "object",
                                                "properties": {
                                                  "path": {
                                                    "description": "Path is a directory path within the git repository where hydrated manifests should be committed to and synced\nfrom. If hydrateTo is set, this is just the path from which hydrated manifests will be synced.",
                                                    "type": "string"
                                                  },
                                                  "targetBranch": {
                                                    "type": "string",
                                                    "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "sources": {
                                            "type": "array",
                                            "title": "Sources is a reference to the location of the application's manifests or chart",
                                            "items": {
                                              "type": "object",
                                              "title": "ApplicationSource contains all required information about the source of an application",
                                              "properties": {
                                                "chart": {
                                                  "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                                  "type": "string"
                                                },
                                                "directory": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                                  "properties": {
                                                    "exclude": {
                                                      "type": "string",
                                                      "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                                    },
                                                    "include": {
                                                      "type": "string",
                                                      "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                                    },
                                                    "jsonnet": {
                                                      "type": "object",
                                                      "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                                      "properties": {
                                                        "extVars": {
                                                          "type": "array",
                                                          "title": "ExtVars is a list of Jsonnet External Variables",
                                                          "items": {
                                                            "type": "object",
                                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                            "properties": {
                                                              "code": {
                                                                "type": "boolean"
                                                              },
                                                              "name": {
                                                                "type": "string"
                                                              },
                                                              "value": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        },
                                                        "libs": {
                                                          "type": "array",
                                                          "title": "Additional library search dirs",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "tlas": {
                                                          "type": "array",
                                                          "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                          "items": {
                                                            "type": "object",
                                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                            "properties": {
                                                              "code": {
                                                                "type": "boolean"
                                                              },
                                                              "name": {
                                                                "type": "string"
                                                              },
                                                              "value": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    },
                                                    "recurse": {
                                                      "type": "boolean",
                                                      "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "helm": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceHelm holds helm specific options",
                                                  "properties": {
                                                    "apiVersions": {
                                                      "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "fileParameters": {
                                                      "type": "array",
                                                      "title": "FileParameters are file parameters to the helm template",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the Helm parameter"
                                                          },
                                                          "path": {
                                                            "type": "string",
                                                            "title": "Path is the path to the file containing the values for the Helm parameter"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "ignoreMissingValueFiles": {
                                                      "type": "boolean",
                                                      "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                                    },
                                                    "kubeVersion": {
                                                      "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                      "type": "string"
                                                    },
                                                    "namespace": {
                                                      "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                                      "type": "string"
                                                    },
                                                    "parameters": {
                                                      "type": "array",
                                                      "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                                        "properties": {
                                                          "forceString": {
                                                            "type": "boolean",
                                                            "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                          },
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the Helm parameter"
                                                          },
                                                          "value": {
                                                            "type": "string",
                                                            "title": "Value is the value for the Helm parameter"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "passCredentials": {
                                                      "type": "boolean",
                                                      "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                                    },
                                                    "releaseName": {
                                                      "type": "string",
                                                      "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                                    },
                                                    "skipCrds": {
                                                      "type": "boolean",
                                                      "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                                    },
                                                    "skipSchemaValidation": {
                                                      "type": "boolean",
                                                      "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                                    },
                                                    "skipTests": {
                                                      "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                                      "type": "boolean"
                                                    },
                                                    "valueFiles": {
                                                      "type": "array",
                                                      "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "values": {
                                                      "type": "string",
                                                      "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                                    },
                                                    "valuesObject": {
                                                      "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                                      "type": "object",
                                                      "properties": {
                                                        "raw": {
                                                          "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                          "type": "string",
                                                          "format": "byte"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    },
                                                    "version": {
                                                      "type": "string",
                                                      "title": "Version is the Helm version to use for templating (\"3\")"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "kustomize": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                                  "properties": {
                                                    "apiVersions": {
                                                      "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "commonAnnotations": {
                                                      "type": "object",
                                                      "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                                      "additionalProperties": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "commonAnnotationsEnvsubst": {
                                                      "type": "boolean",
                                                      "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                                    },
                                                    "commonLabels": {
                                                      "type": "object",
                                                      "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                                      "additionalProperties": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "components": {
                                                      "type": "array",
                                                      "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "forceCommonAnnotations": {
                                                      "type": "boolean",
                                                      "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                                    },
                                                    "forceCommonLabels": {
                                                      "type": "boolean",
                                                      "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                                    },
                                                    "ignoreMissingComponents": {
                                                      "type": "boolean",
                                                      "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                                    },
                                                    "images": {
                                                      "type": "array",
                                                      "title": "Images is a list of Kustomize image override specifications",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "kubeVersion": {
                                                      "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                      "type": "string"
                                                    },
                                                    "labelIncludeTemplates": {
                                                      "type": "boolean",
                                                      "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                                    },
                                                    "labelWithoutSelector": {
                                                      "type": "boolean",
                                                      "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                                    },
                                                    "namePrefix": {
                                                      "type": "string",
                                                      "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                                    },
                                                    "nameSuffix": {
                                                      "type": "string",
                                                      "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                                    },
                                                    "namespace": {
                                                      "type": "string",
                                                      "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                                    },
                                                    "patches": {
                                                      "type": "array",
                                                      "title": "Patches is a list of Kustomize patches",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "options": {
                                                            "type": "object",
                                                            "additionalProperties": {
                                                              "type": "boolean"
                                                            }
                                                          },
                                                          "patch": {
                                                            "type": "string"
                                                          },
                                                          "path": {
                                                            "type": "string"
                                                          },
                                                          "target": {
                                                            "type": "object",
                                                            "properties": {
                                                              "annotationSelector": {
                                                                "type": "string"
                                                              },
                                                              "labelSelector": {
                                                                "type": "string"
                                                              },
                                                              "resId": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "gvk": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "group": {
                                                                        "type": "string"
                                                                      },
                                                                      "kind": {
                                                                        "type": "string"
                                                                      },
                                                                      "version": {
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "additionalProperties": false
                                                                  },
                                                                  "name": {
                                                                    "type": "string"
                                                                  },
                                                                  "namespace": {
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "additionalProperties": false
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "replicas": {
                                                      "type": "array",
                                                      "title": "Replicas is a list of Kustomize Replicas override specifications",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "count": {
                                                            "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                            "type": "object",
                                                            "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                            "properties": {
                                                              "intVal": {
                                                                "type": "integer",
                                                                "format": "int32"
                                                              },
                                                              "strVal": {
                                                                "type": "string"
                                                              },
                                                              "type": {
                                                                "type": "integer",
                                                                "format": "int64"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          },
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name of Deployment or StatefulSet"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "version": {
                                                      "type": "string",
                                                      "title": "Version controls which version of Kustomize to use for rendering manifests"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "name": {
                                                  "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                                  "type": "string"
                                                },
                                                "path": {
                                                  "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                                  "type": "string"
                                                },
                                                "plugin": {
                                                  "type": "object",
                                                  "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                                  "properties": {
                                                    "env": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "EnvEntry represents an entry in the application's environment",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the variable, usually expressed in uppercase"
                                                          },
                                                          "value": {
                                                            "type": "string",
                                                            "title": "Value is the value of the variable"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "parameters": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "array": {
                                                            "description": "Array is the value of an array type parameter.",
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "map": {
                                                            "description": "Map is the value of a map type parameter.",
                                                            "type": "object",
                                                            "additionalProperties": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "name": {
                                                            "description": "Name is the name identifying a parameter.",
                                                            "type": "string"
                                                          },
                                                          "string": {
                                                            "description": "String_ is the value of a string type parameter.",
                                                            "type": "string"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "ref": {
                                                  "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                                  "type": "string"
                                                },
                                                "repoURL": {
                                                  "type": "string",
                                                  "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                                },
                                                "targetRevision": {
                                                  "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "syncPolicy": {
                                            "type": "object",
                                            "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                                            "properties": {
                                              "automated": {
                                                "type": "object",
                                                "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                                                "properties": {
                                                  "allowEmpty": {
                                                    "type": "boolean",
                                                    "title": "AllowEmpty allows apps have zero live resources (default: false)"
                                                  },
                                                  "enable": {
                                                    "type": "boolean",
                                                    "title": "Enable allows apps to explicitly control automated sync"
                                                  },
                                                  "prune": {
                                                    "type": "boolean",
                                                    "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                                                  },
                                                  "selfHeal": {
                                                    "type": "boolean",
                                                    "title": "SelfHeal specifies whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "managedNamespaceMetadata": {
                                                "type": "object",
                                                "properties": {
                                                  "annotations": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "labels": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "retry": {
                                                "type": "object",
                                                "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                                                "properties": {
                                                  "backoff": {
                                                    "type": "object",
                                                    "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                                                    "properties": {
                                                      "duration": {
                                                        "type": "string",
                                                        "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                                                      },
                                                      "factor": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "title": "Factor is a factor to multiply the base duration after each failed retry"
                                                      },
                                                      "maxDuration": {
                                                        "type": "string",
                                                        "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "limit": {
                                                    "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                                    "type": "integer",
                                                    "format": "int64"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "syncOptions": {
                                                "type": "array",
                                                "title": "Options allow you to specify whole app sync-options",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false
                              },
                              "matrix": {
                                "description": "JSON represents any valid JSON value.\nThese types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.",
                                "type": "object",
                                "properties": {
                                  "raw": {
                                    "type": "string",
                                    "format": "byte"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "merge": {
                                "description": "JSON represents any valid JSON value.\nThese types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.",
                                "type": "object",
                                "properties": {
                                  "raw": {
                                    "type": "string",
                                    "format": "byte"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "plugin": {
                                "description": "PluginGenerator defines connection info specific to Plugin.",
                                "type": "object",
                                "properties": {
                                  "configMapRef": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "title": "Name of the ConfigMap"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "input": {
                                    "type": "object",
                                    "properties": {
                                      "parameters": {
                                        "description": "Parameters contains the information to pass to the plugin. It is a map. The keys must be strings, and the\nvalues can be any type.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "description": "JSON represents any valid JSON value.\nThese types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.",
                                          "type": "object",
                                          "properties": {
                                            "raw": {
                                              "type": "string",
                                              "format": "byte"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "requeueAfterSeconds": {
                                    "description": "RequeueAfterSeconds determines how long the ApplicationSet controller will wait before reconciling the ApplicationSet again.",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "template": {
                                    "type": "object",
                                    "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
                                    "properties": {
                                      "metadata": {
                                        "type": "object",
                                        "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
                                        "properties": {
                                          "annotations": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "finalizers": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "labels": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "namespace": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "spec": {
                                        "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
                                        "type": "object",
                                        "properties": {
                                          "destination": {
                                            "type": "object",
                                            "title": "ApplicationDestination holds information about the application's destination",
                                            "properties": {
                                              "name": {
                                                "description": "Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.",
                                                "type": "string"
                                              },
                                              "namespace": {
                                                "type": "string",
                                                "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                                              },
                                              "server": {
                                                "description": "Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "ignoreDifferences": {
                                            "type": "array",
                                            "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                                            "items": {
                                              "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                                              "type": "object",
                                              "properties": {
                                                "group": {
                                                  "type": "string"
                                                },
                                                "jqPathExpressions": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "jsonPointers": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "kind": {
                                                  "type": "string"
                                                },
                                                "managedFieldsManagers": {
                                                  "type": "array",
                                                  "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "name": {
                                                  "type": "string"
                                                },
                                                "namespace": {
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "info": {
                                            "type": "array",
                                            "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "project": {
                                            "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                                            "type": "string"
                                          },
                                          "revisionHistoryLimit": {
                                            "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                                            "type": "integer",
                                            "format": "int64"
                                          },
                                          "source": {
                                            "type": "object",
                                            "title": "ApplicationSource contains all required information about the source of an application",
                                            "properties": {
                                              "chart": {
                                                "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                                "type": "string"
                                              },
                                              "directory": {
                                                "type": "object",
                                                "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                                "properties": {
                                                  "exclude": {
                                                    "type": "string",
                                                    "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                                  },
                                                  "include": {
                                                    "type": "string",
                                                    "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                                  },
                                                  "jsonnet": {
                                                    "type": "object",
                                                    "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                                    "properties": {
                                                      "extVars": {
                                                        "type": "array",
                                                        "title": "ExtVars is a list of Jsonnet External Variables",
                                                        "items": {
                                                          "type": "object",
                                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                          "properties": {
                                                            "code": {
                                                              "type": "boolean"
                                                            },
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      },
                                                      "libs": {
                                                        "type": "array",
                                                        "title": "Additional library search dirs",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "tlas": {
                                                        "type": "array",
                                                        "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                        "items": {
                                                          "type": "object",
                                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                          "properties": {
                                                            "code": {
                                                              "type": "boolean"
                                                            },
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "recurse": {
                                                    "type": "boolean",
                                                    "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "helm": {
                                                "type": "object",
                                                "title": "ApplicationSourceHelm holds helm specific options",
                                                "properties": {
                                                  "apiVersions": {
                                                    "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "fileParameters": {
                                                    "type": "array",
                                                    "title": "FileParameters are file parameters to the helm template",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the Helm parameter"
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "title": "Path is the path to the file containing the values for the Helm parameter"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "ignoreMissingValueFiles": {
                                                    "type": "boolean",
                                                    "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                                  },
                                                  "kubeVersion": {
                                                    "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                    "type": "string"
                                                  },
                                                  "namespace": {
                                                    "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                                    "type": "string"
                                                  },
                                                  "parameters": {
                                                    "type": "array",
                                                    "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                                      "properties": {
                                                        "forceString": {
                                                          "type": "boolean",
                                                          "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the Helm parameter"
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "title": "Value is the value for the Helm parameter"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "passCredentials": {
                                                    "type": "boolean",
                                                    "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                                  },
                                                  "releaseName": {
                                                    "type": "string",
                                                    "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                                  },
                                                  "skipCrds": {
                                                    "type": "boolean",
                                                    "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                                  },
                                                  "skipSchemaValidation": {
                                                    "type": "boolean",
                                                    "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                                  },
                                                  "skipTests": {
                                                    "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                                    "type": "boolean"
                                                  },
                                                  "valueFiles": {
                                                    "type": "array",
                                                    "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "values": {
                                                    "type": "string",
                                                    "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                                  },
                                                  "valuesObject": {
                                                    "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                                    "type": "object",
                                                    "properties": {
                                                      "raw": {
                                                        "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                        "type": "string",
                                                        "format": "byte"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "version": {
                                                    "type": "string",
                                                    "title": "Version is the Helm version to use for templating (\"3\")"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "kustomize": {
                                                "type": "object",
                                                "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                                "properties": {
                                                  "apiVersions": {
                                                    "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "commonAnnotations": {
                                                    "type": "object",
                                                    "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "commonAnnotationsEnvsubst": {
                                                    "type": "boolean",
                                                    "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                                  },
                                                  "commonLabels": {
                                                    "type": "object",
                                                    "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "components": {
                                                    "type": "array",
                                                    "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "forceCommonAnnotations": {
                                                    "type": "boolean",
                                                    "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                                  },
                                                  "forceCommonLabels": {
                                                    "type": "boolean",
                                                    "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                                  },
                                                  "ignoreMissingComponents": {
                                                    "type": "boolean",
                                                    "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                                  },
                                                  "images": {
                                                    "type": "array",
                                                    "title": "Images is a list of Kustomize image override specifications",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "kubeVersion": {
                                                    "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                    "type": "string"
                                                  },
                                                  "labelIncludeTemplates": {
                                                    "type": "boolean",
                                                    "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                                  },
                                                  "labelWithoutSelector": {
                                                    "type": "boolean",
                                                    "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                                  },
                                                  "namePrefix": {
                                                    "type": "string",
                                                    "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                                  },
                                                  "nameSuffix": {
                                                    "type": "string",
                                                    "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                                  },
                                                  "namespace": {
                                                    "type": "string",
                                                    "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                                  },
                                                  "patches": {
                                                    "type": "array",
                                                    "title": "Patches is a list of Kustomize patches",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "options": {
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "type": "boolean"
                                                          }
                                                        },
                                                        "patch": {
                                                          "type": "string"
                                                        },
                                                        "path": {
                                                          "type": "string"
                                                        },
                                                        "target": {
                                                          "type": "object",
                                                          "properties": {
                                                            "annotationSelector": {
                                                              "type": "string"
                                                            },
                                                            "labelSelector": {
                                                              "type": "string"
                                                            },
                                                            "resId": {
                                                              "type": "object",
                                                              "properties": {
                                                                "gvk": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "group": {
                                                                      "type": "string"
                                                                    },
                                                                    "kind": {
                                                                      "type": "string"
                                                                    },
                                                                    "version": {
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "additionalProperties": false
                                                                },
                                                                "name": {
                                                                  "type": "string"
                                                                },
                                                                "namespace": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "additionalProperties": false
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "replicas": {
                                                    "type": "array",
                                                    "title": "Replicas is a list of Kustomize Replicas override specifications",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "count": {
                                                          "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                          "type": "object",
                                                          "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                          "properties": {
                                                            "intVal": {
                                                              "type": "integer",
                                                              "format": "int32"
                                                            },
                                                            "strVal": {
                                                              "type": "string"
                                                            },
                                                            "type": {
                                                              "type": "integer",
                                                              "format": "int64"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name of Deployment or StatefulSet"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "version": {
                                                    "type": "string",
                                                    "title": "Version controls which version of Kustomize to use for rendering manifests"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "name": {
                                                "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                                "type": "string"
                                              },
                                              "path": {
                                                "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                                "type": "string"
                                              },
                                              "plugin": {
                                                "type": "object",
                                                "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                                "properties": {
                                                  "env": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "EnvEntry represents an entry in the application's environment",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the variable, usually expressed in uppercase"
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "title": "Value is the value of the variable"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "parameters": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "array": {
                                                          "description": "Array is the value of an array type parameter.",
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "map": {
                                                          "description": "Map is the value of a map type parameter.",
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "name": {
                                                          "description": "Name is the name identifying a parameter.",
                                                          "type": "string"
                                                        },
                                                        "string": {
                                                          "description": "String_ is the value of a string type parameter.",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "ref": {
                                                "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                                "type": "string"
                                              },
                                              "repoURL": {
                                                "type": "string",
                                                "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                              },
                                              "targetRevision": {
                                                "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "sourceHydrator": {
                                            "description": "SourceHydrator specifies a dry \"don't repeat yourself\" source for manifests, a sync source from which to sync\nhydrated manifests, and an optional hydrateTo location to act as a \"staging\" aread for hydrated manifests.",
                                            "type": "object",
                                            "properties": {
                                              "drySource": {
                                                "description": "DrySource specifies a location for dry \"don't repeat yourself\" manifest source information.",
                                                "type": "object",
                                                "properties": {
                                                  "path": {
                                                    "type": "string",
                                                    "title": "Path is a directory path within the Git repository where the manifests are located"
                                                  },
                                                  "repoURL": {
                                                    "type": "string",
                                                    "title": "RepoURL is the URL to the git repository that contains the application manifests"
                                                  },
                                                  "targetRevision": {
                                                    "type": "string",
                                                    "title": "TargetRevision defines the revision of the source to hydrate"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "hydrateTo": {
                                                "description": "HydrateTo specifies a location to which hydrated manifests should be pushed as a \"staging area\" before being moved to\nthe SyncSource. The RepoURL and Path are assumed based on the associated SyncSource config in the SourceHydrator.",
                                                "type": "object",
                                                "properties": {
                                                  "targetBranch": {
                                                    "type": "string",
                                                    "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "syncSource": {
                                                "description": "SyncSource specifies a location from which hydrated manifests may be synced. RepoURL is assumed based on the\nassociated DrySource config in the SourceHydrator.",
                                                "type": "object",
                                                "properties": {
                                                  "path": {
                                                    "description": "Path is a directory path within the git repository where hydrated manifests should be committed to and synced\nfrom. If hydrateTo is set, this is just the path from which hydrated manifests will be synced.",
                                                    "type": "string"
                                                  },
                                                  "targetBranch": {
                                                    "type": "string",
                                                    "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "sources": {
                                            "type": "array",
                                            "title": "Sources is a reference to the location of the application's manifests or chart",
                                            "items": {
                                              "type": "object",
                                              "title": "ApplicationSource contains all required information about the source of an application",
                                              "properties": {
                                                "chart": {
                                                  "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                                  "type": "string"
                                                },
                                                "directory": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                                  "properties": {
                                                    "exclude": {
                                                      "type": "string",
                                                      "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                                    },
                                                    "include": {
                                                      "type": "string",
                                                      "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                                    },
                                                    "jsonnet": {
                                                      "type": "object",
                                                      "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                                      "properties": {
                                                        "extVars": {
                                                          "type": "array",
                                                          "title": "ExtVars is a list of Jsonnet External Variables",
                                                          "items": {
                                                            "type": "object",
                                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                            "properties": {
                                                              "code": {
                                                                "type": "boolean"
                                                              },
                                                              "name": {
                                                                "type": "string"
                                                              },
                                                              "value": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        },
                                                        "libs": {
                                                          "type": "array",
                                                          "title": "Additional library search dirs",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "tlas": {
                                                          "type": "array",
                                                          "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                          "items": {
                                                            "type": "object",
                                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                            "properties": {
                                                              "code": {
                                                                "type": "boolean"
                                                              },
                                                              "name": {
                                                                "type": "string"
                                                              },
                                                              "value": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    },
                                                    "recurse": {
                                                      "type": "boolean",
                                                      "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "helm": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceHelm holds helm specific options",
                                                  "properties": {
                                                    "apiVersions": {
                                                      "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "fileParameters": {
                                                      "type": "array",
                                                      "title": "FileParameters are file parameters to the helm template",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the Helm parameter"
                                                          },
                                                          "path": {
                                                            "type": "string",
                                                            "title": "Path is the path to the file containing the values for the Helm parameter"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "ignoreMissingValueFiles": {
                                                      "type": "boolean",
                                                      "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                                    },
                                                    "kubeVersion": {
                                                      "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                      "type": "string"
                                                    },
                                                    "namespace": {
                                                      "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                                      "type": "string"
                                                    },
                                                    "parameters": {
                                                      "type": "array",
                                                      "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                                        "properties": {
                                                          "forceString": {
                                                            "type": "boolean",
                                                            "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                          },
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the Helm parameter"
                                                          },
                                                          "value": {
                                                            "type": "string",
                                                            "title": "Value is the value for the Helm parameter"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "passCredentials": {
                                                      "type": "boolean",
                                                      "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                                    },
                                                    "releaseName": {
                                                      "type": "string",
                                                      "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                                    },
                                                    "skipCrds": {
                                                      "type": "boolean",
                                                      "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                                    },
                                                    "skipSchemaValidation": {
                                                      "type": "boolean",
                                                      "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                                    },
                                                    "skipTests": {
                                                      "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                                      "type": "boolean"
                                                    },
                                                    "valueFiles": {
                                                      "type": "array",
                                                      "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "values": {
                                                      "type": "string",
                                                      "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                                    },
                                                    "valuesObject": {
                                                      "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                                      "type": "object",
                                                      "properties": {
                                                        "raw": {
                                                          "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                          "type": "string",
                                                          "format": "byte"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    },
                                                    "version": {
                                                      "type": "string",
                                                      "title": "Version is the Helm version to use for templating (\"3\")"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "kustomize": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                                  "properties": {
                                                    "apiVersions": {
                                                      "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "commonAnnotations": {
                                                      "type": "object",
                                                      "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                                      "additionalProperties": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "commonAnnotationsEnvsubst": {
                                                      "type": "boolean",
                                                      "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                                    },
                                                    "commonLabels": {
                                                      "type": "object",
                                                      "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                                      "additionalProperties": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "components": {
                                                      "type": "array",
                                                      "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "forceCommonAnnotations": {
                                                      "type": "boolean",
                                                      "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                                    },
                                                    "forceCommonLabels": {
                                                      "type": "boolean",
                                                      "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                                    },
                                                    "ignoreMissingComponents": {
                                                      "type": "boolean",
                                                      "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                                    },
                                                    "images": {
                                                      "type": "array",
                                                      "title": "Images is a list of Kustomize image override specifications",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "kubeVersion": {
                                                      "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                      "type": "string"
                                                    },
                                                    "labelIncludeTemplates": {
                                                      "type": "boolean",
                                                      "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                                    },
                                                    "labelWithoutSelector": {
                                                      "type": "boolean",
                                                      "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                                    },
                                                    "namePrefix": {
                                                      "type": "string",
                                                      "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                                    },
                                                    "nameSuffix": {
                                                      "type": "string",
                                                      "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                                    },
                                                    "namespace": {
                                                      "type": "string",
                                                      "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                                    },
                                                    "patches": {
                                                      "type": "array",
                                                      "title": "Patches is a list of Kustomize patches",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "options": {
                                                            "type": "object",
                                                            "additionalProperties": {
                                                              "type": "boolean"
                                                            }
                                                          },
                                                          "patch": {
                                                            "type": "string"
                                                          },
                                                          "path": {
                                                            "type": "string"
                                                          },
                                                          "target": {
                                                            "type": "object",
                                                            "properties": {
                                                              "annotationSelector": {
                                                                "type": "string"
                                                              },
                                                              "labelSelector": {
                                                                "type": "string"
                                                              },
                                                              "resId": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "gvk": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "group": {
                                                                        "type": "string"
                                                                      },
                                                                      "kind": {
                                                                        "type": "string"
                                                                      },
                                                                      "version": {
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "additionalProperties": false
                                                                  },
                                                                  "name": {
                                                                    "type": "string"
                                                                  },
                                                                  "namespace": {
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "additionalProperties": false
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "replicas": {
                                                      "type": "array",
                                                      "title": "Replicas is a list of Kustomize Replicas override specifications",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "count": {
                                                            "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                            "type": "object",
                                                            "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                            "properties": {
                                                              "intVal": {
                                                                "type": "integer",
                                                                "format": "int32"
                                                              },
                                                              "strVal": {
                                                                "type": "string"
                                                              },
                                                              "type": {
                                                                "type": "integer",
                                                                "format": "int64"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          },
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name of Deployment or StatefulSet"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "version": {
                                                      "type": "string",
                                                      "title": "Version controls which version of Kustomize to use for rendering manifests"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "name": {
                                                  "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                                  "type": "string"
                                                },
                                                "path": {
                                                  "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                                  "type": "string"
                                                },
                                                "plugin": {
                                                  "type": "object",
                                                  "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                                  "properties": {
                                                    "env": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "EnvEntry represents an entry in the application's environment",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the variable, usually expressed in uppercase"
                                                          },
                                                          "value": {
                                                            "type": "string",
                                                            "title": "Value is the value of the variable"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "parameters": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "array": {
                                                            "description": "Array is the value of an array type parameter.",
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "map": {
                                                            "description": "Map is the value of a map type parameter.",
                                                            "type": "object",
                                                            "additionalProperties": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "name": {
                                                            "description": "Name is the name identifying a parameter.",
                                                            "type": "string"
                                                          },
                                                          "string": {
                                                            "description": "String_ is the value of a string type parameter.",
                                                            "type": "string"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "ref": {
                                                  "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                                  "type": "string"
                                                },
                                                "repoURL": {
                                                  "type": "string",
                                                  "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                                },
                                                "targetRevision": {
                                                  "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "syncPolicy": {
                                            "type": "object",
                                            "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                                            "properties": {
                                              "automated": {
                                                "type": "object",
                                                "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                                                "properties": {
                                                  "allowEmpty": {
                                                    "type": "boolean",
                                                    "title": "AllowEmpty allows apps have zero live resources (default: false)"
                                                  },
                                                  "enable": {
                                                    "type": "boolean",
                                                    "title": "Enable allows apps to explicitly control automated sync"
                                                  },
                                                  "prune": {
                                                    "type": "boolean",
                                                    "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                                                  },
                                                  "selfHeal": {
                                                    "type": "boolean",
                                                    "title": "SelfHeal specifies whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "managedNamespaceMetadata": {
                                                "type": "object",
                                                "properties": {
                                                  "annotations": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "labels": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "retry": {
                                                "type": "object",
                                                "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                                                "properties": {
                                                  "backoff": {
                                                    "type": "object",
                                                    "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                                                    "properties": {
                                                      "duration": {
                                                        "type": "string",
                                                        "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                                                      },
                                                      "factor": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "title": "Factor is a factor to multiply the base duration after each failed retry"
                                                      },
                                                      "maxDuration": {
                                                        "type": "string",
                                                        "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "limit": {
                                                    "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                                    "type": "integer",
                                                    "format": "int64"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "syncOptions": {
                                                "type": "array",
                                                "title": "Options allow you to specify whole app sync-options",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "values": {
                                    "description": "Values contains key/value pairs which are passed directly as parameters to the template. These values will not be\nsent as parameters to the plugin.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "pullRequest": {
                                "description": "PullRequestGenerator defines a generator that scrapes a PullRequest API to find candidate pull requests.",
                                "type": "object",
                                "properties": {
                                  "azuredevops": {
                                    "description": "PullRequestGeneratorAzureDevOps defines connection info specific to AzureDevOps.",
                                    "type": "object",
                                    "properties": {
                                      "api": {
                                        "description": "The Azure DevOps API URL to talk to. If blank, use https://dev.azure.com/.",
                                        "type": "string"
                                      },
                                      "labels": {
                                        "type": "array",
                                        "title": "Labels is used to filter the PRs that you want to target",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "organization": {
                                        "description": "Azure DevOps org to scan. Required.",
                                        "type": "string"
                                      },
                                      "project": {
                                        "description": "Azure DevOps project name to scan. Required.",
                                        "type": "string"
                                      },
                                      "repo": {
                                        "description": "Azure DevOps repo name to scan. Required.",
                                        "type": "string"
                                      },
                                      "tokenRef": {
                                        "description": "Utility struct for a reference to a secret key.",
                                        "type": "object",
                                        "properties": {
                                          "key": {
                                            "type": "string"
                                          },
                                          "secretName": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "bitbucket": {
                                    "description": "PullRequestGeneratorBitbucket defines connection info specific to Bitbucket.",
                                    "type": "object",
                                    "properties": {
                                      "api": {
                                        "description": "The Bitbucket REST API URL to talk to. If blank, uses https://api.bitbucket.org/2.0.",
                                        "type": "string"
                                      },
                                      "basicAuth": {
                                        "description": "BasicAuthBitbucketServer defines the username/(password or personal access token) for Basic auth.",
                                        "type": "object",
                                        "properties": {
                                          "passwordRef": {
                                            "description": "Utility struct for a reference to a secret key.",
                                            "type": "object",
                                            "properties": {
                                              "key": {
                                                "type": "string"
                                              },
                                              "secretName": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "username": {
                                            "type": "string",
                                            "title": "Username for Basic auth"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "bearerToken": {
                                        "description": "BearerTokenBitbucketCloud defines the Bearer token for BitBucket AppToken auth.",
                                        "type": "object",
                                        "properties": {
                                          "tokenRef": {
                                            "description": "Utility struct for a reference to a secret key.",
                                            "type": "object",
                                            "properties": {
                                              "key": {
                                                "type": "string"
                                              },
                                              "secretName": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "owner": {
                                        "description": "Workspace to scan. Required.",
                                        "type": "string"
                                      },
                                      "repo": {
                                        "description": "Repo name to scan. Required.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "bitbucketServer": {
                                    "description": "PullRequestGeneratorBitbucketServer defines connection info specific to BitbucketServer.",
                                    "type": "object",
                                    "properties": {
                                      "api": {
                                        "description": "The Bitbucket REST API URL to talk to e.g. https://bitbucket.org/rest Required.",
                                        "type": "string"
                                      },
                                      "basicAuth": {
                                        "description": "BasicAuthBitbucketServer defines the username/(password or personal access token) for Basic auth.",
                                        "type": "object",
                                        "properties": {
                                          "passwordRef": {
                                            "description": "Utility struct for a reference to a secret key.",
                                            "type": "object",
                                            "properties": {
                                              "key": {
                                                "type": "string"
                                              },
                                              "secretName": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "username": {
                                            "type": "string",
                                            "title": "Username for Basic auth"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "bearerToken": {
                                        "description": "BearerTokenBitbucket defines the Bearer token for BitBucket AppToken auth.",
                                        "type": "object",
                                        "properties": {
                                          "tokenRef": {
                                            "description": "Utility struct for a reference to a secret key.",
                                            "type": "object",
                                            "properties": {
                                              "key": {
                                                "type": "string"
                                              },
                                              "secretName": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "caRef": {
                                        "description": "Utility struct for a reference to a configmap key.",
                                        "type": "object",
                                        "properties": {
                                          "configMapName": {
                                            "type": "string"
                                          },
                                          "key": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "insecure": {
                                        "type": "boolean",
                                        "title": "Allow self-signed TLS / Certificates; default: false"
                                      },
                                      "project": {
                                        "description": "Project to scan. Required.",
                                        "type": "string"
                                      },
                                      "repo": {
                                        "description": "Repo name to scan. Required.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "continueOnRepoNotFoundError": {
                                    "description": "ContinueOnRepoNotFoundError is a flag to continue the ApplicationSet Pull Request generator parameters generation even if the repository is not found.",
                                    "type": "boolean"
                                  },
                                  "filters": {
                                    "description": "Filters for which pull requests should be considered.",
                                    "type": "array",
                                    "items": {
                                      "description": "PullRequestGeneratorFilter is a single pull request filter.\nIf multiple filter types are set on a single struct, they will be AND'd together. All filters must\npass for a pull request to be included.",
                                      "type": "object",
                                      "properties": {
                                        "branchMatch": {
                                          "type": "string"
                                        },
                                        "targetBranchMatch": {
                                          "type": "string"
                                        },
                                        "titleMatch": {
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "gitea": {
                                    "description": "PullRequestGeneratorGitea defines connection info specific to Gitea.",
                                    "type": "object",
                                    "properties": {
                                      "api": {
                                        "type": "string",
                                        "title": "The Gitea API URL to talk to. Required"
                                      },
                                      "insecure": {
                                        "description": "Allow insecure tls, for self-signed certificates; default: false.",
                                        "type": "boolean"
                                      },
                                      "labels": {
                                        "type": "array",
                                        "title": "Labels is used to filter the PRs that you want to target",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "owner": {
                                        "description": "Gitea org or user to scan. Required.",
                                        "type": "string"
                                      },
                                      "repo": {
                                        "description": "Gitea repo name to scan. Required.",
                                        "type": "string"
                                      },
                                      "tokenRef": {
                                        "description": "Utility struct for a reference to a secret key.",
                                        "type": "object",
                                        "properties": {
                                          "key": {
                                            "type": "string"
                                          },
                                          "secretName": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "github": {
                                    "description": "PullRequestGenerator defines connection info specific to GitHub.",
                                    "type": "object",
                                    "properties": {
                                      "api": {
                                        "description": "The GitHub API URL to talk to. If blank, use https://api.github.com/.",
                                        "type": "string"
                                      },
                                      "appSecretName": {
                                        "description": "AppSecretName is a reference to a GitHub App repo-creds secret with permission to access pull requests.",
                                        "type": "string"
                                      },
                                      "labels": {
                                        "type": "array",
                                        "title": "Labels is used to filter the PRs that you want to target",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "owner": {
                                        "description": "GitHub org or user to scan. Required.",
                                        "type": "string"
                                      },
                                      "repo": {
                                        "description": "GitHub repo name to scan. Required.",
                                        "type": "string"
                                      },
                                      "tokenRef": {
                                        "description": "Utility struct for a reference to a secret key.",
                                        "type": "object",
                                        "properties": {
                                          "key": {
                                            "type": "string"
                                          },
                                          "secretName": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "gitlab": {
                                    "description": "PullRequestGeneratorGitLab defines connection info specific to GitLab.",
                                    "type": "object",
                                    "properties": {
                                      "api": {
                                        "description": "The GitLab API URL to talk to. If blank, uses https://gitlab.com/.",
                                        "type": "string"
                                      },
                                      "caRef": {
                                        "description": "Utility struct for a reference to a configmap key.",
                                        "type": "object",
                                        "properties": {
                                          "configMapName": {
                                            "type": "string"
                                          },
                                          "key": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "insecure": {
                                        "type": "boolean",
                                        "title": "Skips validating the SCM provider's TLS certificate - useful for self-signed certificates.; default: false"
                                      },
                                      "labels": {
                                        "type": "array",
                                        "title": "Labels is used to filter the MRs that you want to target",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "project": {
                                        "description": "GitLab project to scan. Required.",
                                        "type": "string"
                                      },
                                      "pullRequestState": {
                                        "description": "PullRequestState is an additional MRs filter to get only those with a certain state. Default: \"\" (all states).\nValid values: opened, closed, merged, locked\".",
                                        "type": "string"
                                      },
                                      "tokenRef": {
                                        "description": "Utility struct for a reference to a secret key.",
                                        "type": "object",
                                        "properties": {
                                          "key": {
                                            "type": "string"
                                          },
                                          "secretName": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "requeueAfterSeconds": {
                                    "description": "Standard parameters.",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "template": {
                                    "type": "object",
                                    "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
                                    "properties": {
                                      "metadata": {
                                        "type": "object",
                                        "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
                                        "properties": {
                                          "annotations": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "finalizers": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "labels": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "namespace": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "spec": {
                                        "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
                                        "type": "object",
                                        "properties": {
                                          "destination": {
                                            "type": "object",
                                            "title": "ApplicationDestination holds information about the application's destination",
                                            "properties": {
                                              "name": {
                                                "description": "Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.",
                                                "type": "string"
                                              },
                                              "namespace": {
                                                "type": "string",
                                                "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                                              },
                                              "server": {
                                                "description": "Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "ignoreDifferences": {
                                            "type": "array",
                                            "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                                            "items": {
                                              "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                                              "type": "object",
                                              "properties": {
                                                "group": {
                                                  "type": "string"
                                                },
                                                "jqPathExpressions": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "jsonPointers": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "kind": {
                                                  "type": "string"
                                                },
                                                "managedFieldsManagers": {
                                                  "type": "array",
                                                  "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "name": {
                                                  "type": "string"
                                                },
                                                "namespace": {
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "info": {
                                            "type": "array",
                                            "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "project": {
                                            "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                                            "type": "string"
                                          },
                                          "revisionHistoryLimit": {
                                            "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                                            "type": "integer",
                                            "format": "int64"
                                          },
                                          "source": {
                                            "type": "object",
                                            "title": "ApplicationSource contains all required information about the source of an application",
                                            "properties": {
                                              "chart": {
                                                "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                                "type": "string"
                                              },
                                              "directory": {
                                                "type": "object",
                                                "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                                "properties": {
                                                  "exclude": {
                                                    "type": "string",
                                                    "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                                  },
                                                  "include": {
                                                    "type": "string",
                                                    "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                                  },
                                                  "jsonnet": {
                                                    "type": "object",
                                                    "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                                    "properties": {
                                                      "extVars": {
                                                        "type": "array",
                                                        "title": "ExtVars is a list of Jsonnet External Variables",
                                                        "items": {
                                                          "type": "object",
                                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                          "properties": {
                                                            "code": {
                                                              "type": "boolean"
                                                            },
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      },
                                                      "libs": {
                                                        "type": "array",
                                                        "title": "Additional library search dirs",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "tlas": {
                                                        "type": "array",
                                                        "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                        "items": {
                                                          "type": "object",
                                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                          "properties": {
                                                            "code": {
                                                              "type": "boolean"
                                                            },
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "recurse": {
                                                    "type": "boolean",
                                                    "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "helm": {
                                                "type": "object",
                                                "title": "ApplicationSourceHelm holds helm specific options",
                                                "properties": {
                                                  "apiVersions": {
                                                    "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "fileParameters": {
                                                    "type": "array",
                                                    "title": "FileParameters are file parameters to the helm template",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the Helm parameter"
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "title": "Path is the path to the file containing the values for the Helm parameter"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "ignoreMissingValueFiles": {
                                                    "type": "boolean",
                                                    "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                                  },
                                                  "kubeVersion": {
                                                    "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                    "type": "string"
                                                  },
                                                  "namespace": {
                                                    "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                                    "type": "string"
                                                  },
                                                  "parameters": {
                                                    "type": "array",
                                                    "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                                      "properties": {
                                                        "forceString": {
                                                          "type": "boolean",
                                                          "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the Helm parameter"
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "title": "Value is the value for the Helm parameter"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "passCredentials": {
                                                    "type": "boolean",
                                                    "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                                  },
                                                  "releaseName": {
                                                    "type": "string",
                                                    "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                                  },
                                                  "skipCrds": {
                                                    "type": "boolean",
                                                    "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                                  },
                                                  "skipSchemaValidation": {
                                                    "type": "boolean",
                                                    "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                                  },
                                                  "skipTests": {
                                                    "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                                    "type": "boolean"
                                                  },
                                                  "valueFiles": {
                                                    "type": "array",
                                                    "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "values": {
                                                    "type": "string",
                                                    "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                                  },
                                                  "valuesObject": {
                                                    "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                                    "type": "object",
                                                    "properties": {
                                                      "raw": {
                                                        "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                        "type": "string",
                                                        "format": "byte"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "version": {
                                                    "type": "string",
                                                    "title": "Version is the Helm version to use for templating (\"3\")"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "kustomize": {
                                                "type": "object",
                                                "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                                "properties": {
                                                  "apiVersions": {
                                                    "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "commonAnnotations": {
                                                    "type": "object",
                                                    "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "commonAnnotationsEnvsubst": {
                                                    "type": "boolean",
                                                    "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                                  },
                                                  "commonLabels": {
                                                    "type": "object",
                                                    "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "components": {
                                                    "type": "array",
                                                    "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "forceCommonAnnotations": {
                                                    "type": "boolean",
                                                    "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                                  },
                                                  "forceCommonLabels": {
                                                    "type": "boolean",
                                                    "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                                  },
                                                  "ignoreMissingComponents": {
                                                    "type": "boolean",
                                                    "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                                  },
                                                  "images": {
                                                    "type": "array",
                                                    "title": "Images is a list of Kustomize image override specifications",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "kubeVersion": {
                                                    "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                    "type": "string"
                                                  },
                                                  "labelIncludeTemplates": {
                                                    "type": "boolean",
                                                    "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                                  },
                                                  "labelWithoutSelector": {
                                                    "type": "boolean",
                                                    "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                                  },
                                                  "namePrefix": {
                                                    "type": "string",
                                                    "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                                  },
                                                  "nameSuffix": {
                                                    "type": "string",
                                                    "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                                  },
                                                  "namespace": {
                                                    "type": "string",
                                                    "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                                  },
                                                  "patches": {
                                                    "type": "array",
                                                    "title": "Patches is a list of Kustomize patches",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "options": {
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "type": "boolean"
                                                          }
                                                        },
                                                        "patch": {
                                                          "type": "string"
                                                        },
                                                        "path": {
                                                          "type": "string"
                                                        },
                                                        "target": {
                                                          "type": "object",
                                                          "properties": {
                                                            "annotationSelector": {
                                                              "type": "string"
                                                            },
                                                            "labelSelector": {
                                                              "type": "string"
                                                            },
                                                            "resId": {
                                                              "type": "object",
                                                              "properties": {
                                                                "gvk": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "group": {
                                                                      "type": "string"
                                                                    },
                                                                    "kind": {
                                                                      "type": "string"
                                                                    },
                                                                    "version": {
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "additionalProperties": false
                                                                },
                                                                "name": {
                                                                  "type": "string"
                                                                },
                                                                "namespace": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "additionalProperties": false
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "replicas": {
                                                    "type": "array",
                                                    "title": "Replicas is a list of Kustomize Replicas override specifications",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "count": {
                                                          "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                          "type": "object",
                                                          "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                          "properties": {
                                                            "intVal": {
                                                              "type": "integer",
                                                              "format": "int32"
                                                            },
                                                            "strVal": {
                                                              "type": "string"
                                                            },
                                                            "type": {
                                                              "type": "integer",
                                                              "format": "int64"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name of Deployment or StatefulSet"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "version": {
                                                    "type": "string",
                                                    "title": "Version controls which version of Kustomize to use for rendering manifests"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "name": {
                                                "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                                "type": "string"
                                              },
                                              "path": {
                                                "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                                "type": "string"
                                              },
                                              "plugin": {
                                                "type": "object",
                                                "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                                "properties": {
                                                  "env": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "EnvEntry represents an entry in the application's environment",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the variable, usually expressed in uppercase"
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "title": "Value is the value of the variable"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "parameters": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "array": {
                                                          "description": "Array is the value of an array type parameter.",
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "map": {
                                                          "description": "Map is the value of a map type parameter.",
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "name": {
                                                          "description": "Name is the name identifying a parameter.",
                                                          "type": "string"
                                                        },
                                                        "string": {
                                                          "description": "String_ is the value of a string type parameter.",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "ref": {
                                                "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                                "type": "string"
                                              },
                                              "repoURL": {
                                                "type": "string",
                                                "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                              },
                                              "targetRevision": {
                                                "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "sourceHydrator": {
                                            "description": "SourceHydrator specifies a dry \"don't repeat yourself\" source for manifests, a sync source from which to sync\nhydrated manifests, and an optional hydrateTo location to act as a \"staging\" aread for hydrated manifests.",
                                            "type": "object",
                                            "properties": {
                                              "drySource": {
                                                "description": "DrySource specifies a location for dry \"don't repeat yourself\" manifest source information.",
                                                "type": "object",
                                                "properties": {
                                                  "path": {
                                                    "type": "string",
                                                    "title": "Path is a directory path within the Git repository where the manifests are located"
                                                  },
                                                  "repoURL": {
                                                    "type": "string",
                                                    "title": "RepoURL is the URL to the git repository that contains the application manifests"
                                                  },
                                                  "targetRevision": {
                                                    "type": "string",
                                                    "title": "TargetRevision defines the revision of the source to hydrate"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "hydrateTo": {
                                                "description": "HydrateTo specifies a location to which hydrated manifests should be pushed as a \"staging area\" before being moved to\nthe SyncSource. The RepoURL and Path are assumed based on the associated SyncSource config in the SourceHydrator.",
                                                "type": "object",
                                                "properties": {
                                                  "targetBranch": {
                                                    "type": "string",
                                                    "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "syncSource": {
                                                "description": "SyncSource specifies a location from which hydrated manifests may be synced. RepoURL is assumed based on the\nassociated DrySource config in the SourceHydrator.",
                                                "type": "object",
                                                "properties": {
                                                  "path": {
                                                    "description": "Path is a directory path within the git repository where hydrated manifests should be committed to and synced\nfrom. If hydrateTo is set, this is just the path from which hydrated manifests will be synced.",
                                                    "type": "string"
                                                  },
                                                  "targetBranch": {
                                                    "type": "string",
                                                    "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "sources": {
                                            "type": "array",
                                            "title": "Sources is a reference to the location of the application's manifests or chart",
                                            "items": {
                                              "type": "object",
                                              "title": "ApplicationSource contains all required information about the source of an application",
                                              "properties": {
                                                "chart": {
                                                  "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                                  "type": "string"
                                                },
                                                "directory": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                                  "properties": {
                                                    "exclude": {
                                                      "type": "string",
                                                      "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                                    },
                                                    "include": {
                                                      "type": "string",
                                                      "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                                    },
                                                    "jsonnet": {
                                                      "type": "object",
                                                      "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                                      "properties": {
                                                        "extVars": {
                                                          "type": "array",
                                                          "title": "ExtVars is a list of Jsonnet External Variables",
                                                          "items": {
                                                            "type": "object",
                                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                            "properties": {
                                                              "code": {
                                                                "type": "boolean"
                                                              },
                                                              "name": {
                                                                "type": "string"
                                                              },
                                                              "value": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        },
                                                        "libs": {
                                                          "type": "array",
                                                          "title": "Additional library search dirs",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "tlas": {
                                                          "type": "array",
                                                          "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                          "items": {
                                                            "type": "object",
                                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                            "properties": {
                                                              "code": {
                                                                "type": "boolean"
                                                              },
                                                              "name": {
                                                                "type": "string"
                                                              },
                                                              "value": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    },
                                                    "recurse": {
                                                      "type": "boolean",
                                                      "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "helm": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceHelm holds helm specific options",
                                                  "properties": {
                                                    "apiVersions": {
                                                      "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "fileParameters": {
                                                      "type": "array",
                                                      "title": "FileParameters are file parameters to the helm template",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the Helm parameter"
                                                          },
                                                          "path": {
                                                            "type": "string",
                                                            "title": "Path is the path to the file containing the values for the Helm parameter"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "ignoreMissingValueFiles": {
                                                      "type": "boolean",
                                                      "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                                    },
                                                    "kubeVersion": {
                                                      "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                      "type": "string"
                                                    },
                                                    "namespace": {
                                                      "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                                      "type": "string"
                                                    },
                                                    "parameters": {
                                                      "type": "array",
                                                      "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                                        "properties": {
                                                          "forceString": {
                                                            "type": "boolean",
                                                            "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                          },
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the Helm parameter"
                                                          },
                                                          "value": {
                                                            "type": "string",
                                                            "title": "Value is the value for the Helm parameter"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "passCredentials": {
                                                      "type": "boolean",
                                                      "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                                    },
                                                    "releaseName": {
                                                      "type": "string",
                                                      "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                                    },
                                                    "skipCrds": {
                                                      "type": "boolean",
                                                      "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                                    },
                                                    "skipSchemaValidation": {
                                                      "type": "boolean",
                                                      "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                                    },
                                                    "skipTests": {
                                                      "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                                      "type": "boolean"
                                                    },
                                                    "valueFiles": {
                                                      "type": "array",
                                                      "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "values": {
                                                      "type": "string",
                                                      "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                                    },
                                                    "valuesObject": {
                                                      "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                                      "type": "object",
                                                      "properties": {
                                                        "raw": {
                                                          "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                          "type": "string",
                                                          "format": "byte"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    },
                                                    "version": {
                                                      "type": "string",
                                                      "title": "Version is the Helm version to use for templating (\"3\")"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "kustomize": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                                  "properties": {
                                                    "apiVersions": {
                                                      "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "commonAnnotations": {
                                                      "type": "object",
                                                      "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                                      "additionalProperties": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "commonAnnotationsEnvsubst": {
                                                      "type": "boolean",
                                                      "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                                    },
                                                    "commonLabels": {
                                                      "type": "object",
                                                      "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                                      "additionalProperties": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "components": {
                                                      "type": "array",
                                                      "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "forceCommonAnnotations": {
                                                      "type": "boolean",
                                                      "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                                    },
                                                    "forceCommonLabels": {
                                                      "type": "boolean",
                                                      "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                                    },
                                                    "ignoreMissingComponents": {
                                                      "type": "boolean",
                                                      "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                                    },
                                                    "images": {
                                                      "type": "array",
                                                      "title": "Images is a list of Kustomize image override specifications",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "kubeVersion": {
                                                      "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                      "type": "string"
                                                    },
                                                    "labelIncludeTemplates": {
                                                      "type": "boolean",
                                                      "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                                    },
                                                    "labelWithoutSelector": {
                                                      "type": "boolean",
                                                      "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                                    },
                                                    "namePrefix": {
                                                      "type": "string",
                                                      "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                                    },
                                                    "nameSuffix": {
                                                      "type": "string",
                                                      "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                                    },
                                                    "namespace": {
                                                      "type": "string",
                                                      "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                                    },
                                                    "patches": {
                                                      "type": "array",
                                                      "title": "Patches is a list of Kustomize patches",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "options": {
                                                            "type": "object",
                                                            "additionalProperties": {
                                                              "type": "boolean"
                                                            }
                                                          },
                                                          "patch": {
                                                            "type": "string"
                                                          },
                                                          "path": {
                                                            "type": "string"
                                                          },
                                                          "target": {
                                                            "type": "object",
                                                            "properties": {
                                                              "annotationSelector": {
                                                                "type": "string"
                                                              },
                                                              "labelSelector": {
                                                                "type": "string"
                                                              },
                                                              "resId": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "gvk": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "group": {
                                                                        "type": "string"
                                                                      },
                                                                      "kind": {
                                                                        "type": "string"
                                                                      },
                                                                      "version": {
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "additionalProperties": false
                                                                  },
                                                                  "name": {
                                                                    "type": "string"
                                                                  },
                                                                  "namespace": {
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "additionalProperties": false
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "replicas": {
                                                      "type": "array",
                                                      "title": "Replicas is a list of Kustomize Replicas override specifications",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "count": {
                                                            "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                            "type": "object",
                                                            "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                            "properties": {
                                                              "intVal": {
                                                                "type": "integer",
                                                                "format": "int32"
                                                              },
                                                              "strVal": {
                                                                "type": "string"
                                                              },
                                                              "type": {
                                                                "type": "integer",
                                                                "format": "int64"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          },
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name of Deployment or StatefulSet"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "version": {
                                                      "type": "string",
                                                      "title": "Version controls which version of Kustomize to use for rendering manifests"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "name": {
                                                  "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                                  "type": "string"
                                                },
                                                "path": {
                                                  "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                                  "type": "string"
                                                },
                                                "plugin": {
                                                  "type": "object",
                                                  "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                                  "properties": {
                                                    "env": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "EnvEntry represents an entry in the application's environment",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the variable, usually expressed in uppercase"
                                                          },
                                                          "value": {
                                                            "type": "string",
                                                            "title": "Value is the value of the variable"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "parameters": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "array": {
                                                            "description": "Array is the value of an array type parameter.",
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "map": {
                                                            "description": "Map is the value of a map type parameter.",
                                                            "type": "object",
                                                            "additionalProperties": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "name": {
                                                            "description": "Name is the name identifying a parameter.",
                                                            "type": "string"
                                                          },
                                                          "string": {
                                                            "description": "String_ is the value of a string type parameter.",
                                                            "type": "string"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "ref": {
                                                  "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                                  "type": "string"
                                                },
                                                "repoURL": {
                                                  "type": "string",
                                                  "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                                },
                                                "targetRevision": {
                                                  "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "syncPolicy": {
                                            "type": "object",
                                            "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                                            "properties": {
                                              "automated": {
                                                "type": "object",
                                                "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                                                "properties": {
                                                  "allowEmpty": {
                                                    "type": "boolean",
                                                    "title": "AllowEmpty allows apps have zero live resources (default: false)"
                                                  },
                                                  "enable": {
                                                    "type": "boolean",
                                                    "title": "Enable allows apps to explicitly control automated sync"
                                                  },
                                                  "prune": {
                                                    "type": "boolean",
                                                    "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                                                  },
                                                  "selfHeal": {
                                                    "type": "boolean",
                                                    "title": "SelfHeal specifies whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "managedNamespaceMetadata": {
                                                "type": "object",
                                                "properties": {
                                                  "annotations": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "labels": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "retry": {
                                                "type": "object",
                                                "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                                                "properties": {
                                                  "backoff": {
                                                    "type": "object",
                                                    "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                                                    "properties": {
                                                      "duration": {
                                                        "type": "string",
                                                        "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                                                      },
                                                      "factor": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "title": "Factor is a factor to multiply the base duration after each failed retry"
                                                      },
                                                      "maxDuration": {
                                                        "type": "string",
                                                        "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "limit": {
                                                    "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                                    "type": "integer",
                                                    "format": "int64"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "syncOptions": {
                                                "type": "array",
                                                "title": "Options allow you to specify whole app sync-options",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "values": {
                                    "type": "object",
                                    "title": "Values contains key/value pairs which are passed directly as parameters to the template",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "scmProvider": {
                                "description": "SCMProviderGenerator defines a generator that scrapes a SCMaaS API to find candidate repos.",
                                "type": "object",
                                "properties": {
                                  "awsCodeCommit": {
                                    "description": "SCMProviderGeneratorAWSCodeCommit defines connection info specific to AWS CodeCommit.",
                                    "type": "object",
                                    "properties": {
                                      "allBranches": {
                                        "description": "Scan all branches instead of just the default branch.",
                                        "type": "boolean"
                                      },
                                      "region": {
                                        "description": "Region provides the AWS region to discover repos.\nif not provided, AppSet controller will infer the current region from environment.",
                                        "type": "string"
                                      },
                                      "role": {
                                        "description": "Role provides the AWS IAM role to assume, for cross-account repo discovery\nif not provided, AppSet controller will use its pod/node identity to discover.",
                                        "type": "string"
                                      },
                                      "tagFilters": {
                                        "type": "array",
                                        "title": "TagFilters provides the tag filter(s) for repo discovery",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "key": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "azureDevOps": {
                                    "description": "SCMProviderGeneratorAzureDevOps defines connection info specific to Azure DevOps.",
                                    "type": "object",
                                    "properties": {
                                      "accessTokenRef": {
                                        "description": "Utility struct for a reference to a secret key.",
                                        "type": "object",
                                        "properties": {
                                          "key": {
                                            "type": "string"
                                          },
                                          "secretName": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "allBranches": {
                                        "description": "Scan all branches instead of just the default branch.",
                                        "type": "boolean"
                                      },
                                      "api": {
                                        "description": "The URL to Azure DevOps. If blank, use https://dev.azure.com.",
                                        "type": "string"
                                      },
                                      "organization": {
                                        "description": "Azure Devops organization. Required. E.g. \"my-organization\".",
                                        "type": "string"
                                      },
                                      "teamProject": {
                                        "description": "Azure Devops team project. Required. E.g. \"my-team\".",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "bitbucket": {
                                    "description": "SCMProviderGeneratorBitbucket defines connection info specific to Bitbucket Cloud (API version 2).",
                                    "type": "object",
                                    "properties": {
                                      "allBranches": {
                                        "description": "Scan all branches instead of just the main branch.",
                                        "type": "boolean"
                                      },
                                      "appPasswordRef": {
                                        "description": "Utility struct for a reference to a secret key.",
                                        "type": "object",
                                        "properties": {
                                          "key": {
                                            "type": "string"
                                          },
                                          "secretName": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "owner": {
                                        "description": "Bitbucket workspace to scan. Required.",
                                        "type": "string"
                                      },
                                      "user": {
                                        "type": "string",
                                        "title": "Bitbucket user to use when authenticating.  Should have a \"member\" role to be able to read all repositories and branches.  Required"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "bitbucketServer": {
                                    "description": "SCMProviderGeneratorBitbucketServer defines connection info specific to Bitbucket Server.",
                                    "type": "object",
                                    "properties": {
                                      "allBranches": {
                                        "description": "Scan all branches instead of just the default branch.",
                                        "type": "boolean"
                                      },
                                      "api": {
                                        "description": "The Bitbucket Server REST API URL to talk to. Required.",
                                        "type": "string"
                                      },
                                      "basicAuth": {
                                        "description": "BasicAuthBitbucketServer defines the username/(password or personal access token) for Basic auth.",
                                        "type": "object",
                                        "properties": {
                                          "passwordRef": {
                                            "description": "Utility struct for a reference to a secret key.",
                                            "type": "object",
                                            "properties": {
                                              "key": {
                                                "type": "string"
                                              },
                                              "secretName": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "username": {
                                            "type": "string",
                                            "title": "Username for Basic auth"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "bearerToken": {
                                        "description": "BearerTokenBitbucket defines the Bearer token for BitBucket AppToken auth.",
                                        "type": "object",
                                        "properties": {
                                          "tokenRef": {
                                            "description": "Utility struct for a reference to a secret key.",
                                            "type": "object",
                                            "properties": {
                                              "key": {
                                                "type": "string"
                                              },
                                              "secretName": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "caRef": {
                                        "description": "Utility struct for a reference to a configmap key.",
                                        "type": "object",
                                        "properties": {
                                          "configMapName": {
                                            "type": "string"
                                          },
                                          "key": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "insecure": {
                                        "type": "boolean",
                                        "title": "Allow self-signed TLS / Certificates; default: false"
                                      },
                                      "project": {
                                        "description": "Project to scan. Required.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "cloneProtocol": {
                                    "description": "Which protocol to use for the SCM URL. Default is provider-specific but ssh if possible. Not all providers\nnecessarily support all protocols.",
                                    "type": "string"
                                  },
                                  "filters": {
                                    "description": "Filters for which repos should be considered.",
                                    "type": "array",
                                    "items": {
                                      "description": "SCMProviderGeneratorFilter is a single repository filter.\nIf multiple filter types are set on a single struct, they will be AND'd together. All filters must\npass for a repo to be included.",
                                      "type": "object",
                                      "properties": {
                                        "branchMatch": {
                                          "description": "A regex which must match the branch name.",
                                          "type": "string"
                                        },
                                        "labelMatch": {
                                          "description": "A regex which must match at least one label.",
                                          "type": "string"
                                        },
                                        "pathsDoNotExist": {
                                          "description": "An array of paths, all of which must not exist.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "pathsExist": {
                                          "description": "An array of paths, all of which must exist.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "repositoryMatch": {
                                          "description": "A regex for repo names.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "gitea": {
                                    "description": "SCMProviderGeneratorGitea defines a connection info specific to Gitea.",
                                    "type": "object",
                                    "properties": {
                                      "allBranches": {
                                        "description": "Scan all branches instead of just the default branch.",
                                        "type": "boolean"
                                      },
                                      "api": {
                                        "description": "The Gitea URL to talk to. For example https://gitea.mydomain.com/.",
                                        "type": "string"
                                      },
                                      "insecure": {
                                        "type": "boolean",
                                        "title": "Allow self-signed TLS / Certificates; default: false"
                                      },
                                      "owner": {
                                        "description": "Gitea organization or user to scan. Required.",
                                        "type": "string"
                                      },
                                      "tokenRef": {
                                        "description": "Utility struct for a reference to a secret key.",
                                        "type": "object",
                                        "properties": {
                                          "key": {
                                            "type": "string"
                                          },
                                          "secretName": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "github": {
                                    "description": "SCMProviderGeneratorGithub defines connection info specific to GitHub.",
                                    "type": "object",
                                    "properties": {
                                      "allBranches": {
                                        "description": "Scan all branches instead of just the default branch.",
                                        "type": "boolean"
                                      },
                                      "api": {
                                        "description": "The GitHub API URL to talk to. If blank, use https://api.github.com/.",
                                        "type": "string"
                                      },
                                      "appSecretName": {
                                        "description": "AppSecretName is a reference to a GitHub App repo-creds secret.",
                                        "type": "string"
                                      },
                                      "organization": {
                                        "description": "GitHub org to scan. Required.",
                                        "type": "string"
                                      },
                                      "tokenRef": {
                                        "description": "Utility struct for a reference to a secret key.",
                                        "type": "object",
                                        "properties": {
                                          "key": {
                                            "type": "string"
                                          },
                                          "secretName": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "gitlab": {
                                    "description": "SCMProviderGeneratorGitlab defines connection info specific to Gitlab.",
                                    "type": "object",
                                    "properties": {
                                      "allBranches": {
                                        "description": "Scan all branches instead of just the default branch.",
                                        "type": "boolean"
                                      },
                                      "api": {
                                        "description": "The Gitlab API URL to talk to.",
                                        "type": "string"
                                      },
                                      "caRef": {
                                        "description": "Utility struct for a reference to a configmap key.",
                                        "type": "object",
                                        "properties": {
                                          "configMapName": {
                                            "type": "string"
                                          },
                                          "key": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "group": {
                                        "description": "Gitlab group to scan. Required.  You can use either the project id (recommended) or the full namespaced path.",
                                        "type": "string"
                                      },
                                      "includeSharedProjects": {
                                        "type": "boolean",
                                        "title": "When recursing through subgroups, also include shared Projects (true) or scan only the subgroups under same path (false).  Defaults to \"true\""
                                      },
                                      "includeSubgroups": {
                                        "type": "boolean",
                                        "title": "Recurse through subgroups (true) or scan only the base group (false).  Defaults to \"false\""
                                      },
                                      "insecure": {
                                        "type": "boolean",
                                        "title": "Skips validating the SCM provider's TLS certificate - useful for self-signed certificates.; default: false"
                                      },
                                      "tokenRef": {
                                        "description": "Utility struct for a reference to a secret key.",
                                        "type": "object",
                                        "properties": {
                                          "key": {
                                            "type": "string"
                                          },
                                          "secretName": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "topic": {
                                        "description": "Filter repos list based on Gitlab Topic.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "requeueAfterSeconds": {
                                    "description": "Standard parameters.",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "template": {
                                    "type": "object",
                                    "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
                                    "properties": {
                                      "metadata": {
                                        "type": "object",
                                        "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
                                        "properties": {
                                          "annotations": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "finalizers": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "labels": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "namespace": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "spec": {
                                        "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
                                        "type": "object",
                                        "properties": {
                                          "destination": {
                                            "type": "object",
                                            "title": "ApplicationDestination holds information about the application's destination",
                                            "properties": {
                                              "name": {
                                                "description": "Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.",
                                                "type": "string"
                                              },
                                              "namespace": {
                                                "type": "string",
                                                "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                                              },
                                              "server": {
                                                "description": "Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "ignoreDifferences": {
                                            "type": "array",
                                            "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                                            "items": {
                                              "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                                              "type": "object",
                                              "properties": {
                                                "group": {
                                                  "type": "string"
                                                },
                                                "jqPathExpressions": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "jsonPointers": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "kind": {
                                                  "type": "string"
                                                },
                                                "managedFieldsManagers": {
                                                  "type": "array",
                                                  "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "name": {
                                                  "type": "string"
                                                },
                                                "namespace": {
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "info": {
                                            "type": "array",
                                            "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "project": {
                                            "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                                            "type": "string"
                                          },
                                          "revisionHistoryLimit": {
                                            "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                                            "type": "integer",
                                            "format": "int64"
                                          },
                                          "source": {
                                            "type": "object",
                                            "title": "ApplicationSource contains all required information about the source of an application",
                                            "properties": {
                                              "chart": {
                                                "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                                "type": "string"
                                              },
                                              "directory": {
                                                "type": "object",
                                                "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                                "properties": {
                                                  "exclude": {
                                                    "type": "string",
                                                    "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                                  },
                                                  "include": {
                                                    "type": "string",
                                                    "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                                  },
                                                  "jsonnet": {
                                                    "type": "object",
                                                    "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                                    "properties": {
                                                      "extVars": {
                                                        "type": "array",
                                                        "title": "ExtVars is a list of Jsonnet External Variables",
                                                        "items": {
                                                          "type": "object",
                                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                          "properties": {
                                                            "code": {
                                                              "type": "boolean"
                                                            },
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      },
                                                      "libs": {
                                                        "type": "array",
                                                        "title": "Additional library search dirs",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "tlas": {
                                                        "type": "array",
                                                        "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                        "items": {
                                                          "type": "object",
                                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                          "properties": {
                                                            "code": {
                                                              "type": "boolean"
                                                            },
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "recurse": {
                                                    "type": "boolean",
                                                    "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "helm": {
                                                "type": "object",
                                                "title": "ApplicationSourceHelm holds helm specific options",
                                                "properties": {
                                                  "apiVersions": {
                                                    "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "fileParameters": {
                                                    "type": "array",
                                                    "title": "FileParameters are file parameters to the helm template",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the Helm parameter"
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "title": "Path is the path to the file containing the values for the Helm parameter"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "ignoreMissingValueFiles": {
                                                    "type": "boolean",
                                                    "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                                  },
                                                  "kubeVersion": {
                                                    "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                    "type": "string"
                                                  },
                                                  "namespace": {
                                                    "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                                    "type": "string"
                                                  },
                                                  "parameters": {
                                                    "type": "array",
                                                    "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                                      "properties": {
                                                        "forceString": {
                                                          "type": "boolean",
                                                          "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the Helm parameter"
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "title": "Value is the value for the Helm parameter"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "passCredentials": {
                                                    "type": "boolean",
                                                    "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                                  },
                                                  "releaseName": {
                                                    "type": "string",
                                                    "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                                  },
                                                  "skipCrds": {
                                                    "type": "boolean",
                                                    "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                                  },
                                                  "skipSchemaValidation": {
                                                    "type": "boolean",
                                                    "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                                  },
                                                  "skipTests": {
                                                    "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                                    "type": "boolean"
                                                  },
                                                  "valueFiles": {
                                                    "type": "array",
                                                    "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "values": {
                                                    "type": "string",
                                                    "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                                  },
                                                  "valuesObject": {
                                                    "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                                    "type": "object",
                                                    "properties": {
                                                      "raw": {
                                                        "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                        "type": "string",
                                                        "format": "byte"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "version": {
                                                    "type": "string",
                                                    "title": "Version is the Helm version to use for templating (\"3\")"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "kustomize": {
                                                "type": "object",
                                                "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                                "properties": {
                                                  "apiVersions": {
                                                    "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "commonAnnotations": {
                                                    "type": "object",
                                                    "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "commonAnnotationsEnvsubst": {
                                                    "type": "boolean",
                                                    "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                                  },
                                                  "commonLabels": {
                                                    "type": "object",
                                                    "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "components": {
                                                    "type": "array",
                                                    "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "forceCommonAnnotations": {
                                                    "type": "boolean",
                                                    "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                                  },
                                                  "forceCommonLabels": {
                                                    "type": "boolean",
                                                    "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                                  },
                                                  "ignoreMissingComponents": {
                                                    "type": "boolean",
                                                    "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                                  },
                                                  "images": {
                                                    "type": "array",
                                                    "title": "Images is a list of Kustomize image override specifications",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "kubeVersion": {
                                                    "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                    "type": "string"
                                                  },
                                                  "labelIncludeTemplates": {
                                                    "type": "boolean",
                                                    "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                                  },
                                                  "labelWithoutSelector": {
                                                    "type": "boolean",
                                                    "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                                  },
                                                  "namePrefix": {
                                                    "type": "string",
                                                    "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                                  },
                                                  "nameSuffix": {
                                                    "type": "string",
                                                    "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                                  },
                                                  "namespace": {
                                                    "type": "string",
                                                    "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                                  },
                                                  "patches": {
                                                    "type": "array",
                                                    "title": "Patches is a list of Kustomize patches",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "options": {
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "type": "boolean"
                                                          }
                                                        },
                                                        "patch": {
                                                          "type": "string"
                                                        },
                                                        "path": {
                                                          "type": "string"
                                                        },
                                                        "target": {
                                                          "type": "object",
                                                          "properties": {
                                                            "annotationSelector": {
                                                              "type": "string"
                                                            },
                                                            "labelSelector": {
                                                              "type": "string"
                                                            },
                                                            "resId": {
                                                              "type": "object",
                                                              "properties": {
                                                                "gvk": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "group": {
                                                                      "type": "string"
                                                                    },
                                                                    "kind": {
                                                                      "type": "string"
                                                                    },
                                                                    "version": {
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "additionalProperties": false
                                                                },
                                                                "name": {
                                                                  "type": "string"
                                                                },
                                                                "namespace": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "additionalProperties": false
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "replicas": {
                                                    "type": "array",
                                                    "title": "Replicas is a list of Kustomize Replicas override specifications",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "count": {
                                                          "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                          "type": "object",
                                                          "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                          "properties": {
                                                            "intVal": {
                                                              "type": "integer",
                                                              "format": "int32"
                                                            },
                                                            "strVal": {
                                                              "type": "string"
                                                            },
                                                            "type": {
                                                              "type": "integer",
                                                              "format": "int64"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name of Deployment or StatefulSet"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "version": {
                                                    "type": "string",
                                                    "title": "Version controls which version of Kustomize to use for rendering manifests"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "name": {
                                                "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                                "type": "string"
                                              },
                                              "path": {
                                                "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                                "type": "string"
                                              },
                                              "plugin": {
                                                "type": "object",
                                                "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                                "properties": {
                                                  "env": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "EnvEntry represents an entry in the application's environment",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name is the name of the variable, usually expressed in uppercase"
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "title": "Value is the value of the variable"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "parameters": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "array": {
                                                          "description": "Array is the value of an array type parameter.",
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "map": {
                                                          "description": "Map is the value of a map type parameter.",
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "name": {
                                                          "description": "Name is the name identifying a parameter.",
                                                          "type": "string"
                                                        },
                                                        "string": {
                                                          "description": "String_ is the value of a string type parameter.",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "ref": {
                                                "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                                "type": "string"
                                              },
                                              "repoURL": {
                                                "type": "string",
                                                "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                              },
                                              "targetRevision": {
                                                "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "sourceHydrator": {
                                            "description": "SourceHydrator specifies a dry \"don't repeat yourself\" source for manifests, a sync source from which to sync\nhydrated manifests, and an optional hydrateTo location to act as a \"staging\" aread for hydrated manifests.",
                                            "type": "object",
                                            "properties": {
                                              "drySource": {
                                                "description": "DrySource specifies a location for dry \"don't repeat yourself\" manifest source information.",
                                                "type": "object",
                                                "properties": {
                                                  "path": {
                                                    "type": "string",
                                                    "title": "Path is a directory path within the Git repository where the manifests are located"
                                                  },
                                                  "repoURL": {
                                                    "type": "string",
                                                    "title": "RepoURL is the URL to the git repository that contains the application manifests"
                                                  },
                                                  "targetRevision": {
                                                    "type": "string",
                                                    "title": "TargetRevision defines the revision of the source to hydrate"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "hydrateTo": {
                                                "description": "HydrateTo specifies a location to which hydrated manifests should be pushed as a \"staging area\" before being moved to\nthe SyncSource. The RepoURL and Path are assumed based on the associated SyncSource config in the SourceHydrator.",
                                                "type": "object",
                                                "properties": {
                                                  "targetBranch": {
                                                    "type": "string",
                                                    "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "syncSource": {
                                                "description": "SyncSource specifies a location from which hydrated manifests may be synced. RepoURL is assumed based on the\nassociated DrySource config in the SourceHydrator.",
                                                "type": "object",
                                                "properties": {
                                                  "path": {
                                                    "description": "Path is a directory path within the git repository where hydrated manifests should be committed to and synced\nfrom. If hydrateTo is set, this is just the path from which hydrated manifests will be synced.",
                                                    "type": "string"
                                                  },
                                                  "targetBranch": {
                                                    "type": "string",
                                                    "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "sources": {
                                            "type": "array",
                                            "title": "Sources is a reference to the location of the application's manifests or chart",
                                            "items": {
                                              "type": "object",
                                              "title": "ApplicationSource contains all required information about the source of an application",
                                              "properties": {
                                                "chart": {
                                                  "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                                  "type": "string"
                                                },
                                                "directory": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                                  "properties": {
                                                    "exclude": {
                                                      "type": "string",
                                                      "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                                    },
                                                    "include": {
                                                      "type": "string",
                                                      "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                                    },
                                                    "jsonnet": {
                                                      "type": "object",
                                                      "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                                      "properties": {
                                                        "extVars": {
                                                          "type": "array",
                                                          "title": "ExtVars is a list of Jsonnet External Variables",
                                                          "items": {
                                                            "type": "object",
                                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                            "properties": {
                                                              "code": {
                                                                "type": "boolean"
                                                              },
                                                              "name": {
                                                                "type": "string"
                                                              },
                                                              "value": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        },
                                                        "libs": {
                                                          "type": "array",
                                                          "title": "Additional library search dirs",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "tlas": {
                                                          "type": "array",
                                                          "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                          "items": {
                                                            "type": "object",
                                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                            "properties": {
                                                              "code": {
                                                                "type": "boolean"
                                                              },
                                                              "name": {
                                                                "type": "string"
                                                              },
                                                              "value": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    },
                                                    "recurse": {
                                                      "type": "boolean",
                                                      "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "helm": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceHelm holds helm specific options",
                                                  "properties": {
                                                    "apiVersions": {
                                                      "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "fileParameters": {
                                                      "type": "array",
                                                      "title": "FileParameters are file parameters to the helm template",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the Helm parameter"
                                                          },
                                                          "path": {
                                                            "type": "string",
                                                            "title": "Path is the path to the file containing the values for the Helm parameter"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "ignoreMissingValueFiles": {
                                                      "type": "boolean",
                                                      "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                                    },
                                                    "kubeVersion": {
                                                      "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                      "type": "string"
                                                    },
                                                    "namespace": {
                                                      "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                                      "type": "string"
                                                    },
                                                    "parameters": {
                                                      "type": "array",
                                                      "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                                        "properties": {
                                                          "forceString": {
                                                            "type": "boolean",
                                                            "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                          },
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the Helm parameter"
                                                          },
                                                          "value": {
                                                            "type": "string",
                                                            "title": "Value is the value for the Helm parameter"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "passCredentials": {
                                                      "type": "boolean",
                                                      "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                                    },
                                                    "releaseName": {
                                                      "type": "string",
                                                      "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                                    },
                                                    "skipCrds": {
                                                      "type": "boolean",
                                                      "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                                    },
                                                    "skipSchemaValidation": {
                                                      "type": "boolean",
                                                      "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                                    },
                                                    "skipTests": {
                                                      "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                                      "type": "boolean"
                                                    },
                                                    "valueFiles": {
                                                      "type": "array",
                                                      "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "values": {
                                                      "type": "string",
                                                      "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                                    },
                                                    "valuesObject": {
                                                      "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                                      "type": "object",
                                                      "properties": {
                                                        "raw": {
                                                          "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                          "type": "string",
                                                          "format": "byte"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    },
                                                    "version": {
                                                      "type": "string",
                                                      "title": "Version is the Helm version to use for templating (\"3\")"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "kustomize": {
                                                  "type": "object",
                                                  "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                                  "properties": {
                                                    "apiVersions": {
                                                      "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "commonAnnotations": {
                                                      "type": "object",
                                                      "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                                      "additionalProperties": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "commonAnnotationsEnvsubst": {
                                                      "type": "boolean",
                                                      "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                                    },
                                                    "commonLabels": {
                                                      "type": "object",
                                                      "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                                      "additionalProperties": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "components": {
                                                      "type": "array",
                                                      "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "forceCommonAnnotations": {
                                                      "type": "boolean",
                                                      "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                                    },
                                                    "forceCommonLabels": {
                                                      "type": "boolean",
                                                      "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                                    },
                                                    "ignoreMissingComponents": {
                                                      "type": "boolean",
                                                      "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                                    },
                                                    "images": {
                                                      "type": "array",
                                                      "title": "Images is a list of Kustomize image override specifications",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "kubeVersion": {
                                                      "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                                      "type": "string"
                                                    },
                                                    "labelIncludeTemplates": {
                                                      "type": "boolean",
                                                      "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                                    },
                                                    "labelWithoutSelector": {
                                                      "type": "boolean",
                                                      "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                                    },
                                                    "namePrefix": {
                                                      "type": "string",
                                                      "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                                    },
                                                    "nameSuffix": {
                                                      "type": "string",
                                                      "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                                    },
                                                    "namespace": {
                                                      "type": "string",
                                                      "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                                    },
                                                    "patches": {
                                                      "type": "array",
                                                      "title": "Patches is a list of Kustomize patches",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "options": {
                                                            "type": "object",
                                                            "additionalProperties": {
                                                              "type": "boolean"
                                                            }
                                                          },
                                                          "patch": {
                                                            "type": "string"
                                                          },
                                                          "path": {
                                                            "type": "string"
                                                          },
                                                          "target": {
                                                            "type": "object",
                                                            "properties": {
                                                              "annotationSelector": {
                                                                "type": "string"
                                                              },
                                                              "labelSelector": {
                                                                "type": "string"
                                                              },
                                                              "resId": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "gvk": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "group": {
                                                                        "type": "string"
                                                                      },
                                                                      "kind": {
                                                                        "type": "string"
                                                                      },
                                                                      "version": {
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "additionalProperties": false
                                                                  },
                                                                  "name": {
                                                                    "type": "string"
                                                                  },
                                                                  "namespace": {
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "additionalProperties": false
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "replicas": {
                                                      "type": "array",
                                                      "title": "Replicas is a list of Kustomize Replicas override specifications",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "count": {
                                                            "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                            "type": "object",
                                                            "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                            "properties": {
                                                              "intVal": {
                                                                "type": "integer",
                                                                "format": "int32"
                                                              },
                                                              "strVal": {
                                                                "type": "string"
                                                              },
                                                              "type": {
                                                                "type": "integer",
                                                                "format": "int64"
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          },
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name of Deployment or StatefulSet"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "version": {
                                                      "type": "string",
                                                      "title": "Version controls which version of Kustomize to use for rendering manifests"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "name": {
                                                  "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                                  "type": "string"
                                                },
                                                "path": {
                                                  "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                                  "type": "string"
                                                },
                                                "plugin": {
                                                  "type": "object",
                                                  "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                                  "properties": {
                                                    "env": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "EnvEntry represents an entry in the application's environment",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "title": "Name is the name of the variable, usually expressed in uppercase"
                                                          },
                                                          "value": {
                                                            "type": "string",
                                                            "title": "Value is the value of the variable"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "parameters": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "array": {
                                                            "description": "Array is the value of an array type parameter.",
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "map": {
                                                            "description": "Map is the value of a map type parameter.",
                                                            "type": "object",
                                                            "additionalProperties": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "name": {
                                                            "description": "Name is the name identifying a parameter.",
                                                            "type": "string"
                                                          },
                                                          "string": {
                                                            "description": "String_ is the value of a string type parameter.",
                                                            "type": "string"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "ref": {
                                                  "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                                  "type": "string"
                                                },
                                                "repoURL": {
                                                  "type": "string",
                                                  "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                                },
                                                "targetRevision": {
                                                  "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "syncPolicy": {
                                            "type": "object",
                                            "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                                            "properties": {
                                              "automated": {
                                                "type": "object",
                                                "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                                                "properties": {
                                                  "allowEmpty": {
                                                    "type": "boolean",
                                                    "title": "AllowEmpty allows apps have zero live resources (default: false)"
                                                  },
                                                  "enable": {
                                                    "type": "boolean",
                                                    "title": "Enable allows apps to explicitly control automated sync"
                                                  },
                                                  "prune": {
                                                    "type": "boolean",
                                                    "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                                                  },
                                                  "selfHeal": {
                                                    "type": "boolean",
                                                    "title": "SelfHeal specifies whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "managedNamespaceMetadata": {
                                                "type": "object",
                                                "properties": {
                                                  "annotations": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "labels": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "retry": {
                                                "type": "object",
                                                "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                                                "properties": {
                                                  "backoff": {
                                                    "type": "object",
                                                    "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                                                    "properties": {
                                                      "duration": {
                                                        "type": "string",
                                                        "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                                                      },
                                                      "factor": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "title": "Factor is a factor to multiply the base duration after each failed retry"
                                                      },
                                                      "maxDuration": {
                                                        "type": "string",
                                                        "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "limit": {
                                                    "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                                    "type": "integer",
                                                    "format": "int64"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "syncOptions": {
                                                "type": "array",
                                                "title": "Options allow you to specify whole app sync-options",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "values": {
                                    "type": "object",
                                    "title": "Values contains key/value pairs which are passed directly as parameters to the template",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "selector": {
                                "type": "object",
                                "title": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.\n+structType=atomic",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "title": "matchExpressions is a list of label selector requirements. The requirements are ANDed.\n+optional\n+listType=atomic",
                                    "items": {
                                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "description": "key is the label key that the selector applies to.",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "title": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.\n+optional\n+listType=atomic",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "title": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n+optional",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "mergeKeys": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "template": {
                          "type": "object",
                          "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
                          "properties": {
                            "metadata": {
                              "type": "object",
                              "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
                              "properties": {
                                "annotations": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "finalizers": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "labels": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "name": {
                                  "type": "string"
                                },
                                "namespace": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "spec": {
                              "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
                              "type": "object",
                              "properties": {
                                "destination": {
                                  "type": "object",
                                  "title": "ApplicationDestination holds information about the application's destination",
                                  "properties": {
                                    "name": {
                                      "description": "Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.",
                                      "type": "string"
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                                    },
                                    "server": {
                                      "description": "Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "ignoreDifferences": {
                                  "type": "array",
                                  "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                                  "items": {
                                    "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                                    "type": "object",
                                    "properties": {
                                      "group": {
                                        "type": "string"
                                      },
                                      "jqPathExpressions": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "jsonPointers": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "kind": {
                                        "type": "string"
                                      },
                                      "managedFieldsManagers": {
                                        "type": "array",
                                        "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "namespace": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "info": {
                                  "type": "array",
                                  "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "value": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "project": {
                                  "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                                  "type": "string"
                                },
                                "revisionHistoryLimit": {
                                  "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "source": {
                                  "type": "object",
                                  "title": "ApplicationSource contains all required information about the source of an application",
                                  "properties": {
                                    "chart": {
                                      "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                      "type": "string"
                                    },
                                    "directory": {
                                      "type": "object",
                                      "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                      "properties": {
                                        "exclude": {
                                          "type": "string",
                                          "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                        },
                                        "include": {
                                          "type": "string",
                                          "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                        },
                                        "jsonnet": {
                                          "type": "object",
                                          "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                          "properties": {
                                            "extVars": {
                                              "type": "array",
                                              "title": "ExtVars is a list of Jsonnet External Variables",
                                              "items": {
                                                "type": "object",
                                                "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                "properties": {
                                                  "code": {
                                                    "type": "boolean"
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "value": {
                                                    "type": "string"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "libs": {
                                              "type": "array",
                                              "title": "Additional library search dirs",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "tlas": {
                                              "type": "array",
                                              "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                              "items": {
                                                "type": "object",
                                                "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                "properties": {
                                                  "code": {
                                                    "type": "boolean"
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "value": {
                                                    "type": "string"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "recurse": {
                                          "type": "boolean",
                                          "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "helm": {
                                      "type": "object",
                                      "title": "ApplicationSourceHelm holds helm specific options",
                                      "properties": {
                                        "apiVersions": {
                                          "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "fileParameters": {
                                          "type": "array",
                                          "title": "FileParameters are file parameters to the helm template",
                                          "items": {
                                            "type": "object",
                                            "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "title": "Name is the name of the Helm parameter"
                                              },
                                              "path": {
                                                "type": "string",
                                                "title": "Path is the path to the file containing the values for the Helm parameter"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "ignoreMissingValueFiles": {
                                          "type": "boolean",
                                          "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                        },
                                        "kubeVersion": {
                                          "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                          "type": "string"
                                        },
                                        "namespace": {
                                          "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                          "type": "string"
                                        },
                                        "parameters": {
                                          "type": "array",
                                          "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                          "items": {
                                            "type": "object",
                                            "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                            "properties": {
                                              "forceString": {
                                                "type": "boolean",
                                                "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                              },
                                              "name": {
                                                "type": "string",
                                                "title": "Name is the name of the Helm parameter"
                                              },
                                              "value": {
                                                "type": "string",
                                                "title": "Value is the value for the Helm parameter"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "passCredentials": {
                                          "type": "boolean",
                                          "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                        },
                                        "releaseName": {
                                          "type": "string",
                                          "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                        },
                                        "skipCrds": {
                                          "type": "boolean",
                                          "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                        },
                                        "skipSchemaValidation": {
                                          "type": "boolean",
                                          "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                        },
                                        "skipTests": {
                                          "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                          "type": "boolean"
                                        },
                                        "valueFiles": {
                                          "type": "array",
                                          "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "values": {
                                          "type": "string",
                                          "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                        },
                                        "valuesObject": {
                                          "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                          "type": "object",
                                          "properties": {
                                            "raw": {
                                              "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                              "type": "string",
                                              "format": "byte"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "version": {
                                          "type": "string",
                                          "title": "Version is the Helm version to use for templating (\"3\")"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "kustomize": {
                                      "type": "object",
                                      "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                      "properties": {
                                        "apiVersions": {
                                          "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "commonAnnotations": {
                                          "type": "object",
                                          "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "commonAnnotationsEnvsubst": {
                                          "type": "boolean",
                                          "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                        },
                                        "commonLabels": {
                                          "type": "object",
                                          "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "components": {
                                          "type": "array",
                                          "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "forceCommonAnnotations": {
                                          "type": "boolean",
                                          "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                        },
                                        "forceCommonLabels": {
                                          "type": "boolean",
                                          "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                        },
                                        "ignoreMissingComponents": {
                                          "type": "boolean",
                                          "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                        },
                                        "images": {
                                          "type": "array",
                                          "title": "Images is a list of Kustomize image override specifications",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "kubeVersion": {
                                          "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                          "type": "string"
                                        },
                                        "labelIncludeTemplates": {
                                          "type": "boolean",
                                          "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                        },
                                        "labelWithoutSelector": {
                                          "type": "boolean",
                                          "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                        },
                                        "namePrefix": {
                                          "type": "string",
                                          "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                        },
                                        "nameSuffix": {
                                          "type": "string",
                                          "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                        },
                                        "namespace": {
                                          "type": "string",
                                          "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                        },
                                        "patches": {
                                          "type": "array",
                                          "title": "Patches is a list of Kustomize patches",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "options": {
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "boolean"
                                                }
                                              },
                                              "patch": {
                                                "type": "string"
                                              },
                                              "path": {
                                                "type": "string"
                                              },
                                              "target": {
                                                "type": "object",
                                                "properties": {
                                                  "annotationSelector": {
                                                    "type": "string"
                                                  },
                                                  "labelSelector": {
                                                    "type": "string"
                                                  },
                                                  "resId": {
                                                    "type": "object",
                                                    "properties": {
                                                      "gvk": {
                                                        "type": "object",
                                                        "properties": {
                                                          "group": {
                                                            "type": "string"
                                                          },
                                                          "kind": {
                                                            "type": "string"
                                                          },
                                                          "version": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      },
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "namespace": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "replicas": {
                                          "type": "array",
                                          "title": "Replicas is a list of Kustomize Replicas override specifications",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "count": {
                                                "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                "type": "object",
                                                "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                "properties": {
                                                  "intVal": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                  },
                                                  "strVal": {
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "name": {
                                                "type": "string",
                                                "title": "Name of Deployment or StatefulSet"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "version": {
                                          "type": "string",
                                          "title": "Version controls which version of Kustomize to use for rendering manifests"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "name": {
                                      "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                      "type": "string"
                                    },
                                    "plugin": {
                                      "type": "object",
                                      "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                      "properties": {
                                        "env": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "title": "EnvEntry represents an entry in the application's environment",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "title": "Name is the name of the variable, usually expressed in uppercase"
                                              },
                                              "value": {
                                                "type": "string",
                                                "title": "Value is the value of the variable"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "parameters": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "array": {
                                                "description": "Array is the value of an array type parameter.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "map": {
                                                "description": "Map is the value of a map type parameter.",
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              },
                                              "name": {
                                                "description": "Name is the name identifying a parameter.",
                                                "type": "string"
                                              },
                                              "string": {
                                                "description": "String_ is the value of a string type parameter.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "ref": {
                                      "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                      "type": "string"
                                    },
                                    "repoURL": {
                                      "type": "string",
                                      "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                    },
                                    "targetRevision": {
                                      "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "sourceHydrator": {
                                  "description": "SourceHydrator specifies a dry \"don't repeat yourself\" source for manifests, a sync source from which to sync\nhydrated manifests, and an optional hydrateTo location to act as a \"staging\" aread for hydrated manifests.",
                                  "type": "object",
                                  "properties": {
                                    "drySource": {
                                      "description": "DrySource specifies a location for dry \"don't repeat yourself\" manifest source information.",
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string",
                                          "title": "Path is a directory path within the Git repository where the manifests are located"
                                        },
                                        "repoURL": {
                                          "type": "string",
                                          "title": "RepoURL is the URL to the git repository that contains the application manifests"
                                        },
                                        "targetRevision": {
                                          "type": "string",
                                          "title": "TargetRevision defines the revision of the source to hydrate"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "hydrateTo": {
                                      "description": "HydrateTo specifies a location to which hydrated manifests should be pushed as a \"staging area\" before being moved to\nthe SyncSource. The RepoURL and Path are assumed based on the associated SyncSource config in the SourceHydrator.",
                                      "type": "object",
                                      "properties": {
                                        "targetBranch": {
                                          "type": "string",
                                          "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "syncSource": {
                                      "description": "SyncSource specifies a location from which hydrated manifests may be synced. RepoURL is assumed based on the\nassociated DrySource config in the SourceHydrator.",
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "description": "Path is a directory path within the git repository where hydrated manifests should be committed to and synced\nfrom. If hydrateTo is set, this is just the path from which hydrated manifests will be synced.",
                                          "type": "string"
                                        },
                                        "targetBranch": {
                                          "type": "string",
                                          "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "sources": {
                                  "type": "array",
                                  "title": "Sources is a reference to the location of the application's manifests or chart",
                                  "items": {
                                    "type": "object",
                                    "title": "ApplicationSource contains all required information about the source of an application",
                                    "properties": {
                                      "chart": {
                                        "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                        "type": "string"
                                      },
                                      "directory": {
                                        "type": "object",
                                        "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                        "properties": {
                                          "exclude": {
                                            "type": "string",
                                            "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                          },
                                          "include": {
                                            "type": "string",
                                            "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                          },
                                          "jsonnet": {
                                            "type": "object",
                                            "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                            "properties": {
                                              "extVars": {
                                                "type": "array",
                                                "title": "ExtVars is a list of Jsonnet External Variables",
                                                "items": {
                                                  "type": "object",
                                                  "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                  "properties": {
                                                    "code": {
                                                      "type": "boolean"
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              },
                                              "libs": {
                                                "type": "array",
                                                "title": "Additional library search dirs",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "tlas": {
                                                "type": "array",
                                                "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                "items": {
                                                  "type": "object",
                                                  "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                  "properties": {
                                                    "code": {
                                                      "type": "boolean"
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "recurse": {
                                            "type": "boolean",
                                            "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "helm": {
                                        "type": "object",
                                        "title": "ApplicationSourceHelm holds helm specific options",
                                        "properties": {
                                          "apiVersions": {
                                            "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "fileParameters": {
                                            "type": "array",
                                            "title": "FileParameters are file parameters to the helm template",
                                            "items": {
                                              "type": "object",
                                              "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name is the name of the Helm parameter"
                                                },
                                                "path": {
                                                  "type": "string",
                                                  "title": "Path is the path to the file containing the values for the Helm parameter"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "ignoreMissingValueFiles": {
                                            "type": "boolean",
                                            "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                          },
                                          "kubeVersion": {
                                            "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                            "type": "string"
                                          },
                                          "namespace": {
                                            "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                            "type": "string"
                                          },
                                          "parameters": {
                                            "type": "array",
                                            "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                            "items": {
                                              "type": "object",
                                              "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                              "properties": {
                                                "forceString": {
                                                  "type": "boolean",
                                                  "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name is the name of the Helm parameter"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "title": "Value is the value for the Helm parameter"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "passCredentials": {
                                            "type": "boolean",
                                            "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                          },
                                          "releaseName": {
                                            "type": "string",
                                            "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                          },
                                          "skipCrds": {
                                            "type": "boolean",
                                            "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                          },
                                          "skipSchemaValidation": {
                                            "type": "boolean",
                                            "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                          },
                                          "skipTests": {
                                            "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                            "type": "boolean"
                                          },
                                          "valueFiles": {
                                            "type": "array",
                                            "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "values": {
                                            "type": "string",
                                            "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                          },
                                          "valuesObject": {
                                            "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                            "type": "object",
                                            "properties": {
                                              "raw": {
                                                "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                "type": "string",
                                                "format": "byte"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "version": {
                                            "type": "string",
                                            "title": "Version is the Helm version to use for templating (\"3\")"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "kustomize": {
                                        "type": "object",
                                        "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                        "properties": {
                                          "apiVersions": {
                                            "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "commonAnnotations": {
                                            "type": "object",
                                            "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "commonAnnotationsEnvsubst": {
                                            "type": "boolean",
                                            "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                          },
                                          "commonLabels": {
                                            "type": "object",
                                            "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "components": {
                                            "type": "array",
                                            "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "forceCommonAnnotations": {
                                            "type": "boolean",
                                            "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                          },
                                          "forceCommonLabels": {
                                            "type": "boolean",
                                            "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                          },
                                          "ignoreMissingComponents": {
                                            "type": "boolean",
                                            "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                          },
                                          "images": {
                                            "type": "array",
                                            "title": "Images is a list of Kustomize image override specifications",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "kubeVersion": {
                                            "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                            "type": "string"
                                          },
                                          "labelIncludeTemplates": {
                                            "type": "boolean",
                                            "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                          },
                                          "labelWithoutSelector": {
                                            "type": "boolean",
                                            "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                          },
                                          "namePrefix": {
                                            "type": "string",
                                            "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                          },
                                          "nameSuffix": {
                                            "type": "string",
                                            "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                          },
                                          "namespace": {
                                            "type": "string",
                                            "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                          },
                                          "patches": {
                                            "type": "array",
                                            "title": "Patches is a list of Kustomize patches",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "options": {
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "type": "boolean"
                                                  }
                                                },
                                                "patch": {
                                                  "type": "string"
                                                },
                                                "path": {
                                                  "type": "string"
                                                },
                                                "target": {
                                                  "type": "object",
                                                  "properties": {
                                                    "annotationSelector": {
                                                      "type": "string"
                                                    },
                                                    "labelSelector": {
                                                      "type": "string"
                                                    },
                                                    "resId": {
                                                      "type": "object",
                                                      "properties": {
                                                        "gvk": {
                                                          "type": "object",
                                                          "properties": {
                                                            "group": {
                                                              "type": "string"
                                                            },
                                                            "kind": {
                                                              "type": "string"
                                                            },
                                                            "version": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        },
                                                        "name": {
                                                          "type": "string"
                                                        },
                                                        "namespace": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "replicas": {
                                            "type": "array",
                                            "title": "Replicas is a list of Kustomize Replicas override specifications",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "count": {
                                                  "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                  "type": "object",
                                                  "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                  "properties": {
                                                    "intVal": {
                                                      "type": "integer",
                                                      "format": "int32"
                                                    },
                                                    "strVal": {
                                                      "type": "string"
                                                    },
                                                    "type": {
                                                      "type": "integer",
                                                      "format": "int64"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name of Deployment or StatefulSet"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "version": {
                                            "type": "string",
                                            "title": "Version controls which version of Kustomize to use for rendering manifests"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "name": {
                                        "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                        "type": "string"
                                      },
                                      "path": {
                                        "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                        "type": "string"
                                      },
                                      "plugin": {
                                        "type": "object",
                                        "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                        "properties": {
                                          "env": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "title": "EnvEntry represents an entry in the application's environment",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name is the name of the variable, usually expressed in uppercase"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "title": "Value is the value of the variable"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "parameters": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "array": {
                                                  "description": "Array is the value of an array type parameter.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "map": {
                                                  "description": "Map is the value of a map type parameter.",
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "type": "string"
                                                  }
                                                },
                                                "name": {
                                                  "description": "Name is the name identifying a parameter.",
                                                  "type": "string"
                                                },
                                                "string": {
                                                  "description": "String_ is the value of a string type parameter.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "ref": {
                                        "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                        "type": "string"
                                      },
                                      "repoURL": {
                                        "type": "string",
                                        "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                      },
                                      "targetRevision": {
                                        "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "syncPolicy": {
                                  "type": "object",
                                  "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                                  "properties": {
                                    "automated": {
                                      "type": "object",
                                      "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                                      "properties": {
                                        "allowEmpty": {
                                          "type": "boolean",
                                          "title": "AllowEmpty allows apps have zero live resources (default: false)"
                                        },
                                        "enable": {
                                          "type": "boolean",
                                          "title": "Enable allows apps to explicitly control automated sync"
                                        },
                                        "prune": {
                                          "type": "boolean",
                                          "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                                        },
                                        "selfHeal": {
                                          "type": "boolean",
                                          "title": "SelfHeal specifies whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "managedNamespaceMetadata": {
                                      "type": "object",
                                      "properties": {
                                        "annotations": {
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "labels": {
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "retry": {
                                      "type": "object",
                                      "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                                      "properties": {
                                        "backoff": {
                                          "type": "object",
                                          "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                                          "properties": {
                                            "duration": {
                                              "type": "string",
                                              "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                                            },
                                            "factor": {
                                              "type": "integer",
                                              "format": "int64",
                                              "title": "Factor is a factor to multiply the base duration after each failed retry"
                                            },
                                            "maxDuration": {
                                              "type": "string",
                                              "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "limit": {
                                          "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                          "type": "integer",
                                          "format": "int64"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "syncOptions": {
                                      "type": "array",
                                      "title": "Options allow you to specify whole app sync-options",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "plugin": {
                      "description": "PluginGenerator defines connection info specific to Plugin.",
                      "type": "object",
                      "properties": {
                        "configMapRef": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "title": "Name of the ConfigMap"
                            }
                          },
                          "additionalProperties": false
                        },
                        "input": {
                          "type": "object",
                          "properties": {
                            "parameters": {
                              "description": "Parameters contains the information to pass to the plugin. It is a map. The keys must be strings, and the\nvalues can be any type.",
                              "type": "object",
                              "additionalProperties": {
                                "description": "JSON represents any valid JSON value.\nThese types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.",
                                "type": "object",
                                "properties": {
                                  "raw": {
                                    "type": "string",
                                    "format": "byte"
                                  }
                                },
                                "additionalProperties": false
                              }
                            }
                          },
                          "additionalProperties": false
                        },
                        "requeueAfterSeconds": {
                          "description": "RequeueAfterSeconds determines how long the ApplicationSet controller will wait before reconciling the ApplicationSet again.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "template": {
                          "type": "object",
                          "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
                          "properties": {
                            "metadata": {
                              "type": "object",
                              "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
                              "properties": {
                                "annotations": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "finalizers": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "labels": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "name": {
                                  "type": "string"
                                },
                                "namespace": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "spec": {
                              "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
                              "type": "object",
                              "properties": {
                                "destination": {
                                  "type": "object",
                                  "title": "ApplicationDestination holds information about the application's destination",
                                  "properties": {
                                    "name": {
                                      "description": "Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.",
                                      "type": "string"
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                                    },
                                    "server": {
                                      "description": "Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "ignoreDifferences": {
                                  "type": "array",
                                  "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                                  "items": {
                                    "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                                    "type": "object",
                                    "properties": {
                                      "group": {
                                        "type": "string"
                                      },
                                      "jqPathExpressions": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "jsonPointers": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "kind": {
                                        "type": "string"
                                      },
                                      "managedFieldsManagers": {
                                        "type": "array",
                                        "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "namespace": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "info": {
                                  "type": "array",
                                  "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "value": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "project": {
                                  "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                                  "type": "string"
                                },
                                "revisionHistoryLimit": {
                                  "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "source": {
                                  "type": "object",
                                  "title": "ApplicationSource contains all required information about the source of an application",
                                  "properties": {
                                    "chart": {
                                      "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                      "type": "string"
                                    },
                                    "directory": {
                                      "type": "object",
                                      "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                      "properties": {
                                        "exclude": {
                                          "type": "string",
                                          "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                        },
                                        "include": {
                                          "type": "string",
                                          "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                        },
                                        "jsonnet": {
                                          "type": "object",
                                          "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                          "properties": {
                                            "extVars": {
                                              "type": "array",
                                              "title": "ExtVars is a list of Jsonnet External Variables",
                                              "items": {
                                                "type": "object",
                                                "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                "properties": {
                                                  "code": {
                                                    "type": "boolean"
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "value": {
                                                    "type": "string"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "libs": {
                                              "type": "array",
                                              "title": "Additional library search dirs",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "tlas": {
                                              "type": "array",
                                              "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                              "items": {
                                                "type": "object",
                                                "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                "properties": {
                                                  "code": {
                                                    "type": "boolean"
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "value": {
                                                    "type": "string"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "recurse": {
                                          "type": "boolean",
                                          "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "helm": {
                                      "type": "object",
                                      "title": "ApplicationSourceHelm holds helm specific options",
                                      "properties": {
                                        "apiVersions": {
                                          "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "fileParameters": {
                                          "type": "array",
                                          "title": "FileParameters are file parameters to the helm template",
                                          "items": {
                                            "type": "object",
                                            "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "title": "Name is the name of the Helm parameter"
                                              },
                                              "path": {
                                                "type": "string",
                                                "title": "Path is the path to the file containing the values for the Helm parameter"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "ignoreMissingValueFiles": {
                                          "type": "boolean",
                                          "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                        },
                                        "kubeVersion": {
                                          "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                          "type": "string"
                                        },
                                        "namespace": {
                                          "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                          "type": "string"
                                        },
                                        "parameters": {
                                          "type": "array",
                                          "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                          "items": {
                                            "type": "object",
                                            "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                            "properties": {
                                              "forceString": {
                                                "type": "boolean",
                                                "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                              },
                                              "name": {
                                                "type": "string",
                                                "title": "Name is the name of the Helm parameter"
                                              },
                                              "value": {
                                                "type": "string",
                                                "title": "Value is the value for the Helm parameter"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "passCredentials": {
                                          "type": "boolean",
                                          "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                        },
                                        "releaseName": {
                                          "type": "string",
                                          "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                        },
                                        "skipCrds": {
                                          "type": "boolean",
                                          "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                        },
                                        "skipSchemaValidation": {
                                          "type": "boolean",
                                          "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                        },
                                        "skipTests": {
                                          "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                          "type": "boolean"
                                        },
                                        "valueFiles": {
                                          "type": "array",
                                          "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "values": {
                                          "type": "string",
                                          "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                        },
                                        "valuesObject": {
                                          "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                          "type": "object",
                                          "properties": {
                                            "raw": {
                                              "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                              "type": "string",
                                              "format": "byte"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "version": {
                                          "type": "string",
                                          "title": "Version is the Helm version to use for templating (\"3\")"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "kustomize": {
                                      "type": "object",
                                      "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                      "properties": {
                                        "apiVersions": {
                                          "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "commonAnnotations": {
                                          "type": "object",
                                          "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "commonAnnotationsEnvsubst": {
                                          "type": "boolean",
                                          "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                        },
                                        "commonLabels": {
                                          "type": "object",
                                          "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "components": {
                                          "type": "array",
                                          "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "forceCommonAnnotations": {
                                          "type": "boolean",
                                          "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                        },
                                        "forceCommonLabels": {
                                          "type": "boolean",
                                          "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                        },
                                        "ignoreMissingComponents": {
                                          "type": "boolean",
                                          "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                        },
                                        "images": {
                                          "type": "array",
                                          "title": "Images is a list of Kustomize image override specifications",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "kubeVersion": {
                                          "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                          "type": "string"
                                        },
                                        "labelIncludeTemplates": {
                                          "type": "boolean",
                                          "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                        },
                                        "labelWithoutSelector": {
                                          "type": "boolean",
                                          "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                        },
                                        "namePrefix": {
                                          "type": "string",
                                          "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                        },
                                        "nameSuffix": {
                                          "type": "string",
                                          "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                        },
                                        "namespace": {
                                          "type": "string",
                                          "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                        },
                                        "patches": {
                                          "type": "array",
                                          "title": "Patches is a list of Kustomize patches",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "options": {
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "boolean"
                                                }
                                              },
                                              "patch": {
                                                "type": "string"
                                              },
                                              "path": {
                                                "type": "string"
                                              },
                                              "target": {
                                                "type": "object",
                                                "properties": {
                                                  "annotationSelector": {
                                                    "type": "string"
                                                  },
                                                  "labelSelector": {
                                                    "type": "string"
                                                  },
                                                  "resId": {
                                                    "type": "object",
                                                    "properties": {
                                                      "gvk": {
                                                        "type": "object",
                                                        "properties": {
                                                          "group": {
                                                            "type": "string"
                                                          },
                                                          "kind": {
                                                            "type": "string"
                                                          },
                                                          "version": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      },
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "namespace": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "replicas": {
                                          "type": "array",
                                          "title": "Replicas is a list of Kustomize Replicas override specifications",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "count": {
                                                "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                "type": "object",
                                                "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                "properties": {
                                                  "intVal": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                  },
                                                  "strVal": {
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "name": {
                                                "type": "string",
                                                "title": "Name of Deployment or StatefulSet"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "version": {
                                          "type": "string",
                                          "title": "Version controls which version of Kustomize to use for rendering manifests"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "name": {
                                      "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                      "type": "string"
                                    },
                                    "plugin": {
                                      "type": "object",
                                      "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                      "properties": {
                                        "env": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "title": "EnvEntry represents an entry in the application's environment",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "title": "Name is the name of the variable, usually expressed in uppercase"
                                              },
                                              "value": {
                                                "type": "string",
                                                "title": "Value is the value of the variable"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "parameters": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "array": {
                                                "description": "Array is the value of an array type parameter.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "map": {
                                                "description": "Map is the value of a map type parameter.",
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              },
                                              "name": {
                                                "description": "Name is the name identifying a parameter.",
                                                "type": "string"
                                              },
                                              "string": {
                                                "description": "String_ is the value of a string type parameter.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "ref": {
                                      "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                      "type": "string"
                                    },
                                    "repoURL": {
                                      "type": "string",
                                      "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                    },
                                    "targetRevision": {
                                      "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "sourceHydrator": {
                                  "description": "SourceHydrator specifies a dry \"don't repeat yourself\" source for manifests, a sync source from which to sync\nhydrated manifests, and an optional hydrateTo location to act as a \"staging\" aread for hydrated manifests.",
                                  "type": "object",
                                  "properties": {
                                    "drySource": {
                                      "description": "DrySource specifies a location for dry \"don't repeat yourself\" manifest source information.",
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string",
                                          "title": "Path is a directory path within the Git repository where the manifests are located"
                                        },
                                        "repoURL": {
                                          "type": "string",
                                          "title": "RepoURL is the URL to the git repository that contains the application manifests"
                                        },
                                        "targetRevision": {
                                          "type": "string",
                                          "title": "TargetRevision defines the revision of the source to hydrate"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "hydrateTo": {
                                      "description": "HydrateTo specifies a location to which hydrated manifests should be pushed as a \"staging area\" before being moved to\nthe SyncSource. The RepoURL and Path are assumed based on the associated SyncSource config in the SourceHydrator.",
                                      "type": "object",
                                      "properties": {
                                        "targetBranch": {
                                          "type": "string",
                                          "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "syncSource": {
                                      "description": "SyncSource specifies a location from which hydrated manifests may be synced. RepoURL is assumed based on the\nassociated DrySource config in the SourceHydrator.",
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "description": "Path is a directory path within the git repository where hydrated manifests should be committed to and synced\nfrom. If hydrateTo is set, this is just the path from which hydrated manifests will be synced.",
                                          "type": "string"
                                        },
                                        "targetBranch": {
                                          "type": "string",
                                          "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "sources": {
                                  "type": "array",
                                  "title": "Sources is a reference to the location of the application's manifests or chart",
                                  "items": {
                                    "type": "object",
                                    "title": "ApplicationSource contains all required information about the source of an application",
                                    "properties": {
                                      "chart": {
                                        "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                        "type": "string"
                                      },
                                      "directory": {
                                        "type": "object",
                                        "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                        "properties": {
                                          "exclude": {
                                            "type": "string",
                                            "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                          },
                                          "include": {
                                            "type": "string",
                                            "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                          },
                                          "jsonnet": {
                                            "type": "object",
                                            "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                            "properties": {
                                              "extVars": {
                                                "type": "array",
                                                "title": "ExtVars is a list of Jsonnet External Variables",
                                                "items": {
                                                  "type": "object",
                                                  "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                  "properties": {
                                                    "code": {
                                                      "type": "boolean"
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              },
                                              "libs": {
                                                "type": "array",
                                                "title": "Additional library search dirs",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "tlas": {
                                                "type": "array",
                                                "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                "items": {
                                                  "type": "object",
                                                  "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                  "properties": {
                                                    "code": {
                                                      "type": "boolean"
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "recurse": {
                                            "type": "boolean",
                                            "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "helm": {
                                        "type": "object",
                                        "title": "ApplicationSourceHelm holds helm specific options",
                                        "properties": {
                                          "apiVersions": {
                                            "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "fileParameters": {
                                            "type": "array",
                                            "title": "FileParameters are file parameters to the helm template",
                                            "items": {
                                              "type": "object",
                                              "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name is the name of the Helm parameter"
                                                },
                                                "path": {
                                                  "type": "string",
                                                  "title": "Path is the path to the file containing the values for the Helm parameter"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "ignoreMissingValueFiles": {
                                            "type": "boolean",
                                            "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                          },
                                          "kubeVersion": {
                                            "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                            "type": "string"
                                          },
                                          "namespace": {
                                            "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                            "type": "string"
                                          },
                                          "parameters": {
                                            "type": "array",
                                            "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                            "items": {
                                              "type": "object",
                                              "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                              "properties": {
                                                "forceString": {
                                                  "type": "boolean",
                                                  "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name is the name of the Helm parameter"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "title": "Value is the value for the Helm parameter"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "passCredentials": {
                                            "type": "boolean",
                                            "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                          },
                                          "releaseName": {
                                            "type": "string",
                                            "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                          },
                                          "skipCrds": {
                                            "type": "boolean",
                                            "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                          },
                                          "skipSchemaValidation": {
                                            "type": "boolean",
                                            "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                          },
                                          "skipTests": {
                                            "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                            "type": "boolean"
                                          },
                                          "valueFiles": {
                                            "type": "array",
                                            "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "values": {
                                            "type": "string",
                                            "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                          },
                                          "valuesObject": {
                                            "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                            "type": "object",
                                            "properties": {
                                              "raw": {
                                                "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                "type": "string",
                                                "format": "byte"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "version": {
                                            "type": "string",
                                            "title": "Version is the Helm version to use for templating (\"3\")"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "kustomize": {
                                        "type": "object",
                                        "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                        "properties": {
                                          "apiVersions": {
                                            "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "commonAnnotations": {
                                            "type": "object",
                                            "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "commonAnnotationsEnvsubst": {
                                            "type": "boolean",
                                            "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                          },
                                          "commonLabels": {
                                            "type": "object",
                                            "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "components": {
                                            "type": "array",
                                            "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "forceCommonAnnotations": {
                                            "type": "boolean",
                                            "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                          },
                                          "forceCommonLabels": {
                                            "type": "boolean",
                                            "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                          },
                                          "ignoreMissingComponents": {
                                            "type": "boolean",
                                            "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                          },
                                          "images": {
                                            "type": "array",
                                            "title": "Images is a list of Kustomize image override specifications",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "kubeVersion": {
                                            "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                            "type": "string"
                                          },
                                          "labelIncludeTemplates": {
                                            "type": "boolean",
                                            "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                          },
                                          "labelWithoutSelector": {
                                            "type": "boolean",
                                            "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                          },
                                          "namePrefix": {
                                            "type": "string",
                                            "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                          },
                                          "nameSuffix": {
                                            "type": "string",
                                            "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                          },
                                          "namespace": {
                                            "type": "string",
                                            "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                          },
                                          "patches": {
                                            "type": "array",
                                            "title": "Patches is a list of Kustomize patches",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "options": {
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "type": "boolean"
                                                  }
                                                },
                                                "patch": {
                                                  "type": "string"
                                                },
                                                "path": {
                                                  "type": "string"
                                                },
                                                "target": {
                                                  "type": "object",
                                                  "properties": {
                                                    "annotationSelector": {
                                                      "type": "string"
                                                    },
                                                    "labelSelector": {
                                                      "type": "string"
                                                    },
                                                    "resId": {
                                                      "type": "object",
                                                      "properties": {
                                                        "gvk": {
                                                          "type": "object",
                                                          "properties": {
                                                            "group": {
                                                              "type": "string"
                                                            },
                                                            "kind": {
                                                              "type": "string"
                                                            },
                                                            "version": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        },
                                                        "name": {
                                                          "type": "string"
                                                        },
                                                        "namespace": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "replicas": {
                                            "type": "array",
                                            "title": "Replicas is a list of Kustomize Replicas override specifications",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "count": {
                                                  "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                  "type": "object",
                                                  "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                  "properties": {
                                                    "intVal": {
                                                      "type": "integer",
                                                      "format": "int32"
                                                    },
                                                    "strVal": {
                                                      "type": "string"
                                                    },
                                                    "type": {
                                                      "type": "integer",
                                                      "format": "int64"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name of Deployment or StatefulSet"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "version": {
                                            "type": "string",
                                            "title": "Version controls which version of Kustomize to use for rendering manifests"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "name": {
                                        "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                        "type": "string"
                                      },
                                      "path": {
                                        "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                        "type": "string"
                                      },
                                      "plugin": {
                                        "type": "object",
                                        "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                        "properties": {
                                          "env": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "title": "EnvEntry represents an entry in the application's environment",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name is the name of the variable, usually expressed in uppercase"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "title": "Value is the value of the variable"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "parameters": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "array": {
                                                  "description": "Array is the value of an array type parameter.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "map": {
                                                  "description": "Map is the value of a map type parameter.",
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "type": "string"
                                                  }
                                                },
                                                "name": {
                                                  "description": "Name is the name identifying a parameter.",
                                                  "type": "string"
                                                },
                                                "string": {
                                                  "description": "String_ is the value of a string type parameter.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "ref": {
                                        "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                        "type": "string"
                                      },
                                      "repoURL": {
                                        "type": "string",
                                        "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                      },
                                      "targetRevision": {
                                        "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "syncPolicy": {
                                  "type": "object",
                                  "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                                  "properties": {
                                    "automated": {
                                      "type": "object",
                                      "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                                      "properties": {
                                        "allowEmpty": {
                                          "type": "boolean",
                                          "title": "AllowEmpty allows apps have zero live resources (default: false)"
                                        },
                                        "enable": {
                                          "type": "boolean",
                                          "title": "Enable allows apps to explicitly control automated sync"
                                        },
                                        "prune": {
                                          "type": "boolean",
                                          "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                                        },
                                        "selfHeal": {
                                          "type": "boolean",
                                          "title": "SelfHeal specifies whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "managedNamespaceMetadata": {
                                      "type": "object",
                                      "properties": {
                                        "annotations": {
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "labels": {
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "retry": {
                                      "type": "object",
                                      "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                                      "properties": {
                                        "backoff": {
                                          "type": "object",
                                          "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                                          "properties": {
                                            "duration": {
                                              "type": "string",
                                              "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                                            },
                                            "factor": {
                                              "type": "integer",
                                              "format": "int64",
                                              "title": "Factor is a factor to multiply the base duration after each failed retry"
                                            },
                                            "maxDuration": {
                                              "type": "string",
                                              "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "limit": {
                                          "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                          "type": "integer",
                                          "format": "int64"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "syncOptions": {
                                      "type": "array",
                                      "title": "Options allow you to specify whole app sync-options",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "values": {
                          "description": "Values contains key/value pairs which are passed directly as parameters to the template. These values will not be\nsent as parameters to the plugin.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "pullRequest": {
                      "description": "PullRequestGenerator defines a generator that scrapes a PullRequest API to find candidate pull requests.",
                      "type": "object",
                      "properties": {
                        "azuredevops": {
                          "description": "PullRequestGeneratorAzureDevOps defines connection info specific to AzureDevOps.",
                          "type": "object",
                          "properties": {
                            "api": {
                              "description": "The Azure DevOps API URL to talk to. If blank, use https://dev.azure.com/.",
                              "type": "string"
                            },
                            "labels": {
                              "type": "array",
                              "title": "Labels is used to filter the PRs that you want to target",
                              "items": {
                                "type": "string"
                              }
                            },
                            "organization": {
                              "description": "Azure DevOps org to scan. Required.",
                              "type": "string"
                            },
                            "project": {
                              "description": "Azure DevOps project name to scan. Required.",
                              "type": "string"
                            },
                            "repo": {
                              "description": "Azure DevOps repo name to scan. Required.",
                              "type": "string"
                            },
                            "tokenRef": {
                              "description": "Utility struct for a reference to a secret key.",
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "secretName": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "bitbucket": {
                          "description": "PullRequestGeneratorBitbucket defines connection info specific to Bitbucket.",
                          "type": "object",
                          "properties": {
                            "api": {
                              "description": "The Bitbucket REST API URL to talk to. If blank, uses https://api.bitbucket.org/2.0.",
                              "type": "string"
                            },
                            "basicAuth": {
                              "description": "BasicAuthBitbucketServer defines the username/(password or personal access token) for Basic auth.",
                              "type": "object",
                              "properties": {
                                "passwordRef": {
                                  "description": "Utility struct for a reference to a secret key.",
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "secretName": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "username": {
                                  "type": "string",
                                  "title": "Username for Basic auth"
                                }
                              },
                              "additionalProperties": false
                            },
                            "bearerToken": {
                              "description": "BearerTokenBitbucketCloud defines the Bearer token for BitBucket AppToken auth.",
                              "type": "object",
                              "properties": {
                                "tokenRef": {
                                  "description": "Utility struct for a reference to a secret key.",
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "secretName": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "owner": {
                              "description": "Workspace to scan. Required.",
                              "type": "string"
                            },
                            "repo": {
                              "description": "Repo name to scan. Required.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "bitbucketServer": {
                          "description": "PullRequestGeneratorBitbucketServer defines connection info specific to BitbucketServer.",
                          "type": "object",
                          "properties": {
                            "api": {
                              "description": "The Bitbucket REST API URL to talk to e.g. https://bitbucket.org/rest Required.",
                              "type": "string"
                            },
                            "basicAuth": {
                              "description": "BasicAuthBitbucketServer defines the username/(password or personal access token) for Basic auth.",
                              "type": "object",
                              "properties": {
                                "passwordRef": {
                                  "description": "Utility struct for a reference to a secret key.",
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "secretName": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "username": {
                                  "type": "string",
                                  "title": "Username for Basic auth"
                                }
                              },
                              "additionalProperties": false
                            },
                            "bearerToken": {
                              "description": "BearerTokenBitbucket defines the Bearer token for BitBucket AppToken auth.",
                              "type": "object",
                              "properties": {
                                "tokenRef": {
                                  "description": "Utility struct for a reference to a secret key.",
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "secretName": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "caRef": {
                              "description": "Utility struct for a reference to a configmap key.",
                              "type": "object",
                              "properties": {
                                "configMapName": {
                                  "type": "string"
                                },
                                "key": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "insecure": {
                              "type": "boolean",
                              "title": "Allow self-signed TLS / Certificates; default: false"
                            },
                            "project": {
                              "description": "Project to scan. Required.",
                              "type": "string"
                            },
                            "repo": {
                              "description": "Repo name to scan. Required.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "continueOnRepoNotFoundError": {
                          "description": "ContinueOnRepoNotFoundError is a flag to continue the ApplicationSet Pull Request generator parameters generation even if the repository is not found.",
                          "type": "boolean"
                        },
                        "filters": {
                          "description": "Filters for which pull requests should be considered.",
                          "type": "array",
                          "items": {
                            "description": "PullRequestGeneratorFilter is a single pull request filter.\nIf multiple filter types are set on a single struct, they will be AND'd together. All filters must\npass for a pull request to be included.",
                            "type": "object",
                            "properties": {
                              "branchMatch": {
                                "type": "string"
                              },
                              "targetBranchMatch": {
                                "type": "string"
                              },
                              "titleMatch": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "gitea": {
                          "description": "PullRequestGeneratorGitea defines connection info specific to Gitea.",
                          "type": "object",
                          "properties": {
                            "api": {
                              "type": "string",
                              "title": "The Gitea API URL to talk to. Required"
                            },
                            "insecure": {
                              "description": "Allow insecure tls, for self-signed certificates; default: false.",
                              "type": "boolean"
                            },
                            "labels": {
                              "type": "array",
                              "title": "Labels is used to filter the PRs that you want to target",
                              "items": {
                                "type": "string"
                              }
                            },
                            "owner": {
                              "description": "Gitea org or user to scan. Required.",
                              "type": "string"
                            },
                            "repo": {
                              "description": "Gitea repo name to scan. Required.",
                              "type": "string"
                            },
                            "tokenRef": {
                              "description": "Utility struct for a reference to a secret key.",
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "secretName": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "github": {
                          "description": "PullRequestGenerator defines connection info specific to GitHub.",
                          "type": "object",
                          "properties": {
                            "api": {
                              "description": "The GitHub API URL to talk to. If blank, use https://api.github.com/.",
                              "type": "string"
                            },
                            "appSecretName": {
                              "description": "AppSecretName is a reference to a GitHub App repo-creds secret with permission to access pull requests.",
                              "type": "string"
                            },
                            "labels": {
                              "type": "array",
                              "title": "Labels is used to filter the PRs that you want to target",
                              "items": {
                                "type": "string"
                              }
                            },
                            "owner": {
                              "description": "GitHub org or user to scan. Required.",
                              "type": "string"
                            },
                            "repo": {
                              "description": "GitHub repo name to scan. Required.",
                              "type": "string"
                            },
                            "tokenRef": {
                              "description": "Utility struct for a reference to a secret key.",
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "secretName": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "gitlab": {
                          "description": "PullRequestGeneratorGitLab defines connection info specific to GitLab.",
                          "type": "object",
                          "properties": {
                            "api": {
                              "description": "The GitLab API URL to talk to. If blank, uses https://gitlab.com/.",
                              "type": "string"
                            },
                            "caRef": {
                              "description": "Utility struct for a reference to a configmap key.",
                              "type": "object",
                              "properties": {
                                "configMapName": {
                                  "type": "string"
                                },
                                "key": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "insecure": {
                              "type": "boolean",
                              "title": "Skips validating the SCM provider's TLS certificate - useful for self-signed certificates.; default: false"
                            },
                            "labels": {
                              "type": "array",
                              "title": "Labels is used to filter the MRs that you want to target",
                              "items": {
                                "type": "string"
                              }
                            },
                            "project": {
                              "description": "GitLab project to scan. Required.",
                              "type": "string"
                            },
                            "pullRequestState": {
                              "description": "PullRequestState is an additional MRs filter to get only those with a certain state. Default: \"\" (all states).\nValid values: opened, closed, merged, locked\".",
                              "type": "string"
                            },
                            "tokenRef": {
                              "description": "Utility struct for a reference to a secret key.",
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "secretName": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "requeueAfterSeconds": {
                          "description": "Standard parameters.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "template": {
                          "type": "object",
                          "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
                          "properties": {
                            "metadata": {
                              "type": "object",
                              "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
                              "properties": {
                                "annotations": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "finalizers": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "labels": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "name": {
                                  "type": "string"
                                },
                                "namespace": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "spec": {
                              "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
                              "type": "object",
                              "properties": {
                                "destination": {
                                  "type": "object",
                                  "title": "ApplicationDestination holds information about the application's destination",
                                  "properties": {
                                    "name": {
                                      "description": "Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.",
                                      "type": "string"
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                                    },
                                    "server": {
                                      "description": "Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "ignoreDifferences": {
                                  "type": "array",
                                  "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                                  "items": {
                                    "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                                    "type": "object",
                                    "properties": {
                                      "group": {
                                        "type": "string"
                                      },
                                      "jqPathExpressions": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "jsonPointers": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "kind": {
                                        "type": "string"
                                      },
                                      "managedFieldsManagers": {
                                        "type": "array",
                                        "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "namespace": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "info": {
                                  "type": "array",
                                  "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "value": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "project": {
                                  "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                                  "type": "string"
                                },
                                "revisionHistoryLimit": {
                                  "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "source": {
                                  "type": "object",
                                  "title": "ApplicationSource contains all required information about the source of an application",
                                  "properties": {
                                    "chart": {
                                      "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                      "type": "string"
                                    },
                                    "directory": {
                                      "type": "object",
                                      "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                      "properties": {
                                        "exclude": {
                                          "type": "string",
                                          "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                        },
                                        "include": {
                                          "type": "string",
                                          "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                        },
                                        "jsonnet": {
                                          "type": "object",
                                          "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                          "properties": {
                                            "extVars": {
                                              "type": "array",
                                              "title": "ExtVars is a list of Jsonnet External Variables",
                                              "items": {
                                                "type": "object",
                                                "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                "properties": {
                                                  "code": {
                                                    "type": "boolean"
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "value": {
                                                    "type": "string"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "libs": {
                                              "type": "array",
                                              "title": "Additional library search dirs",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "tlas": {
                                              "type": "array",
                                              "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                              "items": {
                                                "type": "object",
                                                "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                "properties": {
                                                  "code": {
                                                    "type": "boolean"
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "value": {
                                                    "type": "string"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "recurse": {
                                          "type": "boolean",
                                          "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "helm": {
                                      "type": "object",
                                      "title": "ApplicationSourceHelm holds helm specific options",
                                      "properties": {
                                        "apiVersions": {
                                          "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "fileParameters": {
                                          "type": "array",
                                          "title": "FileParameters are file parameters to the helm template",
                                          "items": {
                                            "type": "object",
                                            "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "title": "Name is the name of the Helm parameter"
                                              },
                                              "path": {
                                                "type": "string",
                                                "title": "Path is the path to the file containing the values for the Helm parameter"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "ignoreMissingValueFiles": {
                                          "type": "boolean",
                                          "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                        },
                                        "kubeVersion": {
                                          "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                          "type": "string"
                                        },
                                        "namespace": {
                                          "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                          "type": "string"
                                        },
                                        "parameters": {
                                          "type": "array",
                                          "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                          "items": {
                                            "type": "object",
                                            "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                            "properties": {
                                              "forceString": {
                                                "type": "boolean",
                                                "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                              },
                                              "name": {
                                                "type": "string",
                                                "title": "Name is the name of the Helm parameter"
                                              },
                                              "value": {
                                                "type": "string",
                                                "title": "Value is the value for the Helm parameter"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "passCredentials": {
                                          "type": "boolean",
                                          "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                        },
                                        "releaseName": {
                                          "type": "string",
                                          "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                        },
                                        "skipCrds": {
                                          "type": "boolean",
                                          "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                        },
                                        "skipSchemaValidation": {
                                          "type": "boolean",
                                          "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                        },
                                        "skipTests": {
                                          "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                          "type": "boolean"
                                        },
                                        "valueFiles": {
                                          "type": "array",
                                          "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "values": {
                                          "type": "string",
                                          "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                        },
                                        "valuesObject": {
                                          "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                          "type": "object",
                                          "properties": {
                                            "raw": {
                                              "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                              "type": "string",
                                              "format": "byte"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "version": {
                                          "type": "string",
                                          "title": "Version is the Helm version to use for templating (\"3\")"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "kustomize": {
                                      "type": "object",
                                      "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                      "properties": {
                                        "apiVersions": {
                                          "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "commonAnnotations": {
                                          "type": "object",
                                          "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "commonAnnotationsEnvsubst": {
                                          "type": "boolean",
                                          "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                        },
                                        "commonLabels": {
                                          "type": "object",
                                          "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "components": {
                                          "type": "array",
                                          "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "forceCommonAnnotations": {
                                          "type": "boolean",
                                          "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                        },
                                        "forceCommonLabels": {
                                          "type": "boolean",
                                          "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                        },
                                        "ignoreMissingComponents": {
                                          "type": "boolean",
                                          "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                        },
                                        "images": {
                                          "type": "array",
                                          "title": "Images is a list of Kustomize image override specifications",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "kubeVersion": {
                                          "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                          "type": "string"
                                        },
                                        "labelIncludeTemplates": {
                                          "type": "boolean",
                                          "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                        },
                                        "labelWithoutSelector": {
                                          "type": "boolean",
                                          "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                        },
                                        "namePrefix": {
                                          "type": "string",
                                          "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                        },
                                        "nameSuffix": {
                                          "type": "string",
                                          "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                        },
                                        "namespace": {
                                          "type": "string",
                                          "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                        },
                                        "patches": {
                                          "type": "array",
                                          "title": "Patches is a list of Kustomize patches",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "options": {
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "boolean"
                                                }
                                              },
                                              "patch": {
                                                "type": "string"
                                              },
                                              "path": {
                                                "type": "string"
                                              },
                                              "target": {
                                                "type": "object",
                                                "properties": {
                                                  "annotationSelector": {
                                                    "type": "string"
                                                  },
                                                  "labelSelector": {
                                                    "type": "string"
                                                  },
                                                  "resId": {
                                                    "type": "object",
                                                    "properties": {
                                                      "gvk": {
                                                        "type": "object",
                                                        "properties": {
                                                          "group": {
                                                            "type": "string"
                                                          },
                                                          "kind": {
                                                            "type": "string"
                                                          },
                                                          "version": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      },
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "namespace": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "replicas": {
                                          "type": "array",
                                          "title": "Replicas is a list of Kustomize Replicas override specifications",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "count": {
                                                "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                "type": "object",
                                                "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                "properties": {
                                                  "intVal": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                  },
                                                  "strVal": {
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "name": {
                                                "type": "string",
                                                "title": "Name of Deployment or StatefulSet"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "version": {
                                          "type": "string",
                                          "title": "Version controls which version of Kustomize to use for rendering manifests"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "name": {
                                      "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                      "type": "string"
                                    },
                                    "plugin": {
                                      "type": "object",
                                      "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                      "properties": {
                                        "env": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "title": "EnvEntry represents an entry in the application's environment",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "title": "Name is the name of the variable, usually expressed in uppercase"
                                              },
                                              "value": {
                                                "type": "string",
                                                "title": "Value is the value of the variable"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "parameters": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "array": {
                                                "description": "Array is the value of an array type parameter.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "map": {
                                                "description": "Map is the value of a map type parameter.",
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              },
                                              "name": {
                                                "description": "Name is the name identifying a parameter.",
                                                "type": "string"
                                              },
                                              "string": {
                                                "description": "String_ is the value of a string type parameter.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "ref": {
                                      "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                      "type": "string"
                                    },
                                    "repoURL": {
                                      "type": "string",
                                      "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                    },
                                    "targetRevision": {
                                      "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "sourceHydrator": {
                                  "description": "SourceHydrator specifies a dry \"don't repeat yourself\" source for manifests, a sync source from which to sync\nhydrated manifests, and an optional hydrateTo location to act as a \"staging\" aread for hydrated manifests.",
                                  "type": "object",
                                  "properties": {
                                    "drySource": {
                                      "description": "DrySource specifies a location for dry \"don't repeat yourself\" manifest source information.",
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string",
                                          "title": "Path is a directory path within the Git repository where the manifests are located"
                                        },
                                        "repoURL": {
                                          "type": "string",
                                          "title": "RepoURL is the URL to the git repository that contains the application manifests"
                                        },
                                        "targetRevision": {
                                          "type": "string",
                                          "title": "TargetRevision defines the revision of the source to hydrate"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "hydrateTo": {
                                      "description": "HydrateTo specifies a location to which hydrated manifests should be pushed as a \"staging area\" before being moved to\nthe SyncSource. The RepoURL and Path are assumed based on the associated SyncSource config in the SourceHydrator.",
                                      "type": "object",
                                      "properties": {
                                        "targetBranch": {
                                          "type": "string",
                                          "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "syncSource": {
                                      "description": "SyncSource specifies a location from which hydrated manifests may be synced. RepoURL is assumed based on the\nassociated DrySource config in the SourceHydrator.",
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "description": "Path is a directory path within the git repository where hydrated manifests should be committed to and synced\nfrom. If hydrateTo is set, this is just the path from which hydrated manifests will be synced.",
                                          "type": "string"
                                        },
                                        "targetBranch": {
                                          "type": "string",
                                          "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "sources": {
                                  "type": "array",
                                  "title": "Sources is a reference to the location of the application's manifests or chart",
                                  "items": {
                                    "type": "object",
                                    "title": "ApplicationSource contains all required information about the source of an application",
                                    "properties": {
                                      "chart": {
                                        "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                        "type": "string"
                                      },
                                      "directory": {
                                        "type": "object",
                                        "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                        "properties": {
                                          "exclude": {
                                            "type": "string",
                                            "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                          },
                                          "include": {
                                            "type": "string",
                                            "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                          },
                                          "jsonnet": {
                                            "type": "object",
                                            "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                            "properties": {
                                              "extVars": {
                                                "type": "array",
                                                "title": "ExtVars is a list of Jsonnet External Variables",
                                                "items": {
                                                  "type": "object",
                                                  "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                  "properties": {
                                                    "code": {
                                                      "type": "boolean"
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              },
                                              "libs": {
                                                "type": "array",
                                                "title": "Additional library search dirs",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "tlas": {
                                                "type": "array",
                                                "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                "items": {
                                                  "type": "object",
                                                  "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                  "properties": {
                                                    "code": {
                                                      "type": "boolean"
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "recurse": {
                                            "type": "boolean",
                                            "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "helm": {
                                        "type": "object",
                                        "title": "ApplicationSourceHelm holds helm specific options",
                                        "properties": {
                                          "apiVersions": {
                                            "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "fileParameters": {
                                            "type": "array",
                                            "title": "FileParameters are file parameters to the helm template",
                                            "items": {
                                              "type": "object",
                                              "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name is the name of the Helm parameter"
                                                },
                                                "path": {
                                                  "type": "string",
                                                  "title": "Path is the path to the file containing the values for the Helm parameter"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "ignoreMissingValueFiles": {
                                            "type": "boolean",
                                            "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                          },
                                          "kubeVersion": {
                                            "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                            "type": "string"
                                          },
                                          "namespace": {
                                            "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                            "type": "string"
                                          },
                                          "parameters": {
                                            "type": "array",
                                            "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                            "items": {
                                              "type": "object",
                                              "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                              "properties": {
                                                "forceString": {
                                                  "type": "boolean",
                                                  "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name is the name of the Helm parameter"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "title": "Value is the value for the Helm parameter"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "passCredentials": {
                                            "type": "boolean",
                                            "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                          },
                                          "releaseName": {
                                            "type": "string",
                                            "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                          },
                                          "skipCrds": {
                                            "type": "boolean",
                                            "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                          },
                                          "skipSchemaValidation": {
                                            "type": "boolean",
                                            "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                          },
                                          "skipTests": {
                                            "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                            "type": "boolean"
                                          },
                                          "valueFiles": {
                                            "type": "array",
                                            "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "values": {
                                            "type": "string",
                                            "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                          },
                                          "valuesObject": {
                                            "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                            "type": "object",
                                            "properties": {
                                              "raw": {
                                                "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                "type": "string",
                                                "format": "byte"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "version": {
                                            "type": "string",
                                            "title": "Version is the Helm version to use for templating (\"3\")"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "kustomize": {
                                        "type": "object",
                                        "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                        "properties": {
                                          "apiVersions": {
                                            "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "commonAnnotations": {
                                            "type": "object",
                                            "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "commonAnnotationsEnvsubst": {
                                            "type": "boolean",
                                            "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                          },
                                          "commonLabels": {
                                            "type": "object",
                                            "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "components": {
                                            "type": "array",
                                            "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "forceCommonAnnotations": {
                                            "type": "boolean",
                                            "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                          },
                                          "forceCommonLabels": {
                                            "type": "boolean",
                                            "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                          },
                                          "ignoreMissingComponents": {
                                            "type": "boolean",
                                            "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                          },
                                          "images": {
                                            "type": "array",
                                            "title": "Images is a list of Kustomize image override specifications",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "kubeVersion": {
                                            "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                            "type": "string"
                                          },
                                          "labelIncludeTemplates": {
                                            "type": "boolean",
                                            "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                          },
                                          "labelWithoutSelector": {
                                            "type": "boolean",
                                            "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                          },
                                          "namePrefix": {
                                            "type": "string",
                                            "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                          },
                                          "nameSuffix": {
                                            "type": "string",
                                            "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                          },
                                          "namespace": {
                                            "type": "string",
                                            "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                          },
                                          "patches": {
                                            "type": "array",
                                            "title": "Patches is a list of Kustomize patches",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "options": {
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "type": "boolean"
                                                  }
                                                },
                                                "patch": {
                                                  "type": "string"
                                                },
                                                "path": {
                                                  "type": "string"
                                                },
                                                "target": {
                                                  "type": "object",
                                                  "properties": {
                                                    "annotationSelector": {
                                                      "type": "string"
                                                    },
                                                    "labelSelector": {
                                                      "type": "string"
                                                    },
                                                    "resId": {
                                                      "type": "object",
                                                      "properties": {
                                                        "gvk": {
                                                          "type": "object",
                                                          "properties": {
                                                            "group": {
                                                              "type": "string"
                                                            },
                                                            "kind": {
                                                              "type": "string"
                                                            },
                                                            "version": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        },
                                                        "name": {
                                                          "type": "string"
                                                        },
                                                        "namespace": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "replicas": {
                                            "type": "array",
                                            "title": "Replicas is a list of Kustomize Replicas override specifications",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "count": {
                                                  "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                  "type": "object",
                                                  "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                  "properties": {
                                                    "intVal": {
                                                      "type": "integer",
                                                      "format": "int32"
                                                    },
                                                    "strVal": {
                                                      "type": "string"
                                                    },
                                                    "type": {
                                                      "type": "integer",
                                                      "format": "int64"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name of Deployment or StatefulSet"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "version": {
                                            "type": "string",
                                            "title": "Version controls which version of Kustomize to use for rendering manifests"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "name": {
                                        "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                        "type": "string"
                                      },
                                      "path": {
                                        "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                        "type": "string"
                                      },
                                      "plugin": {
                                        "type": "object",
                                        "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                        "properties": {
                                          "env": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "title": "EnvEntry represents an entry in the application's environment",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name is the name of the variable, usually expressed in uppercase"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "title": "Value is the value of the variable"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "parameters": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "array": {
                                                  "description": "Array is the value of an array type parameter.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "map": {
                                                  "description": "Map is the value of a map type parameter.",
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "type": "string"
                                                  }
                                                },
                                                "name": {
                                                  "description": "Name is the name identifying a parameter.",
                                                  "type": "string"
                                                },
                                                "string": {
                                                  "description": "String_ is the value of a string type parameter.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "ref": {
                                        "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                        "type": "string"
                                      },
                                      "repoURL": {
                                        "type": "string",
                                        "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                      },
                                      "targetRevision": {
                                        "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "syncPolicy": {
                                  "type": "object",
                                  "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                                  "properties": {
                                    "automated": {
                                      "type": "object",
                                      "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                                      "properties": {
                                        "allowEmpty": {
                                          "type": "boolean",
                                          "title": "AllowEmpty allows apps have zero live resources (default: false)"
                                        },
                                        "enable": {
                                          "type": "boolean",
                                          "title": "Enable allows apps to explicitly control automated sync"
                                        },
                                        "prune": {
                                          "type": "boolean",
                                          "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                                        },
                                        "selfHeal": {
                                          "type": "boolean",
                                          "title": "SelfHeal specifies whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "managedNamespaceMetadata": {
                                      "type": "object",
                                      "properties": {
                                        "annotations": {
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "labels": {
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "retry": {
                                      "type": "object",
                                      "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                                      "properties": {
                                        "backoff": {
                                          "type": "object",
                                          "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                                          "properties": {
                                            "duration": {
                                              "type": "string",
                                              "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                                            },
                                            "factor": {
                                              "type": "integer",
                                              "format": "int64",
                                              "title": "Factor is a factor to multiply the base duration after each failed retry"
                                            },
                                            "maxDuration": {
                                              "type": "string",
                                              "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "limit": {
                                          "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                          "type": "integer",
                                          "format": "int64"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "syncOptions": {
                                      "type": "array",
                                      "title": "Options allow you to specify whole app sync-options",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "values": {
                          "type": "object",
                          "title": "Values contains key/value pairs which are passed directly as parameters to the template",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "scmProvider": {
                      "description": "SCMProviderGenerator defines a generator that scrapes a SCMaaS API to find candidate repos.",
                      "type": "object",
                      "properties": {
                        "awsCodeCommit": {
                          "description": "SCMProviderGeneratorAWSCodeCommit defines connection info specific to AWS CodeCommit.",
                          "type": "object",
                          "properties": {
                            "allBranches": {
                              "description": "Scan all branches instead of just the default branch.",
                              "type": "boolean"
                            },
                            "region": {
                              "description": "Region provides the AWS region to discover repos.\nif not provided, AppSet controller will infer the current region from environment.",
                              "type": "string"
                            },
                            "role": {
                              "description": "Role provides the AWS IAM role to assume, for cross-account repo discovery\nif not provided, AppSet controller will use its pod/node identity to discover.",
                              "type": "string"
                            },
                            "tagFilters": {
                              "type": "array",
                              "title": "TagFilters provides the tag filter(s) for repo discovery",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            }
                          },
                          "additionalProperties": false
                        },
                        "azureDevOps": {
                          "description": "SCMProviderGeneratorAzureDevOps defines connection info specific to Azure DevOps.",
                          "type": "object",
                          "properties": {
                            "accessTokenRef": {
                              "description": "Utility struct for a reference to a secret key.",
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "secretName": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "allBranches": {
                              "description": "Scan all branches instead of just the default branch.",
                              "type": "boolean"
                            },
                            "api": {
                              "description": "The URL to Azure DevOps. If blank, use https://dev.azure.com.",
                              "type": "string"
                            },
                            "organization": {
                              "description": "Azure Devops organization. Required. E.g. \"my-organization\".",
                              "type": "string"
                            },
                            "teamProject": {
                              "description": "Azure Devops team project. Required. E.g. \"my-team\".",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "bitbucket": {
                          "description": "SCMProviderGeneratorBitbucket defines connection info specific to Bitbucket Cloud (API version 2).",
                          "type": "object",
                          "properties": {
                            "allBranches": {
                              "description": "Scan all branches instead of just the main branch.",
                              "type": "boolean"
                            },
                            "appPasswordRef": {
                              "description": "Utility struct for a reference to a secret key.",
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "secretName": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "owner": {
                              "description": "Bitbucket workspace to scan. Required.",
                              "type": "string"
                            },
                            "user": {
                              "type": "string",
                              "title": "Bitbucket user to use when authenticating.  Should have a \"member\" role to be able to read all repositories and branches.  Required"
                            }
                          },
                          "additionalProperties": false
                        },
                        "bitbucketServer": {
                          "description": "SCMProviderGeneratorBitbucketServer defines connection info specific to Bitbucket Server.",
                          "type": "object",
                          "properties": {
                            "allBranches": {
                              "description": "Scan all branches instead of just the default branch.",
                              "type": "boolean"
                            },
                            "api": {
                              "description": "The Bitbucket Server REST API URL to talk to. Required.",
                              "type": "string"
                            },
                            "basicAuth": {
                              "description": "BasicAuthBitbucketServer defines the username/(password or personal access token) for Basic auth.",
                              "type": "object",
                              "properties": {
                                "passwordRef": {
                                  "description": "Utility struct for a reference to a secret key.",
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "secretName": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "username": {
                                  "type": "string",
                                  "title": "Username for Basic auth"
                                }
                              },
                              "additionalProperties": false
                            },
                            "bearerToken": {
                              "description": "BearerTokenBitbucket defines the Bearer token for BitBucket AppToken auth.",
                              "type": "object",
                              "properties": {
                                "tokenRef": {
                                  "description": "Utility struct for a reference to a secret key.",
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "secretName": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "caRef": {
                              "description": "Utility struct for a reference to a configmap key.",
                              "type": "object",
                              "properties": {
                                "configMapName": {
                                  "type": "string"
                                },
                                "key": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "insecure": {
                              "type": "boolean",
                              "title": "Allow self-signed TLS / Certificates; default: false"
                            },
                            "project": {
                              "description": "Project to scan. Required.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "cloneProtocol": {
                          "description": "Which protocol to use for the SCM URL. Default is provider-specific but ssh if possible. Not all providers\nnecessarily support all protocols.",
                          "type": "string"
                        },
                        "filters": {
                          "description": "Filters for which repos should be considered.",
                          "type": "array",
                          "items": {
                            "description": "SCMProviderGeneratorFilter is a single repository filter.\nIf multiple filter types are set on a single struct, they will be AND'd together. All filters must\npass for a repo to be included.",
                            "type": "object",
                            "properties": {
                              "branchMatch": {
                                "description": "A regex which must match the branch name.",
                                "type": "string"
                              },
                              "labelMatch": {
                                "description": "A regex which must match at least one label.",
                                "type": "string"
                              },
                              "pathsDoNotExist": {
                                "description": "An array of paths, all of which must not exist.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "pathsExist": {
                                "description": "An array of paths, all of which must exist.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "repositoryMatch": {
                                "description": "A regex for repo names.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "gitea": {
                          "description": "SCMProviderGeneratorGitea defines a connection info specific to Gitea.",
                          "type": "object",
                          "properties": {
                            "allBranches": {
                              "description": "Scan all branches instead of just the default branch.",
                              "type": "boolean"
                            },
                            "api": {
                              "description": "The Gitea URL to talk to. For example https://gitea.mydomain.com/.",
                              "type": "string"
                            },
                            "insecure": {
                              "type": "boolean",
                              "title": "Allow self-signed TLS / Certificates; default: false"
                            },
                            "owner": {
                              "description": "Gitea organization or user to scan. Required.",
                              "type": "string"
                            },
                            "tokenRef": {
                              "description": "Utility struct for a reference to a secret key.",
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "secretName": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "github": {
                          "description": "SCMProviderGeneratorGithub defines connection info specific to GitHub.",
                          "type": "object",
                          "properties": {
                            "allBranches": {
                              "description": "Scan all branches instead of just the default branch.",
                              "type": "boolean"
                            },
                            "api": {
                              "description": "The GitHub API URL to talk to. If blank, use https://api.github.com/.",
                              "type": "string"
                            },
                            "appSecretName": {
                              "description": "AppSecretName is a reference to a GitHub App repo-creds secret.",
                              "type": "string"
                            },
                            "organization": {
                              "description": "GitHub org to scan. Required.",
                              "type": "string"
                            },
                            "tokenRef": {
                              "description": "Utility struct for a reference to a secret key.",
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "secretName": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "gitlab": {
                          "description": "SCMProviderGeneratorGitlab defines connection info specific to Gitlab.",
                          "type": "object",
                          "properties": {
                            "allBranches": {
                              "description": "Scan all branches instead of just the default branch.",
                              "type": "boolean"
                            },
                            "api": {
                              "description": "The Gitlab API URL to talk to.",
                              "type": "string"
                            },
                            "caRef": {
                              "description": "Utility struct for a reference to a configmap key.",
                              "type": "object",
                              "properties": {
                                "configMapName": {
                                  "type": "string"
                                },
                                "key": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "group": {
                              "description": "Gitlab group to scan. Required.  You can use either the project id (recommended) or the full namespaced path.",
                              "type": "string"
                            },
                            "includeSharedProjects": {
                              "type": "boolean",
                              "title": "When recursing through subgroups, also include shared Projects (true) or scan only the subgroups under same path (false).  Defaults to \"true\""
                            },
                            "includeSubgroups": {
                              "type": "boolean",
                              "title": "Recurse through subgroups (true) or scan only the base group (false).  Defaults to \"false\""
                            },
                            "insecure": {
                              "type": "boolean",
                              "title": "Skips validating the SCM provider's TLS certificate - useful for self-signed certificates.; default: false"
                            },
                            "tokenRef": {
                              "description": "Utility struct for a reference to a secret key.",
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "secretName": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "topic": {
                              "description": "Filter repos list based on Gitlab Topic.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "requeueAfterSeconds": {
                          "description": "Standard parameters.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "template": {
                          "type": "object",
                          "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
                          "properties": {
                            "metadata": {
                              "type": "object",
                              "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
                              "properties": {
                                "annotations": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "finalizers": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "labels": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "name": {
                                  "type": "string"
                                },
                                "namespace": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "spec": {
                              "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
                              "type": "object",
                              "properties": {
                                "destination": {
                                  "type": "object",
                                  "title": "ApplicationDestination holds information about the application's destination",
                                  "properties": {
                                    "name": {
                                      "description": "Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.",
                                      "type": "string"
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                                    },
                                    "server": {
                                      "description": "Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "ignoreDifferences": {
                                  "type": "array",
                                  "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                                  "items": {
                                    "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                                    "type": "object",
                                    "properties": {
                                      "group": {
                                        "type": "string"
                                      },
                                      "jqPathExpressions": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "jsonPointers": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "kind": {
                                        "type": "string"
                                      },
                                      "managedFieldsManagers": {
                                        "type": "array",
                                        "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "namespace": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "info": {
                                  "type": "array",
                                  "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "value": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "project": {
                                  "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                                  "type": "string"
                                },
                                "revisionHistoryLimit": {
                                  "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "source": {
                                  "type": "object",
                                  "title": "ApplicationSource contains all required information about the source of an application",
                                  "properties": {
                                    "chart": {
                                      "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                      "type": "string"
                                    },
                                    "directory": {
                                      "type": "object",
                                      "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                      "properties": {
                                        "exclude": {
                                          "type": "string",
                                          "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                        },
                                        "include": {
                                          "type": "string",
                                          "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                        },
                                        "jsonnet": {
                                          "type": "object",
                                          "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                          "properties": {
                                            "extVars": {
                                              "type": "array",
                                              "title": "ExtVars is a list of Jsonnet External Variables",
                                              "items": {
                                                "type": "object",
                                                "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                "properties": {
                                                  "code": {
                                                    "type": "boolean"
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "value": {
                                                    "type": "string"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "libs": {
                                              "type": "array",
                                              "title": "Additional library search dirs",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "tlas": {
                                              "type": "array",
                                              "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                              "items": {
                                                "type": "object",
                                                "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                "properties": {
                                                  "code": {
                                                    "type": "boolean"
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "value": {
                                                    "type": "string"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "recurse": {
                                          "type": "boolean",
                                          "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "helm": {
                                      "type": "object",
                                      "title": "ApplicationSourceHelm holds helm specific options",
                                      "properties": {
                                        "apiVersions": {
                                          "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "fileParameters": {
                                          "type": "array",
                                          "title": "FileParameters are file parameters to the helm template",
                                          "items": {
                                            "type": "object",
                                            "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "title": "Name is the name of the Helm parameter"
                                              },
                                              "path": {
                                                "type": "string",
                                                "title": "Path is the path to the file containing the values for the Helm parameter"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "ignoreMissingValueFiles": {
                                          "type": "boolean",
                                          "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                        },
                                        "kubeVersion": {
                                          "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                          "type": "string"
                                        },
                                        "namespace": {
                                          "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                          "type": "string"
                                        },
                                        "parameters": {
                                          "type": "array",
                                          "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                          "items": {
                                            "type": "object",
                                            "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                            "properties": {
                                              "forceString": {
                                                "type": "boolean",
                                                "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                              },
                                              "name": {
                                                "type": "string",
                                                "title": "Name is the name of the Helm parameter"
                                              },
                                              "value": {
                                                "type": "string",
                                                "title": "Value is the value for the Helm parameter"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "passCredentials": {
                                          "type": "boolean",
                                          "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                        },
                                        "releaseName": {
                                          "type": "string",
                                          "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                        },
                                        "skipCrds": {
                                          "type": "boolean",
                                          "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                        },
                                        "skipSchemaValidation": {
                                          "type": "boolean",
                                          "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                        },
                                        "skipTests": {
                                          "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                          "type": "boolean"
                                        },
                                        "valueFiles": {
                                          "type": "array",
                                          "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "values": {
                                          "type": "string",
                                          "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                        },
                                        "valuesObject": {
                                          "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                          "type": "object",
                                          "properties": {
                                            "raw": {
                                              "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                              "type": "string",
                                              "format": "byte"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "version": {
                                          "type": "string",
                                          "title": "Version is the Helm version to use for templating (\"3\")"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "kustomize": {
                                      "type": "object",
                                      "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                      "properties": {
                                        "apiVersions": {
                                          "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "commonAnnotations": {
                                          "type": "object",
                                          "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "commonAnnotationsEnvsubst": {
                                          "type": "boolean",
                                          "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                        },
                                        "commonLabels": {
                                          "type": "object",
                                          "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "components": {
                                          "type": "array",
                                          "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "forceCommonAnnotations": {
                                          "type": "boolean",
                                          "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                        },
                                        "forceCommonLabels": {
                                          "type": "boolean",
                                          "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                        },
                                        "ignoreMissingComponents": {
                                          "type": "boolean",
                                          "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                        },
                                        "images": {
                                          "type": "array",
                                          "title": "Images is a list of Kustomize image override specifications",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "kubeVersion": {
                                          "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                          "type": "string"
                                        },
                                        "labelIncludeTemplates": {
                                          "type": "boolean",
                                          "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                        },
                                        "labelWithoutSelector": {
                                          "type": "boolean",
                                          "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                        },
                                        "namePrefix": {
                                          "type": "string",
                                          "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                        },
                                        "nameSuffix": {
                                          "type": "string",
                                          "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                        },
                                        "namespace": {
                                          "type": "string",
                                          "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                        },
                                        "patches": {
                                          "type": "array",
                                          "title": "Patches is a list of Kustomize patches",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "options": {
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "boolean"
                                                }
                                              },
                                              "patch": {
                                                "type": "string"
                                              },
                                              "path": {
                                                "type": "string"
                                              },
                                              "target": {
                                                "type": "object",
                                                "properties": {
                                                  "annotationSelector": {
                                                    "type": "string"
                                                  },
                                                  "labelSelector": {
                                                    "type": "string"
                                                  },
                                                  "resId": {
                                                    "type": "object",
                                                    "properties": {
                                                      "gvk": {
                                                        "type": "object",
                                                        "properties": {
                                                          "group": {
                                                            "type": "string"
                                                          },
                                                          "kind": {
                                                            "type": "string"
                                                          },
                                                          "version": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      },
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "namespace": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "replicas": {
                                          "type": "array",
                                          "title": "Replicas is a list of Kustomize Replicas override specifications",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "count": {
                                                "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                "type": "object",
                                                "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                "properties": {
                                                  "intVal": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                  },
                                                  "strVal": {
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "name": {
                                                "type": "string",
                                                "title": "Name of Deployment or StatefulSet"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "version": {
                                          "type": "string",
                                          "title": "Version controls which version of Kustomize to use for rendering manifests"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "name": {
                                      "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                      "type": "string"
                                    },
                                    "plugin": {
                                      "type": "object",
                                      "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                      "properties": {
                                        "env": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "title": "EnvEntry represents an entry in the application's environment",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "title": "Name is the name of the variable, usually expressed in uppercase"
                                              },
                                              "value": {
                                                "type": "string",
                                                "title": "Value is the value of the variable"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "parameters": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "array": {
                                                "description": "Array is the value of an array type parameter.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "map": {
                                                "description": "Map is the value of a map type parameter.",
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              },
                                              "name": {
                                                "description": "Name is the name identifying a parameter.",
                                                "type": "string"
                                              },
                                              "string": {
                                                "description": "String_ is the value of a string type parameter.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "ref": {
                                      "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                      "type": "string"
                                    },
                                    "repoURL": {
                                      "type": "string",
                                      "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                    },
                                    "targetRevision": {
                                      "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "sourceHydrator": {
                                  "description": "SourceHydrator specifies a dry \"don't repeat yourself\" source for manifests, a sync source from which to sync\nhydrated manifests, and an optional hydrateTo location to act as a \"staging\" aread for hydrated manifests.",
                                  "type": "object",
                                  "properties": {
                                    "drySource": {
                                      "description": "DrySource specifies a location for dry \"don't repeat yourself\" manifest source information.",
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string",
                                          "title": "Path is a directory path within the Git repository where the manifests are located"
                                        },
                                        "repoURL": {
                                          "type": "string",
                                          "title": "RepoURL is the URL to the git repository that contains the application manifests"
                                        },
                                        "targetRevision": {
                                          "type": "string",
                                          "title": "TargetRevision defines the revision of the source to hydrate"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "hydrateTo": {
                                      "description": "HydrateTo specifies a location to which hydrated manifests should be pushed as a \"staging area\" before being moved to\nthe SyncSource. The RepoURL and Path are assumed based on the associated SyncSource config in the SourceHydrator.",
                                      "type": "object",
                                      "properties": {
                                        "targetBranch": {
                                          "type": "string",
                                          "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "syncSource": {
                                      "description": "SyncSource specifies a location from which hydrated manifests may be synced. RepoURL is assumed based on the\nassociated DrySource config in the SourceHydrator.",
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "description": "Path is a directory path within the git repository where hydrated manifests should be committed to and synced\nfrom. If hydrateTo is set, this is just the path from which hydrated manifests will be synced.",
                                          "type": "string"
                                        },
                                        "targetBranch": {
                                          "type": "string",
                                          "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "sources": {
                                  "type": "array",
                                  "title": "Sources is a reference to the location of the application's manifests or chart",
                                  "items": {
                                    "type": "object",
                                    "title": "ApplicationSource contains all required information about the source of an application",
                                    "properties": {
                                      "chart": {
                                        "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                        "type": "string"
                                      },
                                      "directory": {
                                        "type": "object",
                                        "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                        "properties": {
                                          "exclude": {
                                            "type": "string",
                                            "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                          },
                                          "include": {
                                            "type": "string",
                                            "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                          },
                                          "jsonnet": {
                                            "type": "object",
                                            "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                            "properties": {
                                              "extVars": {
                                                "type": "array",
                                                "title": "ExtVars is a list of Jsonnet External Variables",
                                                "items": {
                                                  "type": "object",
                                                  "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                  "properties": {
                                                    "code": {
                                                      "type": "boolean"
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              },
                                              "libs": {
                                                "type": "array",
                                                "title": "Additional library search dirs",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "tlas": {
                                                "type": "array",
                                                "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                                "items": {
                                                  "type": "object",
                                                  "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                                  "properties": {
                                                    "code": {
                                                      "type": "boolean"
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "recurse": {
                                            "type": "boolean",
                                            "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "helm": {
                                        "type": "object",
                                        "title": "ApplicationSourceHelm holds helm specific options",
                                        "properties": {
                                          "apiVersions": {
                                            "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "fileParameters": {
                                            "type": "array",
                                            "title": "FileParameters are file parameters to the helm template",
                                            "items": {
                                              "type": "object",
                                              "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name is the name of the Helm parameter"
                                                },
                                                "path": {
                                                  "type": "string",
                                                  "title": "Path is the path to the file containing the values for the Helm parameter"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "ignoreMissingValueFiles": {
                                            "type": "boolean",
                                            "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                          },
                                          "kubeVersion": {
                                            "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                            "type": "string"
                                          },
                                          "namespace": {
                                            "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                            "type": "string"
                                          },
                                          "parameters": {
                                            "type": "array",
                                            "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                            "items": {
                                              "type": "object",
                                              "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                              "properties": {
                                                "forceString": {
                                                  "type": "boolean",
                                                  "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name is the name of the Helm parameter"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "title": "Value is the value for the Helm parameter"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "passCredentials": {
                                            "type": "boolean",
                                            "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                          },
                                          "releaseName": {
                                            "type": "string",
                                            "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                          },
                                          "skipCrds": {
                                            "type": "boolean",
                                            "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                          },
                                          "skipSchemaValidation": {
                                            "type": "boolean",
                                            "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                          },
                                          "skipTests": {
                                            "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                            "type": "boolean"
                                          },
                                          "valueFiles": {
                                            "type": "array",
                                            "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "values": {
                                            "type": "string",
                                            "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                          },
                                          "valuesObject": {
                                            "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                            "type": "object",
                                            "properties": {
                                              "raw": {
                                                "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                                "type": "string",
                                                "format": "byte"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "version": {
                                            "type": "string",
                                            "title": "Version is the Helm version to use for templating (\"3\")"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "kustomize": {
                                        "type": "object",
                                        "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                        "properties": {
                                          "apiVersions": {
                                            "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "commonAnnotations": {
                                            "type": "object",
                                            "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "commonAnnotationsEnvsubst": {
                                            "type": "boolean",
                                            "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                          },
                                          "commonLabels": {
                                            "type": "object",
                                            "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "components": {
                                            "type": "array",
                                            "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "forceCommonAnnotations": {
                                            "type": "boolean",
                                            "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                          },
                                          "forceCommonLabels": {
                                            "type": "boolean",
                                            "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                          },
                                          "ignoreMissingComponents": {
                                            "type": "boolean",
                                            "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                          },
                                          "images": {
                                            "type": "array",
                                            "title": "Images is a list of Kustomize image override specifications",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "kubeVersion": {
                                            "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                            "type": "string"
                                          },
                                          "labelIncludeTemplates": {
                                            "type": "boolean",
                                            "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                          },
                                          "labelWithoutSelector": {
                                            "type": "boolean",
                                            "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                          },
                                          "namePrefix": {
                                            "type": "string",
                                            "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                          },
                                          "nameSuffix": {
                                            "type": "string",
                                            "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                          },
                                          "namespace": {
                                            "type": "string",
                                            "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                          },
                                          "patches": {
                                            "type": "array",
                                            "title": "Patches is a list of Kustomize patches",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "options": {
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "type": "boolean"
                                                  }
                                                },
                                                "patch": {
                                                  "type": "string"
                                                },
                                                "path": {
                                                  "type": "string"
                                                },
                                                "target": {
                                                  "type": "object",
                                                  "properties": {
                                                    "annotationSelector": {
                                                      "type": "string"
                                                    },
                                                    "labelSelector": {
                                                      "type": "string"
                                                    },
                                                    "resId": {
                                                      "type": "object",
                                                      "properties": {
                                                        "gvk": {
                                                          "type": "object",
                                                          "properties": {
                                                            "group": {
                                                              "type": "string"
                                                            },
                                                            "kind": {
                                                              "type": "string"
                                                            },
                                                            "version": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        },
                                                        "name": {
                                                          "type": "string"
                                                        },
                                                        "namespace": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "replicas": {
                                            "type": "array",
                                            "title": "Replicas is a list of Kustomize Replicas override specifications",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "count": {
                                                  "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                                  "type": "object",
                                                  "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                                  "properties": {
                                                    "intVal": {
                                                      "type": "integer",
                                                      "format": "int32"
                                                    },
                                                    "strVal": {
                                                      "type": "string"
                                                    },
                                                    "type": {
                                                      "type": "integer",
                                                      "format": "int64"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name of Deployment or StatefulSet"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "version": {
                                            "type": "string",
                                            "title": "Version controls which version of Kustomize to use for rendering manifests"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "name": {
                                        "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                                        "type": "string"
                                      },
                                      "path": {
                                        "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                        "type": "string"
                                      },
                                      "plugin": {
                                        "type": "object",
                                        "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                        "properties": {
                                          "env": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "title": "EnvEntry represents an entry in the application's environment",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name is the name of the variable, usually expressed in uppercase"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "title": "Value is the value of the variable"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "parameters": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "array": {
                                                  "description": "Array is the value of an array type parameter.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "map": {
                                                  "description": "Map is the value of a map type parameter.",
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "type": "string"
                                                  }
                                                },
                                                "name": {
                                                  "description": "Name is the name identifying a parameter.",
                                                  "type": "string"
                                                },
                                                "string": {
                                                  "description": "String_ is the value of a string type parameter.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "ref": {
                                        "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                        "type": "string"
                                      },
                                      "repoURL": {
                                        "type": "string",
                                        "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                      },
                                      "targetRevision": {
                                        "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "syncPolicy": {
                                  "type": "object",
                                  "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                                  "properties": {
                                    "automated": {
                                      "type": "object",
                                      "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                                      "properties": {
                                        "allowEmpty": {
                                          "type": "boolean",
                                          "title": "AllowEmpty allows apps have zero live resources (default: false)"
                                        },
                                        "enable": {
                                          "type": "boolean",
                                          "title": "Enable allows apps to explicitly control automated sync"
                                        },
                                        "prune": {
                                          "type": "boolean",
                                          "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                                        },
                                        "selfHeal": {
                                          "type": "boolean",
                                          "title": "SelfHeal specifies whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "managedNamespaceMetadata": {
                                      "type": "object",
                                      "properties": {
                                        "annotations": {
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "labels": {
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "retry": {
                                      "type": "object",
                                      "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                                      "properties": {
                                        "backoff": {
                                          "type": "object",
                                          "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                                          "properties": {
                                            "duration": {
                                              "type": "string",
                                              "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                                            },
                                            "factor": {
                                              "type": "integer",
                                              "format": "int64",
                                              "title": "Factor is a factor to multiply the base duration after each failed retry"
                                            },
                                            "maxDuration": {
                                              "type": "string",
                                              "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "limit": {
                                          "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                          "type": "integer",
                                          "format": "int64"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "syncOptions": {
                                      "type": "array",
                                      "title": "Options allow you to specify whole app sync-options",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "values": {
                          "type": "object",
                          "title": "Values contains key/value pairs which are passed directly as parameters to the template",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "selector": {
                      "type": "object",
                      "title": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.\n+structType=atomic",
                      "properties": {
                        "matchExpressions": {
                          "type": "array",
                          "title": "matchExpressions is a list of label selector requirements. The requirements are ANDed.\n+optional\n+listType=atomic",
                          "items": {
                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                            "type": "object",
                            "properties": {
                              "key": {
                                "description": "key is the label key that the selector applies to.",
                                "type": "string"
                              },
                              "operator": {
                                "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                "type": "string"
                              },
                              "values": {
                                "type": "array",
                                "title": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.\n+optional\n+listType=atomic",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "matchLabels": {
                          "type": "object",
                          "title": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n+optional",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "goTemplate": {
                "type": "boolean"
              },
              "goTemplateOptions": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "ignoreApplicationDifferences": {
                "type": "array",
                "items": {
                  "description": "ApplicationSetResourceIgnoreDifferences configures how the ApplicationSet controller will ignore differences in live\napplications when applying changes from generated applications.",
                  "type": "object",
                  "properties": {
                    "jqPathExpressions": {
                      "description": "JQPathExpressions is a list of JQ path expressions to fields to ignore differences for.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "jsonPointers": {
                      "description": "JSONPointers is a list of JSON pointers to fields to ignore differences for.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "name": {
                      "description": "Name is the name of the application to ignore differences for. If not specified, the rule applies to all applications.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "preservedFields": {
                "type": "object",
                "properties": {
                  "annotations": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "labels": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              },
              "strategy": {
                "description": "ApplicationSetStrategy configures how generated Applications are updated in sequence.",
                "type": "object",
                "properties": {
                  "deletionOrder": {
                    "type": "string",
                    "title": "DeletionOrder allows specifying the order for deleting generated apps when progressive sync is enabled.\naccepts values \"AllAtOnce\" and \"Reverse\""
                  },
                  "rollingSync": {
                    "type": "object",
                    "properties": {
                      "steps": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "matchExpressions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "operator": {
                                    "type": "string"
                                  },
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "maxUpdate": {
                              "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                              "type": "object",
                              "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                              "properties": {
                                "intVal": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "strVal": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "integer",
                                  "format": "int64"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "syncPolicy": {
                "description": "ApplicationSetSyncPolicy configures how generated Applications will relate to their\nApplicationSet.",
                "type": "object",
                "properties": {
                  "applicationsSync": {
                    "type": "string",
                    "title": "ApplicationsSync represents the policy applied on the generated applications. Possible values are create-only, create-update, create-delete, sync\n+kubebuilder:validation:Optional\n+kubebuilder:validation:Enum=create-only;create-update;create-delete;sync"
                  },
                  "preserveResourcesOnDeletion": {
                    "description": "PreserveResourcesOnDeletion will preserve resources on deletion. If PreserveResourcesOnDeletion is set to true, these Applications will not be deleted.",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              "template": {
                "type": "object",
                "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
                "properties": {
                  "metadata": {
                    "type": "object",
                    "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
                    "properties": {
                      "annotations": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "finalizers": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "labels": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "namespace": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "spec": {
                    "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
                    "type": "object",
                    "properties": {
                      "destination": {
                        "type": "object",
                        "title": "ApplicationDestination holds information about the application's destination",
                        "properties": {
                          "name": {
                            "description": "Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.",
                            "type": "string"
                          },
                          "namespace": {
                            "type": "string",
                            "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                          },
                          "server": {
                            "description": "Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "ignoreDifferences": {
                        "type": "array",
                        "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                        "items": {
                          "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                          "type": "object",
                          "properties": {
                            "group": {
                              "type": "string"
                            },
                            "jqPathExpressions": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "jsonPointers": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "kind": {
                              "type": "string"
                            },
                            "managedFieldsManagers": {
                              "type": "array",
                              "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                              "items": {
                                "type": "string"
                              }
                            },
                            "name": {
                              "type": "string"
                            },
                            "namespace": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "info": {
                        "type": "array",
                        "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "project": {
                        "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                        "type": "string"
                      },
                      "revisionHistoryLimit": {
                        "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "source": {
                        "type": "object",
                        "title": "ApplicationSource contains all required information about the source of an application",
                        "properties": {
                          "chart": {
                            "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                            "type": "string"
                          },
                          "directory": {
                            "type": "object",
                            "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                            "properties": {
                              "exclude": {
                                "type": "string",
                                "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                              },
                              "include": {
                                "type": "string",
                                "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                              },
                              "jsonnet": {
                                "type": "object",
                                "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                "properties": {
                                  "extVars": {
                                    "type": "array",
                                    "title": "ExtVars is a list of Jsonnet External Variables",
                                    "items": {
                                      "type": "object",
                                      "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                      "properties": {
                                        "code": {
                                          "type": "boolean"
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "libs": {
                                    "type": "array",
                                    "title": "Additional library search dirs",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "tlas": {
                                    "type": "array",
                                    "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                    "items": {
                                      "type": "object",
                                      "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                      "properties": {
                                        "code": {
                                          "type": "boolean"
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "recurse": {
                                "type": "boolean",
                                "title": "Recurse specifies whether to scan a directory recursively for manifests"
                              }
                            },
                            "additionalProperties": false
                          },
                          "helm": {
                            "type": "object",
                            "title": "ApplicationSourceHelm holds helm specific options",
                            "properties": {
                              "apiVersions": {
                                "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "fileParameters": {
                                "type": "array",
                                "title": "FileParameters are file parameters to the helm template",
                                "items": {
                                  "type": "object",
                                  "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "title": "Name is the name of the Helm parameter"
                                    },
                                    "path": {
                                      "type": "string",
                                      "title": "Path is the path to the file containing the values for the Helm parameter"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "ignoreMissingValueFiles": {
                                "type": "boolean",
                                "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                              },
                              "kubeVersion": {
                                "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                "type": "string"
                              },
                              "parameters": {
                                "type": "array",
                                "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                "items": {
                                  "type": "object",
                                  "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                  "properties": {
                                    "forceString": {
                                      "type": "boolean",
                                      "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                    },
                                    "name": {
                                      "type": "string",
                                      "title": "Name is the name of the Helm parameter"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Value is the value for the Helm parameter"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "passCredentials": {
                                "type": "boolean",
                                "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                              },
                              "releaseName": {
                                "type": "string",
                                "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                              },
                              "skipCrds": {
                                "type": "boolean",
                                "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                              },
                              "skipSchemaValidation": {
                                "type": "boolean",
                                "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                              },
                              "skipTests": {
                                "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                "type": "boolean"
                              },
                              "valueFiles": {
                                "type": "array",
                                "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "values": {
                                "type": "string",
                                "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                              },
                              "valuesObject": {
                                "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                "type": "object",
                                "properties": {
                                  "raw": {
                                    "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                    "type": "string",
                                    "format": "byte"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "version": {
                                "type": "string",
                                "title": "Version is the Helm version to use for templating (\"3\")"
                              }
                            },
                            "additionalProperties": false
                          },
                          "kustomize": {
                            "type": "object",
                            "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                            "properties": {
                              "apiVersions": {
                                "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "commonAnnotations": {
                                "type": "object",
                                "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "commonAnnotationsEnvsubst": {
                                "type": "boolean",
                                "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                              },
                              "commonLabels": {
                                "type": "object",
                                "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "components": {
                                "type": "array",
                                "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "forceCommonAnnotations": {
                                "type": "boolean",
                                "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                              },
                              "forceCommonLabels": {
                                "type": "boolean",
                                "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                              },
                              "ignoreMissingComponents": {
                                "type": "boolean",
                                "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                              },
                              "images": {
                                "type": "array",
                                "title": "Images is a list of Kustomize image override specifications",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "kubeVersion": {
                                "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                "type": "string"
                              },
                              "labelIncludeTemplates": {
                                "type": "boolean",
                                "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                              },
                              "labelWithoutSelector": {
                                "type": "boolean",
                                "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                              },
                              "namePrefix": {
                                "type": "string",
                                "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                              },
                              "nameSuffix": {
                                "type": "string",
                                "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                              },
                              "namespace": {
                                "type": "string",
                                "title": "Namespace sets the namespace that Kustomize adds to all resources"
                              },
                              "patches": {
                                "type": "array",
                                "title": "Patches is a list of Kustomize patches",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "options": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "boolean"
                                      }
                                    },
                                    "patch": {
                                      "type": "string"
                                    },
                                    "path": {
                                      "type": "string"
                                    },
                                    "target": {
                                      "type": "object",
                                      "properties": {
                                        "annotationSelector": {
                                          "type": "string"
                                        },
                                        "labelSelector": {
                                          "type": "string"
                                        },
                                        "resId": {
                                          "type": "object",
                                          "properties": {
                                            "gvk": {
                                              "type": "object",
                                              "properties": {
                                                "group": {
                                                  "type": "string"
                                                },
                                                "kind": {
                                                  "type": "string"
                                                },
                                                "version": {
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "namespace": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "replicas": {
                                "type": "array",
                                "title": "Replicas is a list of Kustomize Replicas override specifications",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "count": {
                                      "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                      "type": "object",
                                      "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                      "properties": {
                                        "intVal": {
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "strVal": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "integer",
                                          "format": "int64"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "name": {
                                      "type": "string",
                                      "title": "Name of Deployment or StatefulSet"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "version": {
                                "type": "string",
                                "title": "Version controls which version of Kustomize to use for rendering manifests"
                              }
                            },
                            "additionalProperties": false
                          },
                          "name": {
                            "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                            "type": "string"
                          },
                          "path": {
                            "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                            "type": "string"
                          },
                          "plugin": {
                            "type": "object",
                            "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                            "properties": {
                              "env": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "EnvEntry represents an entry in the application's environment",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "title": "Name is the name of the variable, usually expressed in uppercase"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Value is the value of the variable"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "name": {
                                "type": "string"
                              },
                              "parameters": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "array": {
                                      "description": "Array is the value of an array type parameter.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "map": {
                                      "description": "Map is the value of a map type parameter.",
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "name": {
                                      "description": "Name is the name identifying a parameter.",
                                      "type": "string"
                                    },
                                    "string": {
                                      "description": "String_ is the value of a string type parameter.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "ref": {
                            "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                            "type": "string"
                          },
                          "repoURL": {
                            "type": "string",
                            "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                          },
                          "targetRevision": {
                            "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "sourceHydrator": {
                        "description": "SourceHydrator specifies a dry \"don't repeat yourself\" source for manifests, a sync source from which to sync\nhydrated manifests, and an optional hydrateTo location to act as a \"staging\" aread for hydrated manifests.",
                        "type": "object",
                        "properties": {
                          "drySource": {
                            "description": "DrySource specifies a location for dry \"don't repeat yourself\" manifest source information.",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "title": "Path is a directory path within the Git repository where the manifests are located"
                              },
                              "repoURL": {
                                "type": "string",
                                "title": "RepoURL is the URL to the git repository that contains the application manifests"
                              },
                              "targetRevision": {
                                "type": "string",
                                "title": "TargetRevision defines the revision of the source to hydrate"
                              }
                            },
                            "additionalProperties": false
                          },
                          "hydrateTo": {
                            "description": "HydrateTo specifies a location to which hydrated manifests should be pushed as a \"staging area\" before being moved to\nthe SyncSource. The RepoURL and Path are assumed based on the associated SyncSource config in the SourceHydrator.",
                            "type": "object",
                            "properties": {
                              "targetBranch": {
                                "type": "string",
                                "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                              }
                            },
                            "additionalProperties": false
                          },
                          "syncSource": {
                            "description": "SyncSource specifies a location from which hydrated manifests may be synced. RepoURL is assumed based on the\nassociated DrySource config in the SourceHydrator.",
                            "type": "object",
                            "properties": {
                              "path": {
                                "description": "Path is a directory path within the git repository where hydrated manifests should be committed to and synced\nfrom. If hydrateTo is set, this is just the path from which hydrated manifests will be synced.",
                                "type": "string"
                              },
                              "targetBranch": {
                                "type": "string",
                                "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "sources": {
                        "type": "array",
                        "title": "Sources is a reference to the location of the application's manifests or chart",
                        "items": {
                          "type": "object",
                          "title": "ApplicationSource contains all required information about the source of an application",
                          "properties": {
                            "chart": {
                              "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                              "type": "string"
                            },
                            "directory": {
                              "type": "object",
                              "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                              "properties": {
                                "exclude": {
                                  "type": "string",
                                  "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                },
                                "include": {
                                  "type": "string",
                                  "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                },
                                "jsonnet": {
                                  "type": "object",
                                  "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                  "properties": {
                                    "extVars": {
                                      "type": "array",
                                      "title": "ExtVars is a list of Jsonnet External Variables",
                                      "items": {
                                        "type": "object",
                                        "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                        "properties": {
                                          "code": {
                                            "type": "boolean"
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "value": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "libs": {
                                      "type": "array",
                                      "title": "Additional library search dirs",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "tlas": {
                                      "type": "array",
                                      "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                      "items": {
                                        "type": "object",
                                        "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                        "properties": {
                                          "code": {
                                            "type": "boolean"
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "value": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "recurse": {
                                  "type": "boolean",
                                  "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                }
                              },
                              "additionalProperties": false
                            },
                            "helm": {
                              "type": "object",
                              "title": "ApplicationSourceHelm holds helm specific options",
                              "properties": {
                                "apiVersions": {
                                  "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "fileParameters": {
                                  "type": "array",
                                  "title": "FileParameters are file parameters to the helm template",
                                  "items": {
                                    "type": "object",
                                    "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "title": "Name is the name of the Helm parameter"
                                      },
                                      "path": {
                                        "type": "string",
                                        "title": "Path is the path to the file containing the values for the Helm parameter"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "ignoreMissingValueFiles": {
                                  "type": "boolean",
                                  "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                },
                                "kubeVersion": {
                                  "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                                  "type": "string"
                                },
                                "parameters": {
                                  "type": "array",
                                  "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                  "items": {
                                    "type": "object",
                                    "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                    "properties": {
                                      "forceString": {
                                        "type": "boolean",
                                        "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                      },
                                      "name": {
                                        "type": "string",
                                        "title": "Name is the name of the Helm parameter"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Value is the value for the Helm parameter"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "passCredentials": {
                                  "type": "boolean",
                                  "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                },
                                "releaseName": {
                                  "type": "string",
                                  "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                },
                                "skipCrds": {
                                  "type": "boolean",
                                  "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                },
                                "skipSchemaValidation": {
                                  "type": "boolean",
                                  "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                                },
                                "skipTests": {
                                  "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                                  "type": "boolean"
                                },
                                "valueFiles": {
                                  "type": "array",
                                  "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "values": {
                                  "type": "string",
                                  "title": "Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.\n+patchStrategy=replace"
                                },
                                "valuesObject": {
                                  "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true",
                                  "type": "object",
                                  "properties": {
                                    "raw": {
                                      "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.",
                                      "type": "string",
                                      "format": "byte"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "version": {
                                  "type": "string",
                                  "title": "Version is the Helm version to use for templating (\"3\")"
                                }
                              },
                              "additionalProperties": false
                            },
                            "kustomize": {
                              "type": "object",
                              "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                              "properties": {
                                "apiVersions": {
                                  "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "commonAnnotations": {
                                  "type": "object",
                                  "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "commonAnnotationsEnvsubst": {
                                  "type": "boolean",
                                  "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                },
                                "commonLabels": {
                                  "type": "object",
                                  "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "components": {
                                  "type": "array",
                                  "title": "Components specifies a list of kustomize components to add to the kustomization before building",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "forceCommonAnnotations": {
                                  "type": "boolean",
                                  "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                },
                                "forceCommonLabels": {
                                  "type": "boolean",
                                  "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                },
                                "ignoreMissingComponents": {
                                  "type": "boolean",
                                  "title": "IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file"
                                },
                                "images": {
                                  "type": "array",
                                  "title": "Images is a list of Kustomize image override specifications",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "kubeVersion": {
                                  "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                                  "type": "string"
                                },
                                "labelIncludeTemplates": {
                                  "type": "boolean",
                                  "title": "LabelIncludeTemplates specifies whether to apply common labels to resource templates or not"
                                },
                                "labelWithoutSelector": {
                                  "type": "boolean",
                                  "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                                },
                                "namePrefix": {
                                  "type": "string",
                                  "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                },
                                "nameSuffix": {
                                  "type": "string",
                                  "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                },
                                "namespace": {
                                  "type": "string",
                                  "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                },
                                "patches": {
                                  "type": "array",
                                  "title": "Patches is a list of Kustomize patches",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "options": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "boolean"
                                        }
                                      },
                                      "patch": {
                                        "type": "string"
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "target": {
                                        "type": "object",
                                        "properties": {
                                          "annotationSelector": {
                                            "type": "string"
                                          },
                                          "labelSelector": {
                                            "type": "string"
                                          },
                                          "resId": {
                                            "type": "object",
                                            "properties": {
                                              "gvk": {
                                                "type": "object",
                                                "properties": {
                                                  "group": {
                                                    "type": "string"
                                                  },
                                                  "kind": {
                                                    "type": "string"
                                                  },
                                                  "version": {
                                                    "type": "string"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "namespace": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "replicas": {
                                  "type": "array",
                                  "title": "Replicas is a list of Kustomize Replicas override specifications",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "count": {
                                        "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                        "type": "object",
                                        "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                        "properties": {
                                          "intVal": {
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "strVal": {
                                            "type": "string"
                                          },
                                          "type": {
                                            "type": "integer",
                                            "format": "int64"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "name": {
                                        "type": "string",
                                        "title": "Name of Deployment or StatefulSet"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "version": {
                                  "type": "string",
                                  "title": "Version controls which version of Kustomize to use for rendering manifests"
                                }
                              },
                              "additionalProperties": false
                            },
                            "name": {
                              "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                              "type": "string"
                            },
                            "path": {
                              "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                              "type": "string"
                            },
                            "plugin": {
                              "type": "object",
                              "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                              "properties": {
                                "env": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "title": "EnvEntry represents an entry in the application's environment",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "title": "Name is the name of the variable, usually expressed in uppercase"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Value is the value of the variable"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "name": {
                                  "type": "string"
                                },
                                "parameters": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "array": {
                                        "description": "Array is the value of an array type parameter.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "map": {
                                        "description": "Map is the value of a map type parameter.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "name": {
                                        "description": "Name is the name identifying a parameter.",
                                        "type": "string"
                                      },
                                      "string": {
                                        "description": "String_ is the value of a string type parameter.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                }
                              },
                              "additionalProperties": false
                            },
                            "ref": {
                              "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                              "type": "string"
                            },
                            "repoURL": {
                              "type": "string",
                              "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                            },
                            "targetRevision": {
                              "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "syncPolicy": {
                        "type": "object",
                        "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                        "properties": {
                          "automated": {
                            "type": "object",
                            "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                            "properties": {
                              "allowEmpty": {
                                "type": "boolean",
                                "title": "AllowEmpty allows apps have zero live resources (default: false)"
                              },
                              "enable": {
                                "type": "boolean",
                                "title": "Enable allows apps to explicitly control automated sync"
                              },
                              "prune": {
                                "type": "boolean",
                                "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                              },
                              "selfHeal": {
                                "type": "boolean",
                                "title": "SelfHeal specifies whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                              }
                            },
                            "additionalProperties": false
                          },
                          "managedNamespaceMetadata": {
                            "type": "object",
                            "properties": {
                              "annotations": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "labels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "retry": {
                            "type": "object",
                            "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                            "properties": {
                              "backoff": {
                                "type": "object",
                                "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                                "properties": {
                                  "duration": {
                                    "type": "string",
                                    "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                                  },
                                  "factor": {
                                    "type": "integer",
                                    "format": "int64",
                                    "title": "Factor is a factor to multiply the base duration after each failed retry"
                                  },
                                  "maxDuration": {
                                    "type": "string",
                                    "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "limit": {
                                "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                "type": "integer",
                                "format": "int64"
                              }
                            },
                            "additionalProperties": false
                          },
                          "syncOptions": {
                            "type": "array",
                            "title": "Options allow you to specify whole app sync-options",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "templatePatch": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "status": {
            "type": "object",
            "title": "ApplicationSetStatus defines the observed state of ApplicationSet",
            "properties": {
              "applicationStatus": {
                "type": "array",
                "items": {
                  "type": "object",
                  "title": "ApplicationSetApplicationStatus contains details about each Application managed by the ApplicationSet",
                  "properties": {
                    "application": {
                      "type": "string",
                      "title": "Application contains the name of the Application resource"
                    },
                    "lastTransitionTime": {
                      "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false",
                      "type": "string",
                      "format": "date-time"
                    },
                    "message": {
                      "type": "string",
                      "title": "Message contains human-readable message indicating details about the status"
                    },
                    "status": {
                      "type": "string",
                      "title": "Status contains the AppSet's perceived status of the managed Application resource: (Waiting, Pending, Progressing, Healthy)"
                    },
                    "step": {
                      "type": "string",
                      "title": "Step tracks which step this Application should be updated in"
                    },
                    "targetrevisions": {
                      "description": "TargetRevision tracks the desired revisions the Application should be synced to.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "conditions": {
                "type": "array",
                "title": "INSERT ADDITIONAL STATUS FIELD - define observed state of cluster\nImportant: Run \"make\" to regenerate code after modifying this file",
                "items": {
                  "type": "object",
                  "title": "ApplicationSetCondition contains details about an applicationset condition, which is usually an error or warning",
                  "properties": {
                    "lastTransitionTime": {
                      "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false",
                      "type": "string",
                      "format": "date-time"
                    },
                    "message": {
                      "type": "string",
                      "title": "Message contains human-readable message indicating details about condition"
                    },
                    "reason": {
                      "type": "string",
                      "title": "Single word camelcase representing the reason for the status eg ErrorOccurred"
                    },
                    "status": {
                      "type": "string",
                      "title": "True/False/Unknown"
                    },
                    "type": {
                      "type": "string",
                      "title": "Type is an applicationset condition type"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "resources": {
                "description": "Resources is a list of Applications resources managed by this application set.",
                "type": "array",
                "items": {
                  "description": "ResourceStatus holds the current synchronization and health status of a Kubernetes resource.",
                  "type": "object",
                  "properties": {
                    "group": {
                      "description": "Group represents the API group of the resource (e.g., \"apps\" for Deployments).",
                      "type": "string"
                    },
                    "health": {
                      "type": "object",
                      "title": "HealthStatus contains information about the currently observed health state of a resource",
                      "properties": {
                        "lastTransitionTime": {
                          "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "type": "string",
                          "title": "Message is a human-readable informational message describing the health status"
                        },
                        "status": {
                          "type": "string",
                          "title": "Status holds the status code of the resource"
                        }
                      },
                      "additionalProperties": false
                    },
                    "hook": {
                      "description": "Hook is true if the resource is used as a lifecycle hook in an Argo CD application.",
                      "type": "boolean"
                    },
                    "kind": {
                      "description": "Kind specifies the type of the resource (e.g., \"Deployment\", \"Service\").",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the unique name of the resource within the namespace.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace defines the Kubernetes namespace where the resource is located.",
                      "type": "string"
                    },
                    "requiresDeletionConfirmation": {
                      "description": "RequiresDeletionConfirmation is true if the resource requires explicit user confirmation before deletion.",
                      "type": "boolean"
                    },
                    "requiresPruning": {
                      "description": "RequiresPruning is true if the resource needs to be pruned (deleted) as part of synchronization.",
                      "type": "boolean"
                    },
                    "status": {
                      "description": "Status represents the synchronization state of the resource (e.g., Synced, OutOfSync).",
                      "type": "string"
                    },
                    "syncWave": {
                      "description": "SyncWave determines the order in which resources are applied during a sync operation.\nLower values are applied first.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "version": {
                      "description": "Version indicates the API version of the resource (e.g., \"v1\", \"v1beta1\").",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    },
    "metadata": {
      "description": "ListMeta describes metadata that synthetic resources must have, including lists and\nvarious status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
      "type": "object",
      "properties": {
        "continue": {
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that\nthe server has more data available. The value is opaque and may be used to issue another request\nto the endpoint that served this list to retrieve the next set of available objects. Continuing a\nconsistent list may not be possible if the server configuration has changed or more than a few\nminutes have passed. The resourceVersion field returned when using this continue value will be\nidentical to the value in the first response, unless you have received this token from an error\nmessage.",
          "type": "string"
        },
        "remainingItemCount": {
          "type": "integer",
          "format": "int64",
          "title": "remainingItemCount is the number of subsequent items in the list which are not included in this\nlist response. If the list request contained label or field selectors, then the number of\nremaining items is unknown and the field will be left unset and omitted during serialization.\nIf the list is complete (either because it is not chunking or because this is the last chunk),\nthen there are no more remaining items and this field will be left unset and omitted during\nserialization.\nServers older than v1.15 do not set this field.\nThe intended use of the remainingItemCount is *estimating* the size of a collection. Clients\nshould not rely on the remainingItemCount to be set or to be exact.\n+optional"
        },
        "resourceVersion": {
          "type": "string",
          "title": "String that identifies the server's internal version of this object that\ncan be used by clients to determine when objects have changed.\nValue must be treated as opaque by clients and passed unmodified back to the server.\nPopulated by the system.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional"
        },
        "selfLink": {
          "type": "string",
          "title": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.\n+optional"
        }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}