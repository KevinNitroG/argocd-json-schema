{
  "type": "object",
  "title": "SourceHydratorStatus contains information about the current state of source hydration",
  "properties": {
    "currentOperation": {
      "type": "object",
      "title": "HydrateOperation contains information about the most recent hydrate operation",
      "properties": {
        "drySHA": {
          "type": "string",
          "title": "DrySHA holds the resolved revision (sha) of the dry source as of the most recent reconciliation"
        },
        "finishedAt": {
          "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false",
          "type": "string",
          "format": "date-time"
        },
        "hydratedSHA": {
          "type": "string",
          "title": "HydratedSHA holds the resolved revision (sha) of the hydrated source as of the most recent reconciliation"
        },
        "message": {
          "type": "string",
          "title": "Message contains a message describing the current status of the hydrate operation"
        },
        "phase": {
          "type": "string",
          "title": "Phase indicates the status of the hydrate operation"
        },
        "sourceHydrator": {
          "description": "SourceHydrator specifies a dry \"don't repeat yourself\" source for manifests, a sync source from which to sync\nhydrated manifests, and an optional hydrateTo location to act as a \"staging\" aread for hydrated manifests.",
          "type": "object",
          "properties": {
            "drySource": {
              "description": "DrySource specifies a location for dry \"don't repeat yourself\" manifest source information.",
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "title": "Path is a directory path within the Git repository where the manifests are located"
                },
                "repoURL": {
                  "type": "string",
                  "title": "RepoURL is the URL to the git repository that contains the application manifests"
                },
                "targetRevision": {
                  "type": "string",
                  "title": "TargetRevision defines the revision of the source to hydrate"
                }
              }
            },
            "hydrateTo": {
              "description": "HydrateTo specifies a location to which hydrated manifests should be pushed as a \"staging area\" before being moved to\nthe SyncSource. The RepoURL and Path are assumed based on the associated SyncSource config in the SourceHydrator.",
              "type": "object",
              "properties": {
                "targetBranch": {
                  "type": "string",
                  "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                }
              }
            },
            "syncSource": {
              "description": "SyncSource specifies a location from which hydrated manifests may be synced. RepoURL is assumed based on the\nassociated DrySource config in the SourceHydrator.",
              "type": "object",
              "properties": {
                "path": {
                  "description": "Path is a directory path within the git repository where hydrated manifests should be committed to and synced\nfrom. The Path should never point to the root of the repo. If hydrateTo is set, this is just the path from which\nhydrated manifests will be synced.\n\n+kubebuilder:validation:Required\n+kubebuilder:validation:MinLength=1\n+kubebuilder:validation:Pattern=`^.{2,}|[^./]$`",
                  "type": "string"
                },
                "targetBranch": {
                  "description": "TargetBranch is the branch from which hydrated manifests will be synced.\nIf HydrateTo is not set, this is also the branch to which hydrated manifests are committed.",
                  "type": "string"
                }
              }
            }
          }
        },
        "startedAt": {
          "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "lastSuccessfulOperation": {
      "type": "object",
      "title": "SuccessfulHydrateOperation contains information about the most recent successful hydrate operation",
      "properties": {
        "drySHA": {
          "type": "string",
          "title": "DrySHA holds the resolved revision (sha) of the dry source as of the most recent reconciliation"
        },
        "hydratedSHA": {
          "type": "string",
          "title": "HydratedSHA holds the resolved revision (sha) of the hydrated source as of the most recent reconciliation"
        },
        "sourceHydrator": {
          "description": "SourceHydrator specifies a dry \"don't repeat yourself\" source for manifests, a sync source from which to sync\nhydrated manifests, and an optional hydrateTo location to act as a \"staging\" aread for hydrated manifests.",
          "type": "object",
          "properties": {
            "drySource": {
              "description": "DrySource specifies a location for dry \"don't repeat yourself\" manifest source information.",
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "title": "Path is a directory path within the Git repository where the manifests are located"
                },
                "repoURL": {
                  "type": "string",
                  "title": "RepoURL is the URL to the git repository that contains the application manifests"
                },
                "targetRevision": {
                  "type": "string",
                  "title": "TargetRevision defines the revision of the source to hydrate"
                }
              }
            },
            "hydrateTo": {
              "description": "HydrateTo specifies a location to which hydrated manifests should be pushed as a \"staging area\" before being moved to\nthe SyncSource. The RepoURL and Path are assumed based on the associated SyncSource config in the SourceHydrator.",
              "type": "object",
              "properties": {
                "targetBranch": {
                  "type": "string",
                  "title": "TargetBranch is the branch to which hydrated manifests should be committed"
                }
              }
            },
            "syncSource": {
              "description": "SyncSource specifies a location from which hydrated manifests may be synced. RepoURL is assumed based on the\nassociated DrySource config in the SourceHydrator.",
              "type": "object",
              "properties": {
                "path": {
                  "description": "Path is a directory path within the git repository where hydrated manifests should be committed to and synced\nfrom. The Path should never point to the root of the repo. If hydrateTo is set, this is just the path from which\nhydrated manifests will be synced.\n\n+kubebuilder:validation:Required\n+kubebuilder:validation:MinLength=1\n+kubebuilder:validation:Pattern=`^.{2,}|[^./]$`",
                  "type": "string"
                },
                "targetBranch": {
                  "description": "TargetBranch is the branch from which hydrated manifests will be synced.\nIf HydrateTo is not set, this is also the branch to which hydrated manifests are committed.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "$schema": "http://json-schema.org/schema#"
}