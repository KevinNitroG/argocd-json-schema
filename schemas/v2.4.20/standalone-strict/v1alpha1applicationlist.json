{
  "type": "object",
  "title": "ApplicationList is list of Application resources\n+k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object",
  "properties": {
    "items": {
      "type": "array",
      "items": {
        "type": "object",
        "title": "Application is a definition of Application resource.\n+genclient\n+genclient:noStatus\n+k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n+kubebuilder:resource:path=applications,shortName=app;apps\n+kubebuilder:printcolumn:name=\"Sync Status\",type=string,JSONPath=`.status.sync.status`\n+kubebuilder:printcolumn:name=\"Health Status\",type=string,JSONPath=`.status.health.status`\n+kubebuilder:printcolumn:name=\"Revision\",type=string,JSONPath=`.status.sync.revision`,priority=10",
        "properties": {
          "metadata": {
            "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects\nusers must create.",
            "type": "object",
            "properties": {
              "annotations": {
                "type": "object",
                "title": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "clusterName": {
                "type": "string",
                "title": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional"
              },
              "creationTimestamp": {
                "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false",
                "type": "object",
                "properties": {
                  "nanos": {
                    "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "seconds": {
                    "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
                    "type": "string",
                    "format": "int64"
                  }
                },
                "additionalProperties": false
              },
              "deletionGracePeriodSeconds": {
                "type": "string",
                "format": "int64",
                "title": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional"
              },
              "deletionTimestamp": {
                "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false",
                "type": "object",
                "properties": {
                  "nanos": {
                    "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "seconds": {
                    "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
                    "type": "string",
                    "format": "int64"
                  }
                },
                "additionalProperties": false
              },
              "finalizers": {
                "type": "array",
                "title": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge",
                "items": {
                  "type": "string"
                }
              },
              "generateName": {
                "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional",
                "type": "string"
              },
              "generation": {
                "type": "string",
                "format": "int64",
                "title": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional"
              },
              "labels": {
                "type": "object",
                "title": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "managedFields": {
                "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional",
                "type": "array",
                "items": {
                  "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource\nthat the fieldset applies to.",
                  "type": "object",
                  "properties": {
                    "apiVersion": {
                      "description": "APIVersion defines the version of this resource that this field set\napplies to. The format is \"group/version\" just like the top-level\nAPIVersion field. It is necessary to track the version of a field\nset because it cannot be automatically converted.",
                      "type": "string"
                    },
                    "fieldsType": {
                      "type": "string",
                      "title": "FieldsType is the discriminator for the different fields format and version.\nThere is currently only one possible value: \"FieldsV1\""
                    },
                    "fieldsV1": {
                      "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set,\nor a string representing a sub-field or item. The string will follow one of these four formats:\n'f:<name>', where <name> is the name of a field in a struct, or key in a map\n'v:<value>', where <value> is the exact json formatted value of a list item\n'i:<index>', where <index> is position of a item in a list\n'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values\nIf a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff\n+protobuf.options.(gogoproto.goproto_stringer)=false",
                      "type": "object",
                      "properties": {
                        "Raw": {
                          "description": "Raw is the underlying serialization of this object.",
                          "type": "string",
                          "format": "byte"
                        }
                      },
                      "additionalProperties": false
                    },
                    "manager": {
                      "description": "Manager is an identifier of the workflow managing these fields.",
                      "type": "string"
                    },
                    "operation": {
                      "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created.\nThe only valid values for this field are 'Apply' and 'Update'.",
                      "type": "string"
                    },
                    "subresource": {
                      "description": "Subresource is the name of the subresource used to update that object, or\nempty string if the object was updated through the main resource. The\nvalue of this field is used to distinguish between managers, even if they\nshare the same name. For example, a status update will be distinct from a\nregular update using the same manager name.\nNote that the APIVersion field is not related to the Subresource field and\nit always corresponds to the version of the main resource.",
                      "type": "string"
                    },
                    "time": {
                      "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false",
                      "type": "object",
                      "properties": {
                        "nanos": {
                          "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "seconds": {
                          "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
                          "type": "string",
                          "format": "int64"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "name": {
                "type": "string",
                "title": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional"
              },
              "namespace": {
                "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
                "type": "string"
              },
              "ownerReferences": {
                "type": "array",
                "title": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                "items": {
                  "type": "object",
                  "title": "OwnerReference contains enough information to let you identify an owning\nobject. An owning object must be in the same namespace as the dependent, or\nbe cluster-scoped, so there is no namespace field.\n+structType=atomic",
                  "properties": {
                    "apiVersion": {
                      "description": "API version of the referent.",
                      "type": "string"
                    },
                    "blockOwnerDeletion": {
                      "type": "boolean",
                      "title": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.\n+optional"
                    },
                    "controller": {
                      "type": "boolean",
                      "title": "If true, this reference points to the managing controller.\n+optional"
                    },
                    "kind": {
                      "type": "string",
                      "title": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                    },
                    "name": {
                      "type": "string",
                      "title": "Name of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names"
                    },
                    "uid": {
                      "type": "string",
                      "title": "UID of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "resourceVersion": {
                "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
                "type": "string"
              },
              "selfLink": {
                "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional",
                "type": "string"
              },
              "uid": {
                "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "operation": {
            "type": "object",
            "title": "Operation contains information about a requested or running operation",
            "properties": {
              "info": {
                "type": "array",
                "title": "Info is a list of informational items for this operation",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "initiatedBy": {
                "type": "object",
                "title": "OperationInitiator contains information about the initiator of an operation",
                "properties": {
                  "automated": {
                    "description": "Automated is set to true if operation was initiated automatically by the application controller.",
                    "type": "boolean"
                  },
                  "username": {
                    "type": "string",
                    "title": "Username contains the name of a user who started operation"
                  }
                },
                "additionalProperties": false
              },
              "retry": {
                "type": "object",
                "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                "properties": {
                  "backoff": {
                    "type": "object",
                    "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                    "properties": {
                      "duration": {
                        "type": "string",
                        "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                      },
                      "factor": {
                        "type": "string",
                        "format": "int64",
                        "title": "Factor is a factor to multiply the base duration after each failed retry"
                      },
                      "maxDuration": {
                        "type": "string",
                        "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                      }
                    },
                    "additionalProperties": false
                  },
                  "limit": {
                    "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                    "type": "string",
                    "format": "int64"
                  }
                },
                "additionalProperties": false
              },
              "sync": {
                "description": "SyncOperation contains details about a sync operation.",
                "type": "object",
                "properties": {
                  "dryRun": {
                    "type": "boolean",
                    "title": "DryRun specifies to perform a `kubectl apply --dry-run` without actually performing the sync"
                  },
                  "manifests": {
                    "type": "array",
                    "title": "Manifests is an optional field that overrides sync source with a local directory for development",
                    "items": {
                      "type": "string"
                    }
                  },
                  "prune": {
                    "type": "boolean",
                    "title": "Prune specifies to delete resources from the cluster that are no longer tracked in git"
                  },
                  "resources": {
                    "type": "array",
                    "title": "Resources describes which resources shall be part of the sync",
                    "items": {
                      "description": "SyncOperationResource contains resources to sync.",
                      "type": "object",
                      "properties": {
                        "group": {
                          "type": "string"
                        },
                        "kind": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "namespace": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "revision": {
                    "description": "Revision is the revision (Git) or chart version (Helm) which to sync the application to\nIf omitted, will use the revision specified in app spec.",
                    "type": "string"
                  },
                  "source": {
                    "type": "object",
                    "title": "ApplicationSource contains all required information about the source of an application",
                    "properties": {
                      "chart": {
                        "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                        "type": "string"
                      },
                      "directory": {
                        "type": "object",
                        "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                        "properties": {
                          "exclude": {
                            "type": "string",
                            "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                          },
                          "include": {
                            "type": "string",
                            "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                          },
                          "jsonnet": {
                            "type": "object",
                            "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                            "properties": {
                              "extVars": {
                                "type": "array",
                                "title": "ExtVars is a list of Jsonnet External Variables",
                                "items": {
                                  "type": "object",
                                  "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                  "properties": {
                                    "code": {
                                      "type": "boolean"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "libs": {
                                "type": "array",
                                "title": "Additional library search dirs",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "tlas": {
                                "type": "array",
                                "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                "items": {
                                  "type": "object",
                                  "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                  "properties": {
                                    "code": {
                                      "type": "boolean"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "recurse": {
                            "type": "boolean",
                            "title": "Recurse specifies whether to scan a directory recursively for manifests"
                          }
                        },
                        "additionalProperties": false
                      },
                      "helm": {
                        "type": "object",
                        "title": "ApplicationSourceHelm holds helm specific options",
                        "properties": {
                          "fileParameters": {
                            "type": "array",
                            "title": "FileParameters are file parameters to the helm template",
                            "items": {
                              "type": "object",
                              "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "title": "Name is the name of the Helm parameter"
                                },
                                "path": {
                                  "type": "string",
                                  "title": "Path is the path to the file containing the values for the Helm parameter"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "ignoreMissingValueFiles": {
                            "type": "boolean",
                            "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                          },
                          "parameters": {
                            "type": "array",
                            "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                            "items": {
                              "type": "object",
                              "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                              "properties": {
                                "forceString": {
                                  "type": "boolean",
                                  "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Name is the name of the Helm parameter"
                                },
                                "value": {
                                  "type": "string",
                                  "title": "Value is the value for the Helm parameter"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "passCredentials": {
                            "type": "boolean",
                            "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                          },
                          "releaseName": {
                            "type": "string",
                            "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                          },
                          "skipCrds": {
                            "type": "boolean",
                            "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                          },
                          "valueFiles": {
                            "type": "array",
                            "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                            "items": {
                              "type": "string"
                            }
                          },
                          "values": {
                            "type": "string",
                            "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                          },
                          "version": {
                            "type": "string",
                            "title": "Version is the Helm version to use for templating (\"3\")"
                          }
                        },
                        "additionalProperties": false
                      },
                      "kustomize": {
                        "type": "object",
                        "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                        "properties": {
                          "commonAnnotations": {
                            "type": "object",
                            "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "commonLabels": {
                            "type": "object",
                            "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "forceCommonAnnotations": {
                            "type": "boolean",
                            "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                          },
                          "forceCommonLabels": {
                            "type": "boolean",
                            "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                          },
                          "images": {
                            "type": "array",
                            "title": "Images is a list of Kustomize image override specifications",
                            "items": {
                              "type": "string"
                            }
                          },
                          "namePrefix": {
                            "type": "string",
                            "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                          },
                          "nameSuffix": {
                            "type": "string",
                            "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                          },
                          "version": {
                            "type": "string",
                            "title": "Version controls which version of Kustomize to use for rendering manifests"
                          }
                        },
                        "additionalProperties": false
                      },
                      "path": {
                        "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                        "type": "string"
                      },
                      "plugin": {
                        "type": "object",
                        "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                        "properties": {
                          "env": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "EnvEntry represents an entry in the application's environment",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "title": "Name is the name of the variable, usually expressed in uppercase"
                                },
                                "value": {
                                  "type": "string",
                                  "title": "Value is the value of the variable"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "repoURL": {
                        "type": "string",
                        "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                      },
                      "targetRevision": {
                        "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "syncOptions": {
                    "type": "array",
                    "title": "SyncOptions provide per-sync sync-options, e.g. Validate=false",
                    "items": {
                      "type": "string"
                    }
                  },
                  "syncStrategy": {
                    "type": "object",
                    "title": "SyncStrategy controls the manner in which a sync is performed",
                    "properties": {
                      "apply": {
                        "type": "object",
                        "title": "SyncStrategyApply uses `kubectl apply` to perform the apply",
                        "properties": {
                          "force": {
                            "description": "Force indicates whether or not to supply the --force flag to `kubectl apply`.\nThe --force flag deletes and re-create the resource, when PATCH encounters conflict and has\nretried for 5 times.",
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false
                      },
                      "hook": {
                        "description": "SyncStrategyHook will perform a sync using hooks annotations.\nIf no hook annotation is specified falls back to `kubectl apply`.",
                        "type": "object",
                        "properties": {
                          "syncStrategyApply": {
                            "type": "object",
                            "title": "SyncStrategyApply uses `kubectl apply` to perform the apply",
                            "properties": {
                              "force": {
                                "description": "Force indicates whether or not to supply the --force flag to `kubectl apply`.\nThe --force flag deletes and re-create the resource, when PATCH encounters conflict and has\nretried for 5 times.",
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "spec": {
            "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
            "type": "object",
            "properties": {
              "destination": {
                "type": "object",
                "title": "ApplicationDestination holds information about the application's destination",
                "properties": {
                  "name": {
                    "type": "string",
                    "title": "Name is an alternate way of specifying the target cluster by its symbolic name"
                  },
                  "namespace": {
                    "type": "string",
                    "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                  },
                  "server": {
                    "type": "string",
                    "title": "Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API"
                  }
                },
                "additionalProperties": false
              },
              "ignoreDifferences": {
                "type": "array",
                "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                "items": {
                  "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                  "type": "object",
                  "properties": {
                    "group": {
                      "type": "string"
                    },
                    "jqPathExpressions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "jsonPointers": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "kind": {
                      "type": "string"
                    },
                    "managedFieldsManagers": {
                      "type": "array",
                      "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                      "items": {
                        "type": "string"
                      }
                    },
                    "name": {
                      "type": "string"
                    },
                    "namespace": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "info": {
                "type": "array",
                "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "project": {
                "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                "type": "string"
              },
              "revisionHistoryLimit": {
                "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                "type": "string",
                "format": "int64"
              },
              "source": {
                "type": "object",
                "title": "ApplicationSource contains all required information about the source of an application",
                "properties": {
                  "chart": {
                    "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                    "type": "string"
                  },
                  "directory": {
                    "type": "object",
                    "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                    "properties": {
                      "exclude": {
                        "type": "string",
                        "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                      },
                      "include": {
                        "type": "string",
                        "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                      },
                      "jsonnet": {
                        "type": "object",
                        "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                        "properties": {
                          "extVars": {
                            "type": "array",
                            "title": "ExtVars is a list of Jsonnet External Variables",
                            "items": {
                              "type": "object",
                              "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                              "properties": {
                                "code": {
                                  "type": "boolean"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "libs": {
                            "type": "array",
                            "title": "Additional library search dirs",
                            "items": {
                              "type": "string"
                            }
                          },
                          "tlas": {
                            "type": "array",
                            "title": "TLAS is a list of Jsonnet Top-level Arguments",
                            "items": {
                              "type": "object",
                              "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                              "properties": {
                                "code": {
                                  "type": "boolean"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "recurse": {
                        "type": "boolean",
                        "title": "Recurse specifies whether to scan a directory recursively for manifests"
                      }
                    },
                    "additionalProperties": false
                  },
                  "helm": {
                    "type": "object",
                    "title": "ApplicationSourceHelm holds helm specific options",
                    "properties": {
                      "fileParameters": {
                        "type": "array",
                        "title": "FileParameters are file parameters to the helm template",
                        "items": {
                          "type": "object",
                          "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                          "properties": {
                            "name": {
                              "type": "string",
                              "title": "Name is the name of the Helm parameter"
                            },
                            "path": {
                              "type": "string",
                              "title": "Path is the path to the file containing the values for the Helm parameter"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "ignoreMissingValueFiles": {
                        "type": "boolean",
                        "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                      },
                      "parameters": {
                        "type": "array",
                        "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                        "items": {
                          "type": "object",
                          "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                          "properties": {
                            "forceString": {
                              "type": "boolean",
                              "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                            },
                            "name": {
                              "type": "string",
                              "title": "Name is the name of the Helm parameter"
                            },
                            "value": {
                              "type": "string",
                              "title": "Value is the value for the Helm parameter"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "passCredentials": {
                        "type": "boolean",
                        "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                      },
                      "releaseName": {
                        "type": "string",
                        "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                      },
                      "skipCrds": {
                        "type": "boolean",
                        "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                      },
                      "valueFiles": {
                        "type": "array",
                        "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                        "items": {
                          "type": "string"
                        }
                      },
                      "values": {
                        "type": "string",
                        "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                      },
                      "version": {
                        "type": "string",
                        "title": "Version is the Helm version to use for templating (\"3\")"
                      }
                    },
                    "additionalProperties": false
                  },
                  "kustomize": {
                    "type": "object",
                    "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                    "properties": {
                      "commonAnnotations": {
                        "type": "object",
                        "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "commonLabels": {
                        "type": "object",
                        "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "forceCommonAnnotations": {
                        "type": "boolean",
                        "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                      },
                      "forceCommonLabels": {
                        "type": "boolean",
                        "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                      },
                      "images": {
                        "type": "array",
                        "title": "Images is a list of Kustomize image override specifications",
                        "items": {
                          "type": "string"
                        }
                      },
                      "namePrefix": {
                        "type": "string",
                        "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                      },
                      "nameSuffix": {
                        "type": "string",
                        "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                      },
                      "version": {
                        "type": "string",
                        "title": "Version controls which version of Kustomize to use for rendering manifests"
                      }
                    },
                    "additionalProperties": false
                  },
                  "path": {
                    "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                    "type": "string"
                  },
                  "plugin": {
                    "type": "object",
                    "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                    "properties": {
                      "env": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "title": "EnvEntry represents an entry in the application's environment",
                          "properties": {
                            "name": {
                              "type": "string",
                              "title": "Name is the name of the variable, usually expressed in uppercase"
                            },
                            "value": {
                              "type": "string",
                              "title": "Value is the value of the variable"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "repoURL": {
                    "type": "string",
                    "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                  },
                  "targetRevision": {
                    "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "syncPolicy": {
                "type": "object",
                "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                "properties": {
                  "automated": {
                    "type": "object",
                    "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                    "properties": {
                      "allowEmpty": {
                        "type": "boolean",
                        "title": "AllowEmpty allows apps have zero live resources (default: false)"
                      },
                      "prune": {
                        "type": "boolean",
                        "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                      },
                      "selfHeal": {
                        "type": "boolean",
                        "title": "SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                      }
                    },
                    "additionalProperties": false
                  },
                  "retry": {
                    "type": "object",
                    "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                    "properties": {
                      "backoff": {
                        "type": "object",
                        "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                        "properties": {
                          "duration": {
                            "type": "string",
                            "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                          },
                          "factor": {
                            "type": "string",
                            "format": "int64",
                            "title": "Factor is a factor to multiply the base duration after each failed retry"
                          },
                          "maxDuration": {
                            "type": "string",
                            "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                          }
                        },
                        "additionalProperties": false
                      },
                      "limit": {
                        "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                        "type": "string",
                        "format": "int64"
                      }
                    },
                    "additionalProperties": false
                  },
                  "syncOptions": {
                    "type": "array",
                    "title": "Options allow you to specify whole app sync-options",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "status": {
            "type": "object",
            "title": "ApplicationStatus contains status information for the application",
            "properties": {
              "conditions": {
                "type": "array",
                "title": "Conditions is a list of currently observed application conditions",
                "items": {
                  "type": "object",
                  "title": "ApplicationCondition contains details about an application condition, which is usally an error or warning",
                  "properties": {
                    "lastTransitionTime": {
                      "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false",
                      "type": "object",
                      "properties": {
                        "nanos": {
                          "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "seconds": {
                          "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
                          "type": "string",
                          "format": "int64"
                        }
                      },
                      "additionalProperties": false
                    },
                    "message": {
                      "type": "string",
                      "title": "Message contains human-readable message indicating details about condition"
                    },
                    "type": {
                      "type": "string",
                      "title": "Type is an application condition type"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "health": {
                "type": "object",
                "title": "HealthStatus contains information about the currently observed health state of an application or resource",
                "properties": {
                  "message": {
                    "type": "string",
                    "title": "Message is a human-readable informational message describing the health status"
                  },
                  "status": {
                    "type": "string",
                    "title": "Status holds the status code of the application or resource"
                  }
                },
                "additionalProperties": false
              },
              "history": {
                "type": "array",
                "title": "History contains information about the application's sync history",
                "items": {
                  "type": "object",
                  "title": "RevisionHistory contains history information about a previous sync",
                  "properties": {
                    "deployStartedAt": {
                      "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false",
                      "type": "object",
                      "properties": {
                        "nanos": {
                          "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "seconds": {
                          "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
                          "type": "string",
                          "format": "int64"
                        }
                      },
                      "additionalProperties": false
                    },
                    "deployedAt": {
                      "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false",
                      "type": "object",
                      "properties": {
                        "nanos": {
                          "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "seconds": {
                          "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
                          "type": "string",
                          "format": "int64"
                        }
                      },
                      "additionalProperties": false
                    },
                    "id": {
                      "type": "string",
                      "format": "int64",
                      "title": "ID is an auto incrementing identifier of the RevisionHistory"
                    },
                    "revision": {
                      "type": "string",
                      "title": "Revision holds the revision the sync was performed against"
                    },
                    "source": {
                      "type": "object",
                      "title": "ApplicationSource contains all required information about the source of an application",
                      "properties": {
                        "chart": {
                          "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                          "type": "string"
                        },
                        "directory": {
                          "type": "object",
                          "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                          "properties": {
                            "exclude": {
                              "type": "string",
                              "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                            },
                            "include": {
                              "type": "string",
                              "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                            },
                            "jsonnet": {
                              "type": "object",
                              "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                              "properties": {
                                "extVars": {
                                  "type": "array",
                                  "title": "ExtVars is a list of Jsonnet External Variables",
                                  "items": {
                                    "type": "object",
                                    "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                    "properties": {
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "value": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "libs": {
                                  "type": "array",
                                  "title": "Additional library search dirs",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "tlas": {
                                  "type": "array",
                                  "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                  "items": {
                                    "type": "object",
                                    "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                    "properties": {
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "value": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                }
                              },
                              "additionalProperties": false
                            },
                            "recurse": {
                              "type": "boolean",
                              "title": "Recurse specifies whether to scan a directory recursively for manifests"
                            }
                          },
                          "additionalProperties": false
                        },
                        "helm": {
                          "type": "object",
                          "title": "ApplicationSourceHelm holds helm specific options",
                          "properties": {
                            "fileParameters": {
                              "type": "array",
                              "title": "FileParameters are file parameters to the helm template",
                              "items": {
                                "type": "object",
                                "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "title": "Name is the name of the Helm parameter"
                                  },
                                  "path": {
                                    "type": "string",
                                    "title": "Path is the path to the file containing the values for the Helm parameter"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "ignoreMissingValueFiles": {
                              "type": "boolean",
                              "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                            },
                            "parameters": {
                              "type": "array",
                              "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                              "items": {
                                "type": "object",
                                "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                "properties": {
                                  "forceString": {
                                    "type": "boolean",
                                    "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                  },
                                  "name": {
                                    "type": "string",
                                    "title": "Name is the name of the Helm parameter"
                                  },
                                  "value": {
                                    "type": "string",
                                    "title": "Value is the value for the Helm parameter"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "passCredentials": {
                              "type": "boolean",
                              "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                            },
                            "releaseName": {
                              "type": "string",
                              "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                            },
                            "skipCrds": {
                              "type": "boolean",
                              "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                            },
                            "valueFiles": {
                              "type": "array",
                              "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                              "items": {
                                "type": "string"
                              }
                            },
                            "values": {
                              "type": "string",
                              "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                            },
                            "version": {
                              "type": "string",
                              "title": "Version is the Helm version to use for templating (\"3\")"
                            }
                          },
                          "additionalProperties": false
                        },
                        "kustomize": {
                          "type": "object",
                          "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                          "properties": {
                            "commonAnnotations": {
                              "type": "object",
                              "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "commonLabels": {
                              "type": "object",
                              "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "forceCommonAnnotations": {
                              "type": "boolean",
                              "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                            },
                            "forceCommonLabels": {
                              "type": "boolean",
                              "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                            },
                            "images": {
                              "type": "array",
                              "title": "Images is a list of Kustomize image override specifications",
                              "items": {
                                "type": "string"
                              }
                            },
                            "namePrefix": {
                              "type": "string",
                              "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                            },
                            "nameSuffix": {
                              "type": "string",
                              "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                            },
                            "version": {
                              "type": "string",
                              "title": "Version controls which version of Kustomize to use for rendering manifests"
                            }
                          },
                          "additionalProperties": false
                        },
                        "path": {
                          "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                          "type": "string"
                        },
                        "plugin": {
                          "type": "object",
                          "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                          "properties": {
                            "env": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "EnvEntry represents an entry in the application's environment",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "title": "Name is the name of the variable, usually expressed in uppercase"
                                  },
                                  "value": {
                                    "type": "string",
                                    "title": "Value is the value of the variable"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "repoURL": {
                          "type": "string",
                          "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                        },
                        "targetRevision": {
                          "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "observedAt": {
                "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false",
                "type": "object",
                "properties": {
                  "nanos": {
                    "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "seconds": {
                    "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
                    "type": "string",
                    "format": "int64"
                  }
                },
                "additionalProperties": false
              },
              "operationState": {
                "type": "object",
                "title": "OperationState contains information about state of a running operation",
                "properties": {
                  "finishedAt": {
                    "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false",
                    "type": "object",
                    "properties": {
                      "nanos": {
                        "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "seconds": {
                        "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
                        "type": "string",
                        "format": "int64"
                      }
                    },
                    "additionalProperties": false
                  },
                  "message": {
                    "description": "Message holds any pertinent messages when attempting to perform operation (typically errors).",
                    "type": "string"
                  },
                  "operation": {
                    "type": "object",
                    "title": "Operation contains information about a requested or running operation",
                    "properties": {
                      "info": {
                        "type": "array",
                        "title": "Info is a list of informational items for this operation",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "initiatedBy": {
                        "type": "object",
                        "title": "OperationInitiator contains information about the initiator of an operation",
                        "properties": {
                          "automated": {
                            "description": "Automated is set to true if operation was initiated automatically by the application controller.",
                            "type": "boolean"
                          },
                          "username": {
                            "type": "string",
                            "title": "Username contains the name of a user who started operation"
                          }
                        },
                        "additionalProperties": false
                      },
                      "retry": {
                        "type": "object",
                        "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                        "properties": {
                          "backoff": {
                            "type": "object",
                            "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                            "properties": {
                              "duration": {
                                "type": "string",
                                "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                              },
                              "factor": {
                                "type": "string",
                                "format": "int64",
                                "title": "Factor is a factor to multiply the base duration after each failed retry"
                              },
                              "maxDuration": {
                                "type": "string",
                                "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                              }
                            },
                            "additionalProperties": false
                          },
                          "limit": {
                            "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                            "type": "string",
                            "format": "int64"
                          }
                        },
                        "additionalProperties": false
                      },
                      "sync": {
                        "description": "SyncOperation contains details about a sync operation.",
                        "type": "object",
                        "properties": {
                          "dryRun": {
                            "type": "boolean",
                            "title": "DryRun specifies to perform a `kubectl apply --dry-run` without actually performing the sync"
                          },
                          "manifests": {
                            "type": "array",
                            "title": "Manifests is an optional field that overrides sync source with a local directory for development",
                            "items": {
                              "type": "string"
                            }
                          },
                          "prune": {
                            "type": "boolean",
                            "title": "Prune specifies to delete resources from the cluster that are no longer tracked in git"
                          },
                          "resources": {
                            "type": "array",
                            "title": "Resources describes which resources shall be part of the sync",
                            "items": {
                              "description": "SyncOperationResource contains resources to sync.",
                              "type": "object",
                              "properties": {
                                "group": {
                                  "type": "string"
                                },
                                "kind": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "namespace": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "revision": {
                            "description": "Revision is the revision (Git) or chart version (Helm) which to sync the application to\nIf omitted, will use the revision specified in app spec.",
                            "type": "string"
                          },
                          "source": {
                            "type": "object",
                            "title": "ApplicationSource contains all required information about the source of an application",
                            "properties": {
                              "chart": {
                                "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                "type": "string"
                              },
                              "directory": {
                                "type": "object",
                                "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                "properties": {
                                  "exclude": {
                                    "type": "string",
                                    "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                  },
                                  "include": {
                                    "type": "string",
                                    "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                  },
                                  "jsonnet": {
                                    "type": "object",
                                    "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                    "properties": {
                                      "extVars": {
                                        "type": "array",
                                        "title": "ExtVars is a list of Jsonnet External Variables",
                                        "items": {
                                          "type": "object",
                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                          "properties": {
                                            "code": {
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "libs": {
                                        "type": "array",
                                        "title": "Additional library search dirs",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "tlas": {
                                        "type": "array",
                                        "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                        "items": {
                                          "type": "object",
                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                          "properties": {
                                            "code": {
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "recurse": {
                                    "type": "boolean",
                                    "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "helm": {
                                "type": "object",
                                "title": "ApplicationSourceHelm holds helm specific options",
                                "properties": {
                                  "fileParameters": {
                                    "type": "array",
                                    "title": "FileParameters are file parameters to the helm template",
                                    "items": {
                                      "type": "object",
                                      "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the Helm parameter"
                                        },
                                        "path": {
                                          "type": "string",
                                          "title": "Path is the path to the file containing the values for the Helm parameter"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "ignoreMissingValueFiles": {
                                    "type": "boolean",
                                    "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                  },
                                  "parameters": {
                                    "type": "array",
                                    "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                    "items": {
                                      "type": "object",
                                      "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                      "properties": {
                                        "forceString": {
                                          "type": "boolean",
                                          "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                        },
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the Helm parameter"
                                        },
                                        "value": {
                                          "type": "string",
                                          "title": "Value is the value for the Helm parameter"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "passCredentials": {
                                    "type": "boolean",
                                    "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                  },
                                  "releaseName": {
                                    "type": "string",
                                    "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                  },
                                  "skipCrds": {
                                    "type": "boolean",
                                    "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                  },
                                  "valueFiles": {
                                    "type": "array",
                                    "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "values": {
                                    "type": "string",
                                    "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                                  },
                                  "version": {
                                    "type": "string",
                                    "title": "Version is the Helm version to use for templating (\"3\")"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "kustomize": {
                                "type": "object",
                                "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                "properties": {
                                  "commonAnnotations": {
                                    "type": "object",
                                    "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "commonLabels": {
                                    "type": "object",
                                    "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "forceCommonAnnotations": {
                                    "type": "boolean",
                                    "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                  },
                                  "forceCommonLabels": {
                                    "type": "boolean",
                                    "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                  },
                                  "images": {
                                    "type": "array",
                                    "title": "Images is a list of Kustomize image override specifications",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "namePrefix": {
                                    "type": "string",
                                    "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                  },
                                  "nameSuffix": {
                                    "type": "string",
                                    "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                  },
                                  "version": {
                                    "type": "string",
                                    "title": "Version controls which version of Kustomize to use for rendering manifests"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "path": {
                                "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                "type": "string"
                              },
                              "plugin": {
                                "type": "object",
                                "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                "properties": {
                                  "env": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "title": "EnvEntry represents an entry in the application's environment",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the variable, usually expressed in uppercase"
                                        },
                                        "value": {
                                          "type": "string",
                                          "title": "Value is the value of the variable"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "repoURL": {
                                "type": "string",
                                "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                              },
                              "targetRevision": {
                                "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "syncOptions": {
                            "type": "array",
                            "title": "SyncOptions provide per-sync sync-options, e.g. Validate=false",
                            "items": {
                              "type": "string"
                            }
                          },
                          "syncStrategy": {
                            "type": "object",
                            "title": "SyncStrategy controls the manner in which a sync is performed",
                            "properties": {
                              "apply": {
                                "type": "object",
                                "title": "SyncStrategyApply uses `kubectl apply` to perform the apply",
                                "properties": {
                                  "force": {
                                    "description": "Force indicates whether or not to supply the --force flag to `kubectl apply`.\nThe --force flag deletes and re-create the resource, when PATCH encounters conflict and has\nretried for 5 times.",
                                    "type": "boolean"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "hook": {
                                "description": "SyncStrategyHook will perform a sync using hooks annotations.\nIf no hook annotation is specified falls back to `kubectl apply`.",
                                "type": "object",
                                "properties": {
                                  "syncStrategyApply": {
                                    "type": "object",
                                    "title": "SyncStrategyApply uses `kubectl apply` to perform the apply",
                                    "properties": {
                                      "force": {
                                        "description": "Force indicates whether or not to supply the --force flag to `kubectl apply`.\nThe --force flag deletes and re-create the resource, when PATCH encounters conflict and has\nretried for 5 times.",
                                        "type": "boolean"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "phase": {
                    "type": "string",
                    "title": "Phase is the current phase of the operation"
                  },
                  "retryCount": {
                    "type": "string",
                    "format": "int64",
                    "title": "RetryCount contains time of operation retries"
                  },
                  "startedAt": {
                    "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false",
                    "type": "object",
                    "properties": {
                      "nanos": {
                        "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "seconds": {
                        "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
                        "type": "string",
                        "format": "int64"
                      }
                    },
                    "additionalProperties": false
                  },
                  "syncResult": {
                    "type": "object",
                    "title": "SyncOperationResult represent result of sync operation",
                    "properties": {
                      "resources": {
                        "type": "array",
                        "title": "Resources contains a list of sync result items for each individual resource in a sync operation",
                        "items": {
                          "type": "object",
                          "title": "ResourceResult holds the operation result details of a specific resource",
                          "properties": {
                            "group": {
                              "type": "string",
                              "title": "Group specifies the API group of the resource"
                            },
                            "hookPhase": {
                              "description": "HookPhase contains the state of any operation associated with this resource OR hook\nThis can also contain values for non-hook resources.",
                              "type": "string"
                            },
                            "hookType": {
                              "type": "string",
                              "title": "HookType specifies the type of the hook. Empty for non-hook resources"
                            },
                            "kind": {
                              "type": "string",
                              "title": "Kind specifies the API kind of the resource"
                            },
                            "message": {
                              "type": "string",
                              "title": "Message contains an informational or error message for the last sync OR operation"
                            },
                            "name": {
                              "type": "string",
                              "title": "Name specifies the name of the resource"
                            },
                            "namespace": {
                              "type": "string",
                              "title": "Namespace specifies the target namespace of the resource"
                            },
                            "status": {
                              "type": "string",
                              "title": "Status holds the final result of the sync. Will be empty if the resources is yet to be applied/pruned and is always zero-value for hooks"
                            },
                            "syncPhase": {
                              "type": "string",
                              "title": "SyncPhase indicates the particular phase of the sync that this result was acquired in"
                            },
                            "version": {
                              "type": "string",
                              "title": "Version specifies the API version of the resource"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "revision": {
                        "type": "string",
                        "title": "Revision holds the revision this sync operation was performed to"
                      },
                      "source": {
                        "type": "object",
                        "title": "ApplicationSource contains all required information about the source of an application",
                        "properties": {
                          "chart": {
                            "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                            "type": "string"
                          },
                          "directory": {
                            "type": "object",
                            "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                            "properties": {
                              "exclude": {
                                "type": "string",
                                "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                              },
                              "include": {
                                "type": "string",
                                "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                              },
                              "jsonnet": {
                                "type": "object",
                                "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                "properties": {
                                  "extVars": {
                                    "type": "array",
                                    "title": "ExtVars is a list of Jsonnet External Variables",
                                    "items": {
                                      "type": "object",
                                      "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                      "properties": {
                                        "code": {
                                          "type": "boolean"
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "libs": {
                                    "type": "array",
                                    "title": "Additional library search dirs",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "tlas": {
                                    "type": "array",
                                    "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                    "items": {
                                      "type": "object",
                                      "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                      "properties": {
                                        "code": {
                                          "type": "boolean"
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "recurse": {
                                "type": "boolean",
                                "title": "Recurse specifies whether to scan a directory recursively for manifests"
                              }
                            },
                            "additionalProperties": false
                          },
                          "helm": {
                            "type": "object",
                            "title": "ApplicationSourceHelm holds helm specific options",
                            "properties": {
                              "fileParameters": {
                                "type": "array",
                                "title": "FileParameters are file parameters to the helm template",
                                "items": {
                                  "type": "object",
                                  "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "title": "Name is the name of the Helm parameter"
                                    },
                                    "path": {
                                      "type": "string",
                                      "title": "Path is the path to the file containing the values for the Helm parameter"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "ignoreMissingValueFiles": {
                                "type": "boolean",
                                "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                              },
                              "parameters": {
                                "type": "array",
                                "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                "items": {
                                  "type": "object",
                                  "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                  "properties": {
                                    "forceString": {
                                      "type": "boolean",
                                      "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                    },
                                    "name": {
                                      "type": "string",
                                      "title": "Name is the name of the Helm parameter"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Value is the value for the Helm parameter"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "passCredentials": {
                                "type": "boolean",
                                "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                              },
                              "releaseName": {
                                "type": "string",
                                "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                              },
                              "skipCrds": {
                                "type": "boolean",
                                "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                              },
                              "valueFiles": {
                                "type": "array",
                                "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "values": {
                                "type": "string",
                                "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                              },
                              "version": {
                                "type": "string",
                                "title": "Version is the Helm version to use for templating (\"3\")"
                              }
                            },
                            "additionalProperties": false
                          },
                          "kustomize": {
                            "type": "object",
                            "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                            "properties": {
                              "commonAnnotations": {
                                "type": "object",
                                "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "commonLabels": {
                                "type": "object",
                                "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "forceCommonAnnotations": {
                                "type": "boolean",
                                "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                              },
                              "forceCommonLabels": {
                                "type": "boolean",
                                "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                              },
                              "images": {
                                "type": "array",
                                "title": "Images is a list of Kustomize image override specifications",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "namePrefix": {
                                "type": "string",
                                "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                              },
                              "nameSuffix": {
                                "type": "string",
                                "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                              },
                              "version": {
                                "type": "string",
                                "title": "Version controls which version of Kustomize to use for rendering manifests"
                              }
                            },
                            "additionalProperties": false
                          },
                          "path": {
                            "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                            "type": "string"
                          },
                          "plugin": {
                            "type": "object",
                            "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                            "properties": {
                              "env": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "EnvEntry represents an entry in the application's environment",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "title": "Name is the name of the variable, usually expressed in uppercase"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Value is the value of the variable"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "repoURL": {
                            "type": "string",
                            "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                          },
                          "targetRevision": {
                            "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "reconciledAt": {
                "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false",
                "type": "object",
                "properties": {
                  "nanos": {
                    "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "seconds": {
                    "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
                    "type": "string",
                    "format": "int64"
                  }
                },
                "additionalProperties": false
              },
              "resources": {
                "type": "array",
                "title": "Resources is a list of Kubernetes resources managed by this application",
                "items": {
                  "type": "object",
                  "title": "ResourceStatus holds the current sync and health status of a resource\nTODO: describe members of this type",
                  "properties": {
                    "group": {
                      "type": "string"
                    },
                    "health": {
                      "type": "object",
                      "title": "HealthStatus contains information about the currently observed health state of an application or resource",
                      "properties": {
                        "message": {
                          "type": "string",
                          "title": "Message is a human-readable informational message describing the health status"
                        },
                        "status": {
                          "type": "string",
                          "title": "Status holds the status code of the application or resource"
                        }
                      },
                      "additionalProperties": false
                    },
                    "hook": {
                      "type": "boolean"
                    },
                    "kind": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "namespace": {
                      "type": "string"
                    },
                    "requiresPruning": {
                      "type": "boolean"
                    },
                    "status": {
                      "type": "string"
                    },
                    "version": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "sourceType": {
                "type": "string",
                "title": "SourceType specifies the type of this application"
              },
              "summary": {
                "type": "object",
                "title": "ApplicationSummary contains information about URLs and container images used by an application",
                "properties": {
                  "externalURLs": {
                    "description": "ExternalURLs holds all external URLs of application child resources.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "images": {
                    "description": "Images holds all images of application child resources.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              },
              "sync": {
                "type": "object",
                "title": "SyncStatus contains information about the currently observed live and desired states of an application",
                "properties": {
                  "comparedTo": {
                    "type": "object",
                    "title": "ComparedTo contains application source and target which was used for resources comparison",
                    "properties": {
                      "destination": {
                        "type": "object",
                        "title": "ApplicationDestination holds information about the application's destination",
                        "properties": {
                          "name": {
                            "type": "string",
                            "title": "Name is an alternate way of specifying the target cluster by its symbolic name"
                          },
                          "namespace": {
                            "type": "string",
                            "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                          },
                          "server": {
                            "type": "string",
                            "title": "Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API"
                          }
                        },
                        "additionalProperties": false
                      },
                      "source": {
                        "type": "object",
                        "title": "ApplicationSource contains all required information about the source of an application",
                        "properties": {
                          "chart": {
                            "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                            "type": "string"
                          },
                          "directory": {
                            "type": "object",
                            "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                            "properties": {
                              "exclude": {
                                "type": "string",
                                "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                              },
                              "include": {
                                "type": "string",
                                "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                              },
                              "jsonnet": {
                                "type": "object",
                                "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                "properties": {
                                  "extVars": {
                                    "type": "array",
                                    "title": "ExtVars is a list of Jsonnet External Variables",
                                    "items": {
                                      "type": "object",
                                      "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                      "properties": {
                                        "code": {
                                          "type": "boolean"
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "libs": {
                                    "type": "array",
                                    "title": "Additional library search dirs",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "tlas": {
                                    "type": "array",
                                    "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                    "items": {
                                      "type": "object",
                                      "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                      "properties": {
                                        "code": {
                                          "type": "boolean"
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "recurse": {
                                "type": "boolean",
                                "title": "Recurse specifies whether to scan a directory recursively for manifests"
                              }
                            },
                            "additionalProperties": false
                          },
                          "helm": {
                            "type": "object",
                            "title": "ApplicationSourceHelm holds helm specific options",
                            "properties": {
                              "fileParameters": {
                                "type": "array",
                                "title": "FileParameters are file parameters to the helm template",
                                "items": {
                                  "type": "object",
                                  "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "title": "Name is the name of the Helm parameter"
                                    },
                                    "path": {
                                      "type": "string",
                                      "title": "Path is the path to the file containing the values for the Helm parameter"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "ignoreMissingValueFiles": {
                                "type": "boolean",
                                "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                              },
                              "parameters": {
                                "type": "array",
                                "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                "items": {
                                  "type": "object",
                                  "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                  "properties": {
                                    "forceString": {
                                      "type": "boolean",
                                      "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                    },
                                    "name": {
                                      "type": "string",
                                      "title": "Name is the name of the Helm parameter"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Value is the value for the Helm parameter"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "passCredentials": {
                                "type": "boolean",
                                "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                              },
                              "releaseName": {
                                "type": "string",
                                "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                              },
                              "skipCrds": {
                                "type": "boolean",
                                "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                              },
                              "valueFiles": {
                                "type": "array",
                                "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "values": {
                                "type": "string",
                                "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                              },
                              "version": {
                                "type": "string",
                                "title": "Version is the Helm version to use for templating (\"3\")"
                              }
                            },
                            "additionalProperties": false
                          },
                          "kustomize": {
                            "type": "object",
                            "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                            "properties": {
                              "commonAnnotations": {
                                "type": "object",
                                "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "commonLabels": {
                                "type": "object",
                                "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "forceCommonAnnotations": {
                                "type": "boolean",
                                "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                              },
                              "forceCommonLabels": {
                                "type": "boolean",
                                "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                              },
                              "images": {
                                "type": "array",
                                "title": "Images is a list of Kustomize image override specifications",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "namePrefix": {
                                "type": "string",
                                "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                              },
                              "nameSuffix": {
                                "type": "string",
                                "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                              },
                              "version": {
                                "type": "string",
                                "title": "Version controls which version of Kustomize to use for rendering manifests"
                              }
                            },
                            "additionalProperties": false
                          },
                          "path": {
                            "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                            "type": "string"
                          },
                          "plugin": {
                            "type": "object",
                            "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                            "properties": {
                              "env": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "EnvEntry represents an entry in the application's environment",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "title": "Name is the name of the variable, usually expressed in uppercase"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Value is the value of the variable"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "repoURL": {
                            "type": "string",
                            "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                          },
                          "targetRevision": {
                            "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "revision": {
                    "type": "string",
                    "title": "Revision contains information about the revision the comparison has been performed to"
                  },
                  "status": {
                    "type": "string",
                    "title": "Status is the sync state of the comparison"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    },
    "metadata": {
      "description": "ListMeta describes metadata that synthetic resources must have, including lists and\nvarious status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
      "type": "object",
      "properties": {
        "continue": {
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that\nthe server has more data available. The value is opaque and may be used to issue another request\nto the endpoint that served this list to retrieve the next set of available objects. Continuing a\nconsistent list may not be possible if the server configuration has changed or more than a few\nminutes have passed. The resourceVersion field returned when using this continue value will be\nidentical to the value in the first response, unless you have received this token from an error\nmessage.",
          "type": "string"
        },
        "remainingItemCount": {
          "type": "string",
          "format": "int64",
          "title": "remainingItemCount is the number of subsequent items in the list which are not included in this\nlist response. If the list request contained label or field selectors, then the number of\nremaining items is unknown and the field will be left unset and omitted during serialization.\nIf the list is complete (either because it is not chunking or because this is the last chunk),\nthen there are no more remaining items and this field will be left unset and omitted during\nserialization.\nServers older than v1.15 do not set this field.\nThe intended use of the remainingItemCount is *estimating* the size of a collection. Clients\nshould not rely on the remainingItemCount to be set or to be exact.\n+optional"
        },
        "resourceVersion": {
          "type": "string",
          "title": "String that identifies the server's internal version of this object that\ncan be used by clients to determine when objects have changed.\nValue must be treated as opaque by clients and passed unmodified back to the server.\nPopulated by the system.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional"
        },
        "selfLink": {
          "description": "selfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}