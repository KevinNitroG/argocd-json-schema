{
  "type": "object",
  "title": "SyncStatus contains information about the currently observed live and desired states of an application",
  "properties": {
    "comparedTo": {
      "type": "object",
      "title": "ComparedTo contains application source and target which was used for resources comparison",
      "properties": {
        "destination": {
          "type": "object",
          "title": "ApplicationDestination holds information about the application's destination",
          "properties": {
            "name": {
              "type": "string",
              "title": "Name is an alternate way of specifying the target cluster by its symbolic name"
            },
            "namespace": {
              "type": "string",
              "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
            },
            "server": {
              "type": "string",
              "title": "Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API"
            }
          }
        },
        "source": {
          "type": "object",
          "title": "ApplicationSource contains all required information about the source of an application",
          "properties": {
            "chart": {
              "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
              "type": "string"
            },
            "directory": {
              "type": "object",
              "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
              "properties": {
                "exclude": {
                  "type": "string",
                  "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                },
                "include": {
                  "type": "string",
                  "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                },
                "jsonnet": {
                  "type": "object",
                  "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                  "properties": {
                    "extVars": {
                      "type": "array",
                      "title": "ExtVars is a list of Jsonnet External Variables",
                      "items": {
                        "type": "object",
                        "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                        "properties": {
                          "code": {
                            "type": "boolean"
                          },
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "libs": {
                      "type": "array",
                      "title": "Additional library search dirs",
                      "items": {
                        "type": "string"
                      }
                    },
                    "tlas": {
                      "type": "array",
                      "title": "TLAS is a list of Jsonnet Top-level Arguments",
                      "items": {
                        "type": "object",
                        "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                        "properties": {
                          "code": {
                            "type": "boolean"
                          },
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "recurse": {
                  "type": "boolean",
                  "title": "Recurse specifies whether to scan a directory recursively for manifests"
                }
              }
            },
            "helm": {
              "type": "object",
              "title": "ApplicationSourceHelm holds helm specific options",
              "properties": {
                "fileParameters": {
                  "type": "array",
                  "title": "FileParameters are file parameters to the helm template",
                  "items": {
                    "type": "object",
                    "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name is the name of the Helm parameter"
                      },
                      "path": {
                        "type": "string",
                        "title": "Path is the path to the file containing the values for the Helm parameter"
                      }
                    }
                  }
                },
                "ignoreMissingValueFiles": {
                  "type": "boolean",
                  "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                },
                "parameters": {
                  "type": "array",
                  "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                  "items": {
                    "type": "object",
                    "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                    "properties": {
                      "forceString": {
                        "type": "boolean",
                        "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                      },
                      "name": {
                        "type": "string",
                        "title": "Name is the name of the Helm parameter"
                      },
                      "value": {
                        "type": "string",
                        "title": "Value is the value for the Helm parameter"
                      }
                    }
                  }
                },
                "passCredentials": {
                  "type": "boolean",
                  "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                },
                "releaseName": {
                  "type": "string",
                  "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                },
                "skipCrds": {
                  "type": "boolean",
                  "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                },
                "valueFiles": {
                  "type": "array",
                  "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                  "items": {
                    "type": "string"
                  }
                },
                "values": {
                  "type": "string",
                  "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                },
                "version": {
                  "type": "string",
                  "title": "Version is the Helm version to use for templating (\"3\")"
                }
              }
            },
            "kustomize": {
              "type": "object",
              "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
              "properties": {
                "commonAnnotations": {
                  "type": "object",
                  "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "commonLabels": {
                  "type": "object",
                  "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "forceCommonAnnotations": {
                  "type": "boolean",
                  "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                },
                "forceCommonLabels": {
                  "type": "boolean",
                  "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                },
                "images": {
                  "type": "array",
                  "title": "Images is a list of Kustomize image override specifications",
                  "items": {
                    "type": "string"
                  }
                },
                "namePrefix": {
                  "type": "string",
                  "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                },
                "nameSuffix": {
                  "type": "string",
                  "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                },
                "version": {
                  "type": "string",
                  "title": "Version controls which version of Kustomize to use for rendering manifests"
                }
              }
            },
            "path": {
              "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
              "type": "string"
            },
            "plugin": {
              "type": "object",
              "title": "ApplicationSourcePlugin holds options specific to config management plugins",
              "properties": {
                "env": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "EnvEntry represents an entry in the application's environment",
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name is the name of the variable, usually expressed in uppercase"
                      },
                      "value": {
                        "type": "string",
                        "title": "Value is the value of the variable"
                      }
                    }
                  }
                },
                "name": {
                  "type": "string"
                }
              }
            },
            "repoURL": {
              "type": "string",
              "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
            },
            "targetRevision": {
              "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
              "type": "string"
            }
          }
        }
      }
    },
    "revision": {
      "type": "string",
      "title": "Revision contains information about the revision the comparison has been performed to"
    },
    "status": {
      "type": "string",
      "title": "Status is the sync state of the comparison"
    }
  },
  "$schema": "http://json-schema.org/schema#"
}