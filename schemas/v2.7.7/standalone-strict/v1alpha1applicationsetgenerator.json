{
  "description": "ApplicationSetGenerator represents a generator at the top level of an ApplicationSet.",
  "type": "object",
  "properties": {
    "clusterDecisionResource": {
      "description": "DuckType defines a generator to match against clusters registered with ArgoCD.",
      "type": "object",
      "properties": {
        "configMapRef": {
          "type": "string",
          "title": "ConfigMapRef is a ConfigMap with the duck type definitions needed to retrieve the data\n             this includes apiVersion(group/version), kind, matchKey and validation settings\nName is the resource name of the kind, group and version, defined in the ConfigMapRef\nRequeueAfterSeconds is how long before the duckType will be rechecked for a change"
        },
        "labelSelector": {
          "type": "object",
          "title": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.\n+structType=atomic",
          "properties": {
            "matchExpressions": {
              "type": "array",
              "title": "matchExpressions is a list of label selector requirements. The requirements are ANDed.\n+optional",
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "title": "key is the label key that the selector applies to.\n+patchMergeKey=key\n+patchStrategy=merge"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "type": "array",
                    "title": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.\n+optional",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "matchLabels": {
              "type": "object",
              "title": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n+optional",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        },
        "name": {
          "type": "string"
        },
        "requeueAfterSeconds": {
          "type": "string",
          "format": "int64"
        },
        "template": {
          "type": "object",
          "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
          "properties": {
            "metadata": {
              "type": "object",
              "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
              "properties": {
                "annotations": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "finalizers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "labels": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "spec": {
              "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
              "type": "object",
              "properties": {
                "destination": {
                  "type": "object",
                  "title": "ApplicationDestination holds information about the application's destination",
                  "properties": {
                    "name": {
                      "type": "string",
                      "title": "Name is an alternate way of specifying the target cluster by its symbolic name"
                    },
                    "namespace": {
                      "type": "string",
                      "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                    },
                    "server": {
                      "type": "string",
                      "title": "Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API"
                    }
                  },
                  "additionalProperties": false
                },
                "ignoreDifferences": {
                  "type": "array",
                  "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                  "items": {
                    "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "string"
                      },
                      "jqPathExpressions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "jsonPointers": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "kind": {
                        "type": "string"
                      },
                      "managedFieldsManagers": {
                        "type": "array",
                        "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                        "items": {
                          "type": "string"
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "namespace": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "info": {
                  "type": "array",
                  "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "project": {
                  "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                  "type": "string"
                },
                "revisionHistoryLimit": {
                  "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                  "type": "string",
                  "format": "int64"
                },
                "source": {
                  "type": "object",
                  "title": "ApplicationSource contains all required information about the source of an application",
                  "properties": {
                    "chart": {
                      "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                      "type": "string"
                    },
                    "directory": {
                      "type": "object",
                      "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                      "properties": {
                        "exclude": {
                          "type": "string",
                          "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                        },
                        "include": {
                          "type": "string",
                          "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                        },
                        "jsonnet": {
                          "type": "object",
                          "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                          "properties": {
                            "extVars": {
                              "type": "array",
                              "title": "ExtVars is a list of Jsonnet External Variables",
                              "items": {
                                "type": "object",
                                "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                "properties": {
                                  "code": {
                                    "type": "boolean"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "libs": {
                              "type": "array",
                              "title": "Additional library search dirs",
                              "items": {
                                "type": "string"
                              }
                            },
                            "tlas": {
                              "type": "array",
                              "title": "TLAS is a list of Jsonnet Top-level Arguments",
                              "items": {
                                "type": "object",
                                "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                "properties": {
                                  "code": {
                                    "type": "boolean"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            }
                          },
                          "additionalProperties": false
                        },
                        "recurse": {
                          "type": "boolean",
                          "title": "Recurse specifies whether to scan a directory recursively for manifests"
                        }
                      },
                      "additionalProperties": false
                    },
                    "helm": {
                      "type": "object",
                      "title": "ApplicationSourceHelm holds helm specific options",
                      "properties": {
                        "fileParameters": {
                          "type": "array",
                          "title": "FileParameters are file parameters to the helm template",
                          "items": {
                            "type": "object",
                            "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                            "properties": {
                              "name": {
                                "type": "string",
                                "title": "Name is the name of the Helm parameter"
                              },
                              "path": {
                                "type": "string",
                                "title": "Path is the path to the file containing the values for the Helm parameter"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "ignoreMissingValueFiles": {
                          "type": "boolean",
                          "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                        },
                        "parameters": {
                          "type": "array",
                          "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                          "items": {
                            "type": "object",
                            "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                            "properties": {
                              "forceString": {
                                "type": "boolean",
                                "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                              },
                              "name": {
                                "type": "string",
                                "title": "Name is the name of the Helm parameter"
                              },
                              "value": {
                                "type": "string",
                                "title": "Value is the value for the Helm parameter"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "passCredentials": {
                          "type": "boolean",
                          "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                        },
                        "releaseName": {
                          "type": "string",
                          "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                        },
                        "skipCrds": {
                          "type": "boolean",
                          "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                        },
                        "valueFiles": {
                          "type": "array",
                          "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                          "items": {
                            "type": "string"
                          }
                        },
                        "values": {
                          "type": "string",
                          "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                        },
                        "version": {
                          "type": "string",
                          "title": "Version is the Helm version to use for templating (\"3\")"
                        }
                      },
                      "additionalProperties": false
                    },
                    "kustomize": {
                      "type": "object",
                      "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                      "properties": {
                        "commonAnnotations": {
                          "type": "object",
                          "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "commonAnnotationsEnvsubst": {
                          "type": "boolean",
                          "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                        },
                        "commonLabels": {
                          "type": "object",
                          "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "forceCommonAnnotations": {
                          "type": "boolean",
                          "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                        },
                        "forceCommonLabels": {
                          "type": "boolean",
                          "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                        },
                        "images": {
                          "type": "array",
                          "title": "Images is a list of Kustomize image override specifications",
                          "items": {
                            "type": "string"
                          }
                        },
                        "namePrefix": {
                          "type": "string",
                          "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                        },
                        "nameSuffix": {
                          "type": "string",
                          "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                        },
                        "namespace": {
                          "type": "string",
                          "title": "Namespace sets the namespace that Kustomize adds to all resources"
                        },
                        "replicas": {
                          "type": "array",
                          "title": "Replicas is a list of Kustomize Replicas override specifications",
                          "items": {
                            "type": "object",
                            "properties": {
                              "count": {
                                "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                "type": "object",
                                "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                "properties": {
                                  "intVal": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "strVal": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string",
                                    "format": "int64"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "name": {
                                "type": "string",
                                "title": "Name of Deployment or StatefulSet"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "version": {
                          "type": "string",
                          "title": "Version controls which version of Kustomize to use for rendering manifests"
                        }
                      },
                      "additionalProperties": false
                    },
                    "path": {
                      "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                      "type": "string"
                    },
                    "plugin": {
                      "type": "object",
                      "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                      "properties": {
                        "env": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "title": "EnvEntry represents an entry in the application's environment",
                            "properties": {
                              "name": {
                                "type": "string",
                                "title": "Name is the name of the variable, usually expressed in uppercase"
                              },
                              "value": {
                                "type": "string",
                                "title": "Value is the value of the variable"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "name": {
                          "type": "string"
                        },
                        "parameters": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "array": {
                                "description": "Array is the value of an array type parameter.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "map": {
                                "description": "Map is the value of a map type parameter.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "name": {
                                "description": "Name is the name identifying a parameter.",
                                "type": "string"
                              },
                              "string": {
                                "description": "String_ is the value of a string type parameter.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "ref": {
                      "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                      "type": "string"
                    },
                    "repoURL": {
                      "type": "string",
                      "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                    },
                    "targetRevision": {
                      "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "sources": {
                  "type": "array",
                  "title": "Sources is a reference to the location of the application's manifests or chart",
                  "items": {
                    "type": "object",
                    "title": "ApplicationSource contains all required information about the source of an application",
                    "properties": {
                      "chart": {
                        "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                        "type": "string"
                      },
                      "directory": {
                        "type": "object",
                        "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                        "properties": {
                          "exclude": {
                            "type": "string",
                            "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                          },
                          "include": {
                            "type": "string",
                            "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                          },
                          "jsonnet": {
                            "type": "object",
                            "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                            "properties": {
                              "extVars": {
                                "type": "array",
                                "title": "ExtVars is a list of Jsonnet External Variables",
                                "items": {
                                  "type": "object",
                                  "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                  "properties": {
                                    "code": {
                                      "type": "boolean"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "libs": {
                                "type": "array",
                                "title": "Additional library search dirs",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "tlas": {
                                "type": "array",
                                "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                "items": {
                                  "type": "object",
                                  "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                  "properties": {
                                    "code": {
                                      "type": "boolean"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "recurse": {
                            "type": "boolean",
                            "title": "Recurse specifies whether to scan a directory recursively for manifests"
                          }
                        },
                        "additionalProperties": false
                      },
                      "helm": {
                        "type": "object",
                        "title": "ApplicationSourceHelm holds helm specific options",
                        "properties": {
                          "fileParameters": {
                            "type": "array",
                            "title": "FileParameters are file parameters to the helm template",
                            "items": {
                              "type": "object",
                              "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "title": "Name is the name of the Helm parameter"
                                },
                                "path": {
                                  "type": "string",
                                  "title": "Path is the path to the file containing the values for the Helm parameter"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "ignoreMissingValueFiles": {
                            "type": "boolean",
                            "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                          },
                          "parameters": {
                            "type": "array",
                            "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                            "items": {
                              "type": "object",
                              "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                              "properties": {
                                "forceString": {
                                  "type": "boolean",
                                  "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Name is the name of the Helm parameter"
                                },
                                "value": {
                                  "type": "string",
                                  "title": "Value is the value for the Helm parameter"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "passCredentials": {
                            "type": "boolean",
                            "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                          },
                          "releaseName": {
                            "type": "string",
                            "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                          },
                          "skipCrds": {
                            "type": "boolean",
                            "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                          },
                          "valueFiles": {
                            "type": "array",
                            "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                            "items": {
                              "type": "string"
                            }
                          },
                          "values": {
                            "type": "string",
                            "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                          },
                          "version": {
                            "type": "string",
                            "title": "Version is the Helm version to use for templating (\"3\")"
                          }
                        },
                        "additionalProperties": false
                      },
                      "kustomize": {
                        "type": "object",
                        "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                        "properties": {
                          "commonAnnotations": {
                            "type": "object",
                            "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "commonAnnotationsEnvsubst": {
                            "type": "boolean",
                            "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                          },
                          "commonLabels": {
                            "type": "object",
                            "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "forceCommonAnnotations": {
                            "type": "boolean",
                            "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                          },
                          "forceCommonLabels": {
                            "type": "boolean",
                            "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                          },
                          "images": {
                            "type": "array",
                            "title": "Images is a list of Kustomize image override specifications",
                            "items": {
                              "type": "string"
                            }
                          },
                          "namePrefix": {
                            "type": "string",
                            "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                          },
                          "nameSuffix": {
                            "type": "string",
                            "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                          },
                          "namespace": {
                            "type": "string",
                            "title": "Namespace sets the namespace that Kustomize adds to all resources"
                          },
                          "replicas": {
                            "type": "array",
                            "title": "Replicas is a list of Kustomize Replicas override specifications",
                            "items": {
                              "type": "object",
                              "properties": {
                                "count": {
                                  "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                  "type": "object",
                                  "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                  "properties": {
                                    "intVal": {
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "strVal": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string",
                                      "format": "int64"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Name of Deployment or StatefulSet"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "version": {
                            "type": "string",
                            "title": "Version controls which version of Kustomize to use for rendering manifests"
                          }
                        },
                        "additionalProperties": false
                      },
                      "path": {
                        "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                        "type": "string"
                      },
                      "plugin": {
                        "type": "object",
                        "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                        "properties": {
                          "env": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "EnvEntry represents an entry in the application's environment",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "title": "Name is the name of the variable, usually expressed in uppercase"
                                },
                                "value": {
                                  "type": "string",
                                  "title": "Value is the value of the variable"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "parameters": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "array": {
                                  "description": "Array is the value of an array type parameter.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "map": {
                                  "description": "Map is the value of a map type parameter.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "name": {
                                  "description": "Name is the name identifying a parameter.",
                                  "type": "string"
                                },
                                "string": {
                                  "description": "String_ is the value of a string type parameter.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "ref": {
                        "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                        "type": "string"
                      },
                      "repoURL": {
                        "type": "string",
                        "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                      },
                      "targetRevision": {
                        "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "syncPolicy": {
                  "type": "object",
                  "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                  "properties": {
                    "automated": {
                      "type": "object",
                      "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                      "properties": {
                        "allowEmpty": {
                          "type": "boolean",
                          "title": "AllowEmpty allows apps have zero live resources (default: false)"
                        },
                        "prune": {
                          "type": "boolean",
                          "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                        },
                        "selfHeal": {
                          "type": "boolean",
                          "title": "SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                        }
                      },
                      "additionalProperties": false
                    },
                    "managedNamespaceMetadata": {
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "labels": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "retry": {
                      "type": "object",
                      "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                      "properties": {
                        "backoff": {
                          "type": "object",
                          "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                          "properties": {
                            "duration": {
                              "type": "string",
                              "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                            },
                            "factor": {
                              "type": "string",
                              "format": "int64",
                              "title": "Factor is a factor to multiply the base duration after each failed retry"
                            },
                            "maxDuration": {
                              "type": "string",
                              "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                            }
                          },
                          "additionalProperties": false
                        },
                        "limit": {
                          "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                          "type": "string",
                          "format": "int64"
                        }
                      },
                      "additionalProperties": false
                    },
                    "syncOptions": {
                      "type": "array",
                      "title": "Options allow you to specify whole app sync-options",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "values": {
          "type": "object",
          "title": "Values contains key/value pairs which are passed directly as parameters to the template",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "clusters": {
      "description": "ClusterGenerator defines a generator to match against clusters registered with ArgoCD.",
      "type": "object",
      "properties": {
        "selector": {
          "type": "object",
          "title": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.\n+structType=atomic",
          "properties": {
            "matchExpressions": {
              "type": "array",
              "title": "matchExpressions is a list of label selector requirements. The requirements are ANDed.\n+optional",
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "title": "key is the label key that the selector applies to.\n+patchMergeKey=key\n+patchStrategy=merge"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "type": "array",
                    "title": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.\n+optional",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "matchLabels": {
              "type": "object",
              "title": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n+optional",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        },
        "template": {
          "type": "object",
          "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
          "properties": {
            "metadata": {
              "type": "object",
              "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
              "properties": {
                "annotations": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "finalizers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "labels": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "spec": {
              "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
              "type": "object",
              "properties": {
                "destination": {
                  "type": "object",
                  "title": "ApplicationDestination holds information about the application's destination",
                  "properties": {
                    "name": {
                      "type": "string",
                      "title": "Name is an alternate way of specifying the target cluster by its symbolic name"
                    },
                    "namespace": {
                      "type": "string",
                      "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                    },
                    "server": {
                      "type": "string",
                      "title": "Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API"
                    }
                  },
                  "additionalProperties": false
                },
                "ignoreDifferences": {
                  "type": "array",
                  "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                  "items": {
                    "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "string"
                      },
                      "jqPathExpressions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "jsonPointers": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "kind": {
                        "type": "string"
                      },
                      "managedFieldsManagers": {
                        "type": "array",
                        "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                        "items": {
                          "type": "string"
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "namespace": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "info": {
                  "type": "array",
                  "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "project": {
                  "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                  "type": "string"
                },
                "revisionHistoryLimit": {
                  "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                  "type": "string",
                  "format": "int64"
                },
                "source": {
                  "type": "object",
                  "title": "ApplicationSource contains all required information about the source of an application",
                  "properties": {
                    "chart": {
                      "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                      "type": "string"
                    },
                    "directory": {
                      "type": "object",
                      "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                      "properties": {
                        "exclude": {
                          "type": "string",
                          "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                        },
                        "include": {
                          "type": "string",
                          "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                        },
                        "jsonnet": {
                          "type": "object",
                          "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                          "properties": {
                            "extVars": {
                              "type": "array",
                              "title": "ExtVars is a list of Jsonnet External Variables",
                              "items": {
                                "type": "object",
                                "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                "properties": {
                                  "code": {
                                    "type": "boolean"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "libs": {
                              "type": "array",
                              "title": "Additional library search dirs",
                              "items": {
                                "type": "string"
                              }
                            },
                            "tlas": {
                              "type": "array",
                              "title": "TLAS is a list of Jsonnet Top-level Arguments",
                              "items": {
                                "type": "object",
                                "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                "properties": {
                                  "code": {
                                    "type": "boolean"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            }
                          },
                          "additionalProperties": false
                        },
                        "recurse": {
                          "type": "boolean",
                          "title": "Recurse specifies whether to scan a directory recursively for manifests"
                        }
                      },
                      "additionalProperties": false
                    },
                    "helm": {
                      "type": "object",
                      "title": "ApplicationSourceHelm holds helm specific options",
                      "properties": {
                        "fileParameters": {
                          "type": "array",
                          "title": "FileParameters are file parameters to the helm template",
                          "items": {
                            "type": "object",
                            "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                            "properties": {
                              "name": {
                                "type": "string",
                                "title": "Name is the name of the Helm parameter"
                              },
                              "path": {
                                "type": "string",
                                "title": "Path is the path to the file containing the values for the Helm parameter"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "ignoreMissingValueFiles": {
                          "type": "boolean",
                          "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                        },
                        "parameters": {
                          "type": "array",
                          "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                          "items": {
                            "type": "object",
                            "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                            "properties": {
                              "forceString": {
                                "type": "boolean",
                                "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                              },
                              "name": {
                                "type": "string",
                                "title": "Name is the name of the Helm parameter"
                              },
                              "value": {
                                "type": "string",
                                "title": "Value is the value for the Helm parameter"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "passCredentials": {
                          "type": "boolean",
                          "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                        },
                        "releaseName": {
                          "type": "string",
                          "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                        },
                        "skipCrds": {
                          "type": "boolean",
                          "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                        },
                        "valueFiles": {
                          "type": "array",
                          "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                          "items": {
                            "type": "string"
                          }
                        },
                        "values": {
                          "type": "string",
                          "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                        },
                        "version": {
                          "type": "string",
                          "title": "Version is the Helm version to use for templating (\"3\")"
                        }
                      },
                      "additionalProperties": false
                    },
                    "kustomize": {
                      "type": "object",
                      "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                      "properties": {
                        "commonAnnotations": {
                          "type": "object",
                          "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "commonAnnotationsEnvsubst": {
                          "type": "boolean",
                          "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                        },
                        "commonLabels": {
                          "type": "object",
                          "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "forceCommonAnnotations": {
                          "type": "boolean",
                          "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                        },
                        "forceCommonLabels": {
                          "type": "boolean",
                          "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                        },
                        "images": {
                          "type": "array",
                          "title": "Images is a list of Kustomize image override specifications",
                          "items": {
                            "type": "string"
                          }
                        },
                        "namePrefix": {
                          "type": "string",
                          "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                        },
                        "nameSuffix": {
                          "type": "string",
                          "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                        },
                        "namespace": {
                          "type": "string",
                          "title": "Namespace sets the namespace that Kustomize adds to all resources"
                        },
                        "replicas": {
                          "type": "array",
                          "title": "Replicas is a list of Kustomize Replicas override specifications",
                          "items": {
                            "type": "object",
                            "properties": {
                              "count": {
                                "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                "type": "object",
                                "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                "properties": {
                                  "intVal": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "strVal": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string",
                                    "format": "int64"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "name": {
                                "type": "string",
                                "title": "Name of Deployment or StatefulSet"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "version": {
                          "type": "string",
                          "title": "Version controls which version of Kustomize to use for rendering manifests"
                        }
                      },
                      "additionalProperties": false
                    },
                    "path": {
                      "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                      "type": "string"
                    },
                    "plugin": {
                      "type": "object",
                      "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                      "properties": {
                        "env": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "title": "EnvEntry represents an entry in the application's environment",
                            "properties": {
                              "name": {
                                "type": "string",
                                "title": "Name is the name of the variable, usually expressed in uppercase"
                              },
                              "value": {
                                "type": "string",
                                "title": "Value is the value of the variable"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "name": {
                          "type": "string"
                        },
                        "parameters": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "array": {
                                "description": "Array is the value of an array type parameter.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "map": {
                                "description": "Map is the value of a map type parameter.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "name": {
                                "description": "Name is the name identifying a parameter.",
                                "type": "string"
                              },
                              "string": {
                                "description": "String_ is the value of a string type parameter.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "ref": {
                      "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                      "type": "string"
                    },
                    "repoURL": {
                      "type": "string",
                      "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                    },
                    "targetRevision": {
                      "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "sources": {
                  "type": "array",
                  "title": "Sources is a reference to the location of the application's manifests or chart",
                  "items": {
                    "type": "object",
                    "title": "ApplicationSource contains all required information about the source of an application",
                    "properties": {
                      "chart": {
                        "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                        "type": "string"
                      },
                      "directory": {
                        "type": "object",
                        "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                        "properties": {
                          "exclude": {
                            "type": "string",
                            "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                          },
                          "include": {
                            "type": "string",
                            "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                          },
                          "jsonnet": {
                            "type": "object",
                            "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                            "properties": {
                              "extVars": {
                                "type": "array",
                                "title": "ExtVars is a list of Jsonnet External Variables",
                                "items": {
                                  "type": "object",
                                  "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                  "properties": {
                                    "code": {
                                      "type": "boolean"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "libs": {
                                "type": "array",
                                "title": "Additional library search dirs",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "tlas": {
                                "type": "array",
                                "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                "items": {
                                  "type": "object",
                                  "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                  "properties": {
                                    "code": {
                                      "type": "boolean"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "recurse": {
                            "type": "boolean",
                            "title": "Recurse specifies whether to scan a directory recursively for manifests"
                          }
                        },
                        "additionalProperties": false
                      },
                      "helm": {
                        "type": "object",
                        "title": "ApplicationSourceHelm holds helm specific options",
                        "properties": {
                          "fileParameters": {
                            "type": "array",
                            "title": "FileParameters are file parameters to the helm template",
                            "items": {
                              "type": "object",
                              "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "title": "Name is the name of the Helm parameter"
                                },
                                "path": {
                                  "type": "string",
                                  "title": "Path is the path to the file containing the values for the Helm parameter"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "ignoreMissingValueFiles": {
                            "type": "boolean",
                            "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                          },
                          "parameters": {
                            "type": "array",
                            "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                            "items": {
                              "type": "object",
                              "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                              "properties": {
                                "forceString": {
                                  "type": "boolean",
                                  "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Name is the name of the Helm parameter"
                                },
                                "value": {
                                  "type": "string",
                                  "title": "Value is the value for the Helm parameter"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "passCredentials": {
                            "type": "boolean",
                            "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                          },
                          "releaseName": {
                            "type": "string",
                            "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                          },
                          "skipCrds": {
                            "type": "boolean",
                            "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                          },
                          "valueFiles": {
                            "type": "array",
                            "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                            "items": {
                              "type": "string"
                            }
                          },
                          "values": {
                            "type": "string",
                            "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                          },
                          "version": {
                            "type": "string",
                            "title": "Version is the Helm version to use for templating (\"3\")"
                          }
                        },
                        "additionalProperties": false
                      },
                      "kustomize": {
                        "type": "object",
                        "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                        "properties": {
                          "commonAnnotations": {
                            "type": "object",
                            "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "commonAnnotationsEnvsubst": {
                            "type": "boolean",
                            "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                          },
                          "commonLabels": {
                            "type": "object",
                            "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "forceCommonAnnotations": {
                            "type": "boolean",
                            "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                          },
                          "forceCommonLabels": {
                            "type": "boolean",
                            "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                          },
                          "images": {
                            "type": "array",
                            "title": "Images is a list of Kustomize image override specifications",
                            "items": {
                              "type": "string"
                            }
                          },
                          "namePrefix": {
                            "type": "string",
                            "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                          },
                          "nameSuffix": {
                            "type": "string",
                            "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                          },
                          "namespace": {
                            "type": "string",
                            "title": "Namespace sets the namespace that Kustomize adds to all resources"
                          },
                          "replicas": {
                            "type": "array",
                            "title": "Replicas is a list of Kustomize Replicas override specifications",
                            "items": {
                              "type": "object",
                              "properties": {
                                "count": {
                                  "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                  "type": "object",
                                  "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                  "properties": {
                                    "intVal": {
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "strVal": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string",
                                      "format": "int64"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Name of Deployment or StatefulSet"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "version": {
                            "type": "string",
                            "title": "Version controls which version of Kustomize to use for rendering manifests"
                          }
                        },
                        "additionalProperties": false
                      },
                      "path": {
                        "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                        "type": "string"
                      },
                      "plugin": {
                        "type": "object",
                        "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                        "properties": {
                          "env": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "EnvEntry represents an entry in the application's environment",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "title": "Name is the name of the variable, usually expressed in uppercase"
                                },
                                "value": {
                                  "type": "string",
                                  "title": "Value is the value of the variable"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "parameters": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "array": {
                                  "description": "Array is the value of an array type parameter.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "map": {
                                  "description": "Map is the value of a map type parameter.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "name": {
                                  "description": "Name is the name identifying a parameter.",
                                  "type": "string"
                                },
                                "string": {
                                  "description": "String_ is the value of a string type parameter.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "ref": {
                        "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                        "type": "string"
                      },
                      "repoURL": {
                        "type": "string",
                        "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                      },
                      "targetRevision": {
                        "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "syncPolicy": {
                  "type": "object",
                  "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                  "properties": {
                    "automated": {
                      "type": "object",
                      "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                      "properties": {
                        "allowEmpty": {
                          "type": "boolean",
                          "title": "AllowEmpty allows apps have zero live resources (default: false)"
                        },
                        "prune": {
                          "type": "boolean",
                          "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                        },
                        "selfHeal": {
                          "type": "boolean",
                          "title": "SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                        }
                      },
                      "additionalProperties": false
                    },
                    "managedNamespaceMetadata": {
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "labels": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "retry": {
                      "type": "object",
                      "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                      "properties": {
                        "backoff": {
                          "type": "object",
                          "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                          "properties": {
                            "duration": {
                              "type": "string",
                              "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                            },
                            "factor": {
                              "type": "string",
                              "format": "int64",
                              "title": "Factor is a factor to multiply the base duration after each failed retry"
                            },
                            "maxDuration": {
                              "type": "string",
                              "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                            }
                          },
                          "additionalProperties": false
                        },
                        "limit": {
                          "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                          "type": "string",
                          "format": "int64"
                        }
                      },
                      "additionalProperties": false
                    },
                    "syncOptions": {
                      "type": "array",
                      "title": "Options allow you to specify whole app sync-options",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "values": {
          "type": "object",
          "title": "Values contains key/value pairs which are passed directly as parameters to the template",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "git": {
      "type": "object",
      "properties": {
        "directories": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "exclude": {
                "type": "boolean"
              },
              "path": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "files": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "pathParamPrefix": {
          "type": "string"
        },
        "repoURL": {
          "type": "string"
        },
        "requeueAfterSeconds": {
          "type": "string",
          "format": "int64"
        },
        "revision": {
          "type": "string"
        },
        "template": {
          "type": "object",
          "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
          "properties": {
            "metadata": {
              "type": "object",
              "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
              "properties": {
                "annotations": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "finalizers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "labels": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "spec": {
              "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
              "type": "object",
              "properties": {
                "destination": {
                  "type": "object",
                  "title": "ApplicationDestination holds information about the application's destination",
                  "properties": {
                    "name": {
                      "type": "string",
                      "title": "Name is an alternate way of specifying the target cluster by its symbolic name"
                    },
                    "namespace": {
                      "type": "string",
                      "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                    },
                    "server": {
                      "type": "string",
                      "title": "Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API"
                    }
                  },
                  "additionalProperties": false
                },
                "ignoreDifferences": {
                  "type": "array",
                  "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                  "items": {
                    "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "string"
                      },
                      "jqPathExpressions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "jsonPointers": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "kind": {
                        "type": "string"
                      },
                      "managedFieldsManagers": {
                        "type": "array",
                        "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                        "items": {
                          "type": "string"
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "namespace": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "info": {
                  "type": "array",
                  "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "project": {
                  "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                  "type": "string"
                },
                "revisionHistoryLimit": {
                  "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                  "type": "string",
                  "format": "int64"
                },
                "source": {
                  "type": "object",
                  "title": "ApplicationSource contains all required information about the source of an application",
                  "properties": {
                    "chart": {
                      "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                      "type": "string"
                    },
                    "directory": {
                      "type": "object",
                      "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                      "properties": {
                        "exclude": {
                          "type": "string",
                          "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                        },
                        "include": {
                          "type": "string",
                          "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                        },
                        "jsonnet": {
                          "type": "object",
                          "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                          "properties": {
                            "extVars": {
                              "type": "array",
                              "title": "ExtVars is a list of Jsonnet External Variables",
                              "items": {
                                "type": "object",
                                "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                "properties": {
                                  "code": {
                                    "type": "boolean"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "libs": {
                              "type": "array",
                              "title": "Additional library search dirs",
                              "items": {
                                "type": "string"
                              }
                            },
                            "tlas": {
                              "type": "array",
                              "title": "TLAS is a list of Jsonnet Top-level Arguments",
                              "items": {
                                "type": "object",
                                "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                "properties": {
                                  "code": {
                                    "type": "boolean"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            }
                          },
                          "additionalProperties": false
                        },
                        "recurse": {
                          "type": "boolean",
                          "title": "Recurse specifies whether to scan a directory recursively for manifests"
                        }
                      },
                      "additionalProperties": false
                    },
                    "helm": {
                      "type": "object",
                      "title": "ApplicationSourceHelm holds helm specific options",
                      "properties": {
                        "fileParameters": {
                          "type": "array",
                          "title": "FileParameters are file parameters to the helm template",
                          "items": {
                            "type": "object",
                            "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                            "properties": {
                              "name": {
                                "type": "string",
                                "title": "Name is the name of the Helm parameter"
                              },
                              "path": {
                                "type": "string",
                                "title": "Path is the path to the file containing the values for the Helm parameter"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "ignoreMissingValueFiles": {
                          "type": "boolean",
                          "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                        },
                        "parameters": {
                          "type": "array",
                          "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                          "items": {
                            "type": "object",
                            "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                            "properties": {
                              "forceString": {
                                "type": "boolean",
                                "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                              },
                              "name": {
                                "type": "string",
                                "title": "Name is the name of the Helm parameter"
                              },
                              "value": {
                                "type": "string",
                                "title": "Value is the value for the Helm parameter"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "passCredentials": {
                          "type": "boolean",
                          "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                        },
                        "releaseName": {
                          "type": "string",
                          "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                        },
                        "skipCrds": {
                          "type": "boolean",
                          "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                        },
                        "valueFiles": {
                          "type": "array",
                          "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                          "items": {
                            "type": "string"
                          }
                        },
                        "values": {
                          "type": "string",
                          "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                        },
                        "version": {
                          "type": "string",
                          "title": "Version is the Helm version to use for templating (\"3\")"
                        }
                      },
                      "additionalProperties": false
                    },
                    "kustomize": {
                      "type": "object",
                      "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                      "properties": {
                        "commonAnnotations": {
                          "type": "object",
                          "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "commonAnnotationsEnvsubst": {
                          "type": "boolean",
                          "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                        },
                        "commonLabels": {
                          "type": "object",
                          "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "forceCommonAnnotations": {
                          "type": "boolean",
                          "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                        },
                        "forceCommonLabels": {
                          "type": "boolean",
                          "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                        },
                        "images": {
                          "type": "array",
                          "title": "Images is a list of Kustomize image override specifications",
                          "items": {
                            "type": "string"
                          }
                        },
                        "namePrefix": {
                          "type": "string",
                          "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                        },
                        "nameSuffix": {
                          "type": "string",
                          "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                        },
                        "namespace": {
                          "type": "string",
                          "title": "Namespace sets the namespace that Kustomize adds to all resources"
                        },
                        "replicas": {
                          "type": "array",
                          "title": "Replicas is a list of Kustomize Replicas override specifications",
                          "items": {
                            "type": "object",
                            "properties": {
                              "count": {
                                "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                "type": "object",
                                "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                "properties": {
                                  "intVal": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "strVal": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string",
                                    "format": "int64"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "name": {
                                "type": "string",
                                "title": "Name of Deployment or StatefulSet"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "version": {
                          "type": "string",
                          "title": "Version controls which version of Kustomize to use for rendering manifests"
                        }
                      },
                      "additionalProperties": false
                    },
                    "path": {
                      "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                      "type": "string"
                    },
                    "plugin": {
                      "type": "object",
                      "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                      "properties": {
                        "env": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "title": "EnvEntry represents an entry in the application's environment",
                            "properties": {
                              "name": {
                                "type": "string",
                                "title": "Name is the name of the variable, usually expressed in uppercase"
                              },
                              "value": {
                                "type": "string",
                                "title": "Value is the value of the variable"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "name": {
                          "type": "string"
                        },
                        "parameters": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "array": {
                                "description": "Array is the value of an array type parameter.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "map": {
                                "description": "Map is the value of a map type parameter.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "name": {
                                "description": "Name is the name identifying a parameter.",
                                "type": "string"
                              },
                              "string": {
                                "description": "String_ is the value of a string type parameter.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "ref": {
                      "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                      "type": "string"
                    },
                    "repoURL": {
                      "type": "string",
                      "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                    },
                    "targetRevision": {
                      "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "sources": {
                  "type": "array",
                  "title": "Sources is a reference to the location of the application's manifests or chart",
                  "items": {
                    "type": "object",
                    "title": "ApplicationSource contains all required information about the source of an application",
                    "properties": {
                      "chart": {
                        "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                        "type": "string"
                      },
                      "directory": {
                        "type": "object",
                        "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                        "properties": {
                          "exclude": {
                            "type": "string",
                            "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                          },
                          "include": {
                            "type": "string",
                            "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                          },
                          "jsonnet": {
                            "type": "object",
                            "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                            "properties": {
                              "extVars": {
                                "type": "array",
                                "title": "ExtVars is a list of Jsonnet External Variables",
                                "items": {
                                  "type": "object",
                                  "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                  "properties": {
                                    "code": {
                                      "type": "boolean"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "libs": {
                                "type": "array",
                                "title": "Additional library search dirs",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "tlas": {
                                "type": "array",
                                "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                "items": {
                                  "type": "object",
                                  "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                  "properties": {
                                    "code": {
                                      "type": "boolean"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "recurse": {
                            "type": "boolean",
                            "title": "Recurse specifies whether to scan a directory recursively for manifests"
                          }
                        },
                        "additionalProperties": false
                      },
                      "helm": {
                        "type": "object",
                        "title": "ApplicationSourceHelm holds helm specific options",
                        "properties": {
                          "fileParameters": {
                            "type": "array",
                            "title": "FileParameters are file parameters to the helm template",
                            "items": {
                              "type": "object",
                              "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "title": "Name is the name of the Helm parameter"
                                },
                                "path": {
                                  "type": "string",
                                  "title": "Path is the path to the file containing the values for the Helm parameter"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "ignoreMissingValueFiles": {
                            "type": "boolean",
                            "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                          },
                          "parameters": {
                            "type": "array",
                            "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                            "items": {
                              "type": "object",
                              "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                              "properties": {
                                "forceString": {
                                  "type": "boolean",
                                  "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Name is the name of the Helm parameter"
                                },
                                "value": {
                                  "type": "string",
                                  "title": "Value is the value for the Helm parameter"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "passCredentials": {
                            "type": "boolean",
                            "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                          },
                          "releaseName": {
                            "type": "string",
                            "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                          },
                          "skipCrds": {
                            "type": "boolean",
                            "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                          },
                          "valueFiles": {
                            "type": "array",
                            "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                            "items": {
                              "type": "string"
                            }
                          },
                          "values": {
                            "type": "string",
                            "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                          },
                          "version": {
                            "type": "string",
                            "title": "Version is the Helm version to use for templating (\"3\")"
                          }
                        },
                        "additionalProperties": false
                      },
                      "kustomize": {
                        "type": "object",
                        "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                        "properties": {
                          "commonAnnotations": {
                            "type": "object",
                            "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "commonAnnotationsEnvsubst": {
                            "type": "boolean",
                            "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                          },
                          "commonLabels": {
                            "type": "object",
                            "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "forceCommonAnnotations": {
                            "type": "boolean",
                            "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                          },
                          "forceCommonLabels": {
                            "type": "boolean",
                            "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                          },
                          "images": {
                            "type": "array",
                            "title": "Images is a list of Kustomize image override specifications",
                            "items": {
                              "type": "string"
                            }
                          },
                          "namePrefix": {
                            "type": "string",
                            "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                          },
                          "nameSuffix": {
                            "type": "string",
                            "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                          },
                          "namespace": {
                            "type": "string",
                            "title": "Namespace sets the namespace that Kustomize adds to all resources"
                          },
                          "replicas": {
                            "type": "array",
                            "title": "Replicas is a list of Kustomize Replicas override specifications",
                            "items": {
                              "type": "object",
                              "properties": {
                                "count": {
                                  "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                  "type": "object",
                                  "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                  "properties": {
                                    "intVal": {
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "strVal": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string",
                                      "format": "int64"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Name of Deployment or StatefulSet"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "version": {
                            "type": "string",
                            "title": "Version controls which version of Kustomize to use for rendering manifests"
                          }
                        },
                        "additionalProperties": false
                      },
                      "path": {
                        "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                        "type": "string"
                      },
                      "plugin": {
                        "type": "object",
                        "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                        "properties": {
                          "env": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "EnvEntry represents an entry in the application's environment",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "title": "Name is the name of the variable, usually expressed in uppercase"
                                },
                                "value": {
                                  "type": "string",
                                  "title": "Value is the value of the variable"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "parameters": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "array": {
                                  "description": "Array is the value of an array type parameter.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "map": {
                                  "description": "Map is the value of a map type parameter.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "name": {
                                  "description": "Name is the name identifying a parameter.",
                                  "type": "string"
                                },
                                "string": {
                                  "description": "String_ is the value of a string type parameter.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "ref": {
                        "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                        "type": "string"
                      },
                      "repoURL": {
                        "type": "string",
                        "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                      },
                      "targetRevision": {
                        "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "syncPolicy": {
                  "type": "object",
                  "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                  "properties": {
                    "automated": {
                      "type": "object",
                      "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                      "properties": {
                        "allowEmpty": {
                          "type": "boolean",
                          "title": "AllowEmpty allows apps have zero live resources (default: false)"
                        },
                        "prune": {
                          "type": "boolean",
                          "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                        },
                        "selfHeal": {
                          "type": "boolean",
                          "title": "SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                        }
                      },
                      "additionalProperties": false
                    },
                    "managedNamespaceMetadata": {
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "labels": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "retry": {
                      "type": "object",
                      "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                      "properties": {
                        "backoff": {
                          "type": "object",
                          "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                          "properties": {
                            "duration": {
                              "type": "string",
                              "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                            },
                            "factor": {
                              "type": "string",
                              "format": "int64",
                              "title": "Factor is a factor to multiply the base duration after each failed retry"
                            },
                            "maxDuration": {
                              "type": "string",
                              "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                            }
                          },
                          "additionalProperties": false
                        },
                        "limit": {
                          "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                          "type": "string",
                          "format": "int64"
                        }
                      },
                      "additionalProperties": false
                    },
                    "syncOptions": {
                      "type": "array",
                      "title": "Options allow you to specify whole app sync-options",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "list": {
      "type": "object",
      "title": "ListGenerator include items info",
      "properties": {
        "elements": {
          "type": "array",
          "items": {
            "description": "JSON represents any valid JSON value.\nThese types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.",
            "type": "object",
            "properties": {
              "raw": {
                "type": "string",
                "format": "byte"
              }
            },
            "additionalProperties": false
          }
        },
        "elementsYaml": {
          "type": "string"
        },
        "template": {
          "type": "object",
          "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
          "properties": {
            "metadata": {
              "type": "object",
              "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
              "properties": {
                "annotations": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "finalizers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "labels": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "spec": {
              "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
              "type": "object",
              "properties": {
                "destination": {
                  "type": "object",
                  "title": "ApplicationDestination holds information about the application's destination",
                  "properties": {
                    "name": {
                      "type": "string",
                      "title": "Name is an alternate way of specifying the target cluster by its symbolic name"
                    },
                    "namespace": {
                      "type": "string",
                      "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                    },
                    "server": {
                      "type": "string",
                      "title": "Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API"
                    }
                  },
                  "additionalProperties": false
                },
                "ignoreDifferences": {
                  "type": "array",
                  "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                  "items": {
                    "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "string"
                      },
                      "jqPathExpressions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "jsonPointers": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "kind": {
                        "type": "string"
                      },
                      "managedFieldsManagers": {
                        "type": "array",
                        "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                        "items": {
                          "type": "string"
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "namespace": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "info": {
                  "type": "array",
                  "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "project": {
                  "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                  "type": "string"
                },
                "revisionHistoryLimit": {
                  "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                  "type": "string",
                  "format": "int64"
                },
                "source": {
                  "type": "object",
                  "title": "ApplicationSource contains all required information about the source of an application",
                  "properties": {
                    "chart": {
                      "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                      "type": "string"
                    },
                    "directory": {
                      "type": "object",
                      "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                      "properties": {
                        "exclude": {
                          "type": "string",
                          "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                        },
                        "include": {
                          "type": "string",
                          "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                        },
                        "jsonnet": {
                          "type": "object",
                          "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                          "properties": {
                            "extVars": {
                              "type": "array",
                              "title": "ExtVars is a list of Jsonnet External Variables",
                              "items": {
                                "type": "object",
                                "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                "properties": {
                                  "code": {
                                    "type": "boolean"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "libs": {
                              "type": "array",
                              "title": "Additional library search dirs",
                              "items": {
                                "type": "string"
                              }
                            },
                            "tlas": {
                              "type": "array",
                              "title": "TLAS is a list of Jsonnet Top-level Arguments",
                              "items": {
                                "type": "object",
                                "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                "properties": {
                                  "code": {
                                    "type": "boolean"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            }
                          },
                          "additionalProperties": false
                        },
                        "recurse": {
                          "type": "boolean",
                          "title": "Recurse specifies whether to scan a directory recursively for manifests"
                        }
                      },
                      "additionalProperties": false
                    },
                    "helm": {
                      "type": "object",
                      "title": "ApplicationSourceHelm holds helm specific options",
                      "properties": {
                        "fileParameters": {
                          "type": "array",
                          "title": "FileParameters are file parameters to the helm template",
                          "items": {
                            "type": "object",
                            "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                            "properties": {
                              "name": {
                                "type": "string",
                                "title": "Name is the name of the Helm parameter"
                              },
                              "path": {
                                "type": "string",
                                "title": "Path is the path to the file containing the values for the Helm parameter"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "ignoreMissingValueFiles": {
                          "type": "boolean",
                          "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                        },
                        "parameters": {
                          "type": "array",
                          "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                          "items": {
                            "type": "object",
                            "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                            "properties": {
                              "forceString": {
                                "type": "boolean",
                                "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                              },
                              "name": {
                                "type": "string",
                                "title": "Name is the name of the Helm parameter"
                              },
                              "value": {
                                "type": "string",
                                "title": "Value is the value for the Helm parameter"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "passCredentials": {
                          "type": "boolean",
                          "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                        },
                        "releaseName": {
                          "type": "string",
                          "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                        },
                        "skipCrds": {
                          "type": "boolean",
                          "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                        },
                        "valueFiles": {
                          "type": "array",
                          "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                          "items": {
                            "type": "string"
                          }
                        },
                        "values": {
                          "type": "string",
                          "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                        },
                        "version": {
                          "type": "string",
                          "title": "Version is the Helm version to use for templating (\"3\")"
                        }
                      },
                      "additionalProperties": false
                    },
                    "kustomize": {
                      "type": "object",
                      "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                      "properties": {
                        "commonAnnotations": {
                          "type": "object",
                          "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "commonAnnotationsEnvsubst": {
                          "type": "boolean",
                          "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                        },
                        "commonLabels": {
                          "type": "object",
                          "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "forceCommonAnnotations": {
                          "type": "boolean",
                          "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                        },
                        "forceCommonLabels": {
                          "type": "boolean",
                          "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                        },
                        "images": {
                          "type": "array",
                          "title": "Images is a list of Kustomize image override specifications",
                          "items": {
                            "type": "string"
                          }
                        },
                        "namePrefix": {
                          "type": "string",
                          "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                        },
                        "nameSuffix": {
                          "type": "string",
                          "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                        },
                        "namespace": {
                          "type": "string",
                          "title": "Namespace sets the namespace that Kustomize adds to all resources"
                        },
                        "replicas": {
                          "type": "array",
                          "title": "Replicas is a list of Kustomize Replicas override specifications",
                          "items": {
                            "type": "object",
                            "properties": {
                              "count": {
                                "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                "type": "object",
                                "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                "properties": {
                                  "intVal": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "strVal": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string",
                                    "format": "int64"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "name": {
                                "type": "string",
                                "title": "Name of Deployment or StatefulSet"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "version": {
                          "type": "string",
                          "title": "Version controls which version of Kustomize to use for rendering manifests"
                        }
                      },
                      "additionalProperties": false
                    },
                    "path": {
                      "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                      "type": "string"
                    },
                    "plugin": {
                      "type": "object",
                      "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                      "properties": {
                        "env": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "title": "EnvEntry represents an entry in the application's environment",
                            "properties": {
                              "name": {
                                "type": "string",
                                "title": "Name is the name of the variable, usually expressed in uppercase"
                              },
                              "value": {
                                "type": "string",
                                "title": "Value is the value of the variable"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "name": {
                          "type": "string"
                        },
                        "parameters": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "array": {
                                "description": "Array is the value of an array type parameter.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "map": {
                                "description": "Map is the value of a map type parameter.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "name": {
                                "description": "Name is the name identifying a parameter.",
                                "type": "string"
                              },
                              "string": {
                                "description": "String_ is the value of a string type parameter.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "ref": {
                      "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                      "type": "string"
                    },
                    "repoURL": {
                      "type": "string",
                      "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                    },
                    "targetRevision": {
                      "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "sources": {
                  "type": "array",
                  "title": "Sources is a reference to the location of the application's manifests or chart",
                  "items": {
                    "type": "object",
                    "title": "ApplicationSource contains all required information about the source of an application",
                    "properties": {
                      "chart": {
                        "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                        "type": "string"
                      },
                      "directory": {
                        "type": "object",
                        "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                        "properties": {
                          "exclude": {
                            "type": "string",
                            "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                          },
                          "include": {
                            "type": "string",
                            "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                          },
                          "jsonnet": {
                            "type": "object",
                            "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                            "properties": {
                              "extVars": {
                                "type": "array",
                                "title": "ExtVars is a list of Jsonnet External Variables",
                                "items": {
                                  "type": "object",
                                  "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                  "properties": {
                                    "code": {
                                      "type": "boolean"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "libs": {
                                "type": "array",
                                "title": "Additional library search dirs",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "tlas": {
                                "type": "array",
                                "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                "items": {
                                  "type": "object",
                                  "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                  "properties": {
                                    "code": {
                                      "type": "boolean"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "recurse": {
                            "type": "boolean",
                            "title": "Recurse specifies whether to scan a directory recursively for manifests"
                          }
                        },
                        "additionalProperties": false
                      },
                      "helm": {
                        "type": "object",
                        "title": "ApplicationSourceHelm holds helm specific options",
                        "properties": {
                          "fileParameters": {
                            "type": "array",
                            "title": "FileParameters are file parameters to the helm template",
                            "items": {
                              "type": "object",
                              "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "title": "Name is the name of the Helm parameter"
                                },
                                "path": {
                                  "type": "string",
                                  "title": "Path is the path to the file containing the values for the Helm parameter"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "ignoreMissingValueFiles": {
                            "type": "boolean",
                            "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                          },
                          "parameters": {
                            "type": "array",
                            "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                            "items": {
                              "type": "object",
                              "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                              "properties": {
                                "forceString": {
                                  "type": "boolean",
                                  "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Name is the name of the Helm parameter"
                                },
                                "value": {
                                  "type": "string",
                                  "title": "Value is the value for the Helm parameter"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "passCredentials": {
                            "type": "boolean",
                            "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                          },
                          "releaseName": {
                            "type": "string",
                            "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                          },
                          "skipCrds": {
                            "type": "boolean",
                            "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                          },
                          "valueFiles": {
                            "type": "array",
                            "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                            "items": {
                              "type": "string"
                            }
                          },
                          "values": {
                            "type": "string",
                            "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                          },
                          "version": {
                            "type": "string",
                            "title": "Version is the Helm version to use for templating (\"3\")"
                          }
                        },
                        "additionalProperties": false
                      },
                      "kustomize": {
                        "type": "object",
                        "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                        "properties": {
                          "commonAnnotations": {
                            "type": "object",
                            "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "commonAnnotationsEnvsubst": {
                            "type": "boolean",
                            "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                          },
                          "commonLabels": {
                            "type": "object",
                            "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "forceCommonAnnotations": {
                            "type": "boolean",
                            "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                          },
                          "forceCommonLabels": {
                            "type": "boolean",
                            "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                          },
                          "images": {
                            "type": "array",
                            "title": "Images is a list of Kustomize image override specifications",
                            "items": {
                              "type": "string"
                            }
                          },
                          "namePrefix": {
                            "type": "string",
                            "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                          },
                          "nameSuffix": {
                            "type": "string",
                            "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                          },
                          "namespace": {
                            "type": "string",
                            "title": "Namespace sets the namespace that Kustomize adds to all resources"
                          },
                          "replicas": {
                            "type": "array",
                            "title": "Replicas is a list of Kustomize Replicas override specifications",
                            "items": {
                              "type": "object",
                              "properties": {
                                "count": {
                                  "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                  "type": "object",
                                  "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                  "properties": {
                                    "intVal": {
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "strVal": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string",
                                      "format": "int64"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Name of Deployment or StatefulSet"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "version": {
                            "type": "string",
                            "title": "Version controls which version of Kustomize to use for rendering manifests"
                          }
                        },
                        "additionalProperties": false
                      },
                      "path": {
                        "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                        "type": "string"
                      },
                      "plugin": {
                        "type": "object",
                        "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                        "properties": {
                          "env": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "EnvEntry represents an entry in the application's environment",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "title": "Name is the name of the variable, usually expressed in uppercase"
                                },
                                "value": {
                                  "type": "string",
                                  "title": "Value is the value of the variable"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "parameters": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "array": {
                                  "description": "Array is the value of an array type parameter.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "map": {
                                  "description": "Map is the value of a map type parameter.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "name": {
                                  "description": "Name is the name identifying a parameter.",
                                  "type": "string"
                                },
                                "string": {
                                  "description": "String_ is the value of a string type parameter.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "ref": {
                        "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                        "type": "string"
                      },
                      "repoURL": {
                        "type": "string",
                        "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                      },
                      "targetRevision": {
                        "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "syncPolicy": {
                  "type": "object",
                  "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                  "properties": {
                    "automated": {
                      "type": "object",
                      "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                      "properties": {
                        "allowEmpty": {
                          "type": "boolean",
                          "title": "AllowEmpty allows apps have zero live resources (default: false)"
                        },
                        "prune": {
                          "type": "boolean",
                          "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                        },
                        "selfHeal": {
                          "type": "boolean",
                          "title": "SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                        }
                      },
                      "additionalProperties": false
                    },
                    "managedNamespaceMetadata": {
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "labels": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "retry": {
                      "type": "object",
                      "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                      "properties": {
                        "backoff": {
                          "type": "object",
                          "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                          "properties": {
                            "duration": {
                              "type": "string",
                              "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                            },
                            "factor": {
                              "type": "string",
                              "format": "int64",
                              "title": "Factor is a factor to multiply the base duration after each failed retry"
                            },
                            "maxDuration": {
                              "type": "string",
                              "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                            }
                          },
                          "additionalProperties": false
                        },
                        "limit": {
                          "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                          "type": "string",
                          "format": "int64"
                        }
                      },
                      "additionalProperties": false
                    },
                    "syncOptions": {
                      "type": "array",
                      "title": "Options allow you to specify whole app sync-options",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "matrix": {
      "description": "MatrixGenerator generates the cartesian product of two sets of parameters. The parameters are defined by two nested\ngenerators.",
      "type": "object",
      "properties": {
        "generators": {
          "type": "array",
          "items": {
            "description": "ApplicationSetNestedGenerator represents a generator nested within a combination-type generator (MatrixGenerator or\nMergeGenerator).",
            "type": "object",
            "properties": {
              "clusterDecisionResource": {
                "description": "DuckType defines a generator to match against clusters registered with ArgoCD.",
                "type": "object",
                "properties": {
                  "configMapRef": {
                    "type": "string",
                    "title": "ConfigMapRef is a ConfigMap with the duck type definitions needed to retrieve the data\n             this includes apiVersion(group/version), kind, matchKey and validation settings\nName is the resource name of the kind, group and version, defined in the ConfigMapRef\nRequeueAfterSeconds is how long before the duckType will be rechecked for a change"
                  },
                  "labelSelector": {
                    "type": "object",
                    "title": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.\n+structType=atomic",
                    "properties": {
                      "matchExpressions": {
                        "type": "array",
                        "title": "matchExpressions is a list of label selector requirements. The requirements are ANDed.\n+optional",
                        "items": {
                          "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "title": "key is the label key that the selector applies to.\n+patchMergeKey=key\n+patchStrategy=merge"
                            },
                            "operator": {
                              "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                              "type": "string"
                            },
                            "values": {
                              "type": "array",
                              "title": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.\n+optional",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "matchLabels": {
                        "type": "object",
                        "title": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n+optional",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "name": {
                    "type": "string"
                  },
                  "requeueAfterSeconds": {
                    "type": "string",
                    "format": "int64"
                  },
                  "template": {
                    "type": "object",
                    "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
                    "properties": {
                      "metadata": {
                        "type": "object",
                        "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
                        "properties": {
                          "annotations": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "finalizers": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "namespace": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "spec": {
                        "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
                        "type": "object",
                        "properties": {
                          "destination": {
                            "type": "object",
                            "title": "ApplicationDestination holds information about the application's destination",
                            "properties": {
                              "name": {
                                "type": "string",
                                "title": "Name is an alternate way of specifying the target cluster by its symbolic name"
                              },
                              "namespace": {
                                "type": "string",
                                "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                              },
                              "server": {
                                "type": "string",
                                "title": "Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API"
                              }
                            },
                            "additionalProperties": false
                          },
                          "ignoreDifferences": {
                            "type": "array",
                            "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                            "items": {
                              "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                              "type": "object",
                              "properties": {
                                "group": {
                                  "type": "string"
                                },
                                "jqPathExpressions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "jsonPointers": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "kind": {
                                  "type": "string"
                                },
                                "managedFieldsManagers": {
                                  "type": "array",
                                  "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "name": {
                                  "type": "string"
                                },
                                "namespace": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "info": {
                            "type": "array",
                            "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "project": {
                            "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                            "type": "string"
                          },
                          "revisionHistoryLimit": {
                            "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                            "type": "string",
                            "format": "int64"
                          },
                          "source": {
                            "type": "object",
                            "title": "ApplicationSource contains all required information about the source of an application",
                            "properties": {
                              "chart": {
                                "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                "type": "string"
                              },
                              "directory": {
                                "type": "object",
                                "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                "properties": {
                                  "exclude": {
                                    "type": "string",
                                    "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                  },
                                  "include": {
                                    "type": "string",
                                    "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                  },
                                  "jsonnet": {
                                    "type": "object",
                                    "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                    "properties": {
                                      "extVars": {
                                        "type": "array",
                                        "title": "ExtVars is a list of Jsonnet External Variables",
                                        "items": {
                                          "type": "object",
                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                          "properties": {
                                            "code": {
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "libs": {
                                        "type": "array",
                                        "title": "Additional library search dirs",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "tlas": {
                                        "type": "array",
                                        "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                        "items": {
                                          "type": "object",
                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                          "properties": {
                                            "code": {
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "recurse": {
                                    "type": "boolean",
                                    "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "helm": {
                                "type": "object",
                                "title": "ApplicationSourceHelm holds helm specific options",
                                "properties": {
                                  "fileParameters": {
                                    "type": "array",
                                    "title": "FileParameters are file parameters to the helm template",
                                    "items": {
                                      "type": "object",
                                      "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the Helm parameter"
                                        },
                                        "path": {
                                          "type": "string",
                                          "title": "Path is the path to the file containing the values for the Helm parameter"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "ignoreMissingValueFiles": {
                                    "type": "boolean",
                                    "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                  },
                                  "parameters": {
                                    "type": "array",
                                    "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                    "items": {
                                      "type": "object",
                                      "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                      "properties": {
                                        "forceString": {
                                          "type": "boolean",
                                          "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                        },
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the Helm parameter"
                                        },
                                        "value": {
                                          "type": "string",
                                          "title": "Value is the value for the Helm parameter"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "passCredentials": {
                                    "type": "boolean",
                                    "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                  },
                                  "releaseName": {
                                    "type": "string",
                                    "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                  },
                                  "skipCrds": {
                                    "type": "boolean",
                                    "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                  },
                                  "valueFiles": {
                                    "type": "array",
                                    "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "values": {
                                    "type": "string",
                                    "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                                  },
                                  "version": {
                                    "type": "string",
                                    "title": "Version is the Helm version to use for templating (\"3\")"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "kustomize": {
                                "type": "object",
                                "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                "properties": {
                                  "commonAnnotations": {
                                    "type": "object",
                                    "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "commonAnnotationsEnvsubst": {
                                    "type": "boolean",
                                    "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                  },
                                  "commonLabels": {
                                    "type": "object",
                                    "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "forceCommonAnnotations": {
                                    "type": "boolean",
                                    "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                  },
                                  "forceCommonLabels": {
                                    "type": "boolean",
                                    "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                  },
                                  "images": {
                                    "type": "array",
                                    "title": "Images is a list of Kustomize image override specifications",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "namePrefix": {
                                    "type": "string",
                                    "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                  },
                                  "nameSuffix": {
                                    "type": "string",
                                    "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                  },
                                  "namespace": {
                                    "type": "string",
                                    "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                  },
                                  "replicas": {
                                    "type": "array",
                                    "title": "Replicas is a list of Kustomize Replicas override specifications",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "count": {
                                          "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                          "type": "object",
                                          "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                          "properties": {
                                            "intVal": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "strVal": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "format": "int64"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "name": {
                                          "type": "string",
                                          "title": "Name of Deployment or StatefulSet"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "version": {
                                    "type": "string",
                                    "title": "Version controls which version of Kustomize to use for rendering manifests"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "path": {
                                "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                "type": "string"
                              },
                              "plugin": {
                                "type": "object",
                                "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                "properties": {
                                  "env": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "title": "EnvEntry represents an entry in the application's environment",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the variable, usually expressed in uppercase"
                                        },
                                        "value": {
                                          "type": "string",
                                          "title": "Value is the value of the variable"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "parameters": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "array": {
                                          "description": "Array is the value of an array type parameter.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "map": {
                                          "description": "Map is the value of a map type parameter.",
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "name": {
                                          "description": "Name is the name identifying a parameter.",
                                          "type": "string"
                                        },
                                        "string": {
                                          "description": "String_ is the value of a string type parameter.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "ref": {
                                "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                "type": "string"
                              },
                              "repoURL": {
                                "type": "string",
                                "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                              },
                              "targetRevision": {
                                "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "sources": {
                            "type": "array",
                            "title": "Sources is a reference to the location of the application's manifests or chart",
                            "items": {
                              "type": "object",
                              "title": "ApplicationSource contains all required information about the source of an application",
                              "properties": {
                                "chart": {
                                  "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                  "type": "string"
                                },
                                "directory": {
                                  "type": "object",
                                  "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                  "properties": {
                                    "exclude": {
                                      "type": "string",
                                      "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                    },
                                    "include": {
                                      "type": "string",
                                      "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                    },
                                    "jsonnet": {
                                      "type": "object",
                                      "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                      "properties": {
                                        "extVars": {
                                          "type": "array",
                                          "title": "ExtVars is a list of Jsonnet External Variables",
                                          "items": {
                                            "type": "object",
                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                            "properties": {
                                              "code": {
                                                "type": "boolean"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "libs": {
                                          "type": "array",
                                          "title": "Additional library search dirs",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "tlas": {
                                          "type": "array",
                                          "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                          "items": {
                                            "type": "object",
                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                            "properties": {
                                              "code": {
                                                "type": "boolean"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "recurse": {
                                      "type": "boolean",
                                      "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "helm": {
                                  "type": "object",
                                  "title": "ApplicationSourceHelm holds helm specific options",
                                  "properties": {
                                    "fileParameters": {
                                      "type": "array",
                                      "title": "FileParameters are file parameters to the helm template",
                                      "items": {
                                        "type": "object",
                                        "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "title": "Name is the name of the Helm parameter"
                                          },
                                          "path": {
                                            "type": "string",
                                            "title": "Path is the path to the file containing the values for the Helm parameter"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "ignoreMissingValueFiles": {
                                      "type": "boolean",
                                      "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                    },
                                    "parameters": {
                                      "type": "array",
                                      "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                      "items": {
                                        "type": "object",
                                        "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                        "properties": {
                                          "forceString": {
                                            "type": "boolean",
                                            "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                          },
                                          "name": {
                                            "type": "string",
                                            "title": "Name is the name of the Helm parameter"
                                          },
                                          "value": {
                                            "type": "string",
                                            "title": "Value is the value for the Helm parameter"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "passCredentials": {
                                      "type": "boolean",
                                      "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                    },
                                    "releaseName": {
                                      "type": "string",
                                      "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                    },
                                    "skipCrds": {
                                      "type": "boolean",
                                      "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                    },
                                    "valueFiles": {
                                      "type": "array",
                                      "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "values": {
                                      "type": "string",
                                      "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                                    },
                                    "version": {
                                      "type": "string",
                                      "title": "Version is the Helm version to use for templating (\"3\")"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "kustomize": {
                                  "type": "object",
                                  "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                  "properties": {
                                    "commonAnnotations": {
                                      "type": "object",
                                      "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "commonAnnotationsEnvsubst": {
                                      "type": "boolean",
                                      "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                    },
                                    "commonLabels": {
                                      "type": "object",
                                      "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "forceCommonAnnotations": {
                                      "type": "boolean",
                                      "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                    },
                                    "forceCommonLabels": {
                                      "type": "boolean",
                                      "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                    },
                                    "images": {
                                      "type": "array",
                                      "title": "Images is a list of Kustomize image override specifications",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "namePrefix": {
                                      "type": "string",
                                      "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                    },
                                    "nameSuffix": {
                                      "type": "string",
                                      "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                    },
                                    "replicas": {
                                      "type": "array",
                                      "title": "Replicas is a list of Kustomize Replicas override specifications",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "count": {
                                            "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                            "type": "object",
                                            "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                            "properties": {
                                              "intVal": {
                                                "type": "integer",
                                                "format": "int32"
                                              },
                                              "strVal": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "format": "int64"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "name": {
                                            "type": "string",
                                            "title": "Name of Deployment or StatefulSet"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "version": {
                                      "type": "string",
                                      "title": "Version controls which version of Kustomize to use for rendering manifests"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "path": {
                                  "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                  "type": "string"
                                },
                                "plugin": {
                                  "type": "object",
                                  "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                  "properties": {
                                    "env": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "title": "EnvEntry represents an entry in the application's environment",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "title": "Name is the name of the variable, usually expressed in uppercase"
                                          },
                                          "value": {
                                            "type": "string",
                                            "title": "Value is the value of the variable"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "parameters": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "array": {
                                            "description": "Array is the value of an array type parameter.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "map": {
                                            "description": "Map is the value of a map type parameter.",
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "name": {
                                            "description": "Name is the name identifying a parameter.",
                                            "type": "string"
                                          },
                                          "string": {
                                            "description": "String_ is the value of a string type parameter.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "ref": {
                                  "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                  "type": "string"
                                },
                                "repoURL": {
                                  "type": "string",
                                  "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                },
                                "targetRevision": {
                                  "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "syncPolicy": {
                            "type": "object",
                            "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                            "properties": {
                              "automated": {
                                "type": "object",
                                "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                                "properties": {
                                  "allowEmpty": {
                                    "type": "boolean",
                                    "title": "AllowEmpty allows apps have zero live resources (default: false)"
                                  },
                                  "prune": {
                                    "type": "boolean",
                                    "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                                  },
                                  "selfHeal": {
                                    "type": "boolean",
                                    "title": "SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "managedNamespaceMetadata": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "labels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "retry": {
                                "type": "object",
                                "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                                "properties": {
                                  "backoff": {
                                    "type": "object",
                                    "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                                    "properties": {
                                      "duration": {
                                        "type": "string",
                                        "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                                      },
                                      "factor": {
                                        "type": "string",
                                        "format": "int64",
                                        "title": "Factor is a factor to multiply the base duration after each failed retry"
                                      },
                                      "maxDuration": {
                                        "type": "string",
                                        "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "limit": {
                                    "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                    "type": "string",
                                    "format": "int64"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "syncOptions": {
                                "type": "array",
                                "title": "Options allow you to specify whole app sync-options",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "values": {
                    "type": "object",
                    "title": "Values contains key/value pairs which are passed directly as parameters to the template",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              },
              "clusters": {
                "description": "ClusterGenerator defines a generator to match against clusters registered with ArgoCD.",
                "type": "object",
                "properties": {
                  "selector": {
                    "type": "object",
                    "title": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.\n+structType=atomic",
                    "properties": {
                      "matchExpressions": {
                        "type": "array",
                        "title": "matchExpressions is a list of label selector requirements. The requirements are ANDed.\n+optional",
                        "items": {
                          "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "title": "key is the label key that the selector applies to.\n+patchMergeKey=key\n+patchStrategy=merge"
                            },
                            "operator": {
                              "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                              "type": "string"
                            },
                            "values": {
                              "type": "array",
                              "title": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.\n+optional",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "matchLabels": {
                        "type": "object",
                        "title": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n+optional",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "template": {
                    "type": "object",
                    "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
                    "properties": {
                      "metadata": {
                        "type": "object",
                        "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
                        "properties": {
                          "annotations": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "finalizers": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "namespace": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "spec": {
                        "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
                        "type": "object",
                        "properties": {
                          "destination": {
                            "type": "object",
                            "title": "ApplicationDestination holds information about the application's destination",
                            "properties": {
                              "name": {
                                "type": "string",
                                "title": "Name is an alternate way of specifying the target cluster by its symbolic name"
                              },
                              "namespace": {
                                "type": "string",
                                "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                              },
                              "server": {
                                "type": "string",
                                "title": "Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API"
                              }
                            },
                            "additionalProperties": false
                          },
                          "ignoreDifferences": {
                            "type": "array",
                            "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                            "items": {
                              "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                              "type": "object",
                              "properties": {
                                "group": {
                                  "type": "string"
                                },
                                "jqPathExpressions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "jsonPointers": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "kind": {
                                  "type": "string"
                                },
                                "managedFieldsManagers": {
                                  "type": "array",
                                  "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "name": {
                                  "type": "string"
                                },
                                "namespace": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "info": {
                            "type": "array",
                            "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "project": {
                            "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                            "type": "string"
                          },
                          "revisionHistoryLimit": {
                            "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                            "type": "string",
                            "format": "int64"
                          },
                          "source": {
                            "type": "object",
                            "title": "ApplicationSource contains all required information about the source of an application",
                            "properties": {
                              "chart": {
                                "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                "type": "string"
                              },
                              "directory": {
                                "type": "object",
                                "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                "properties": {
                                  "exclude": {
                                    "type": "string",
                                    "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                  },
                                  "include": {
                                    "type": "string",
                                    "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                  },
                                  "jsonnet": {
                                    "type": "object",
                                    "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                    "properties": {
                                      "extVars": {
                                        "type": "array",
                                        "title": "ExtVars is a list of Jsonnet External Variables",
                                        "items": {
                                          "type": "object",
                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                          "properties": {
                                            "code": {
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "libs": {
                                        "type": "array",
                                        "title": "Additional library search dirs",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "tlas": {
                                        "type": "array",
                                        "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                        "items": {
                                          "type": "object",
                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                          "properties": {
                                            "code": {
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "recurse": {
                                    "type": "boolean",
                                    "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "helm": {
                                "type": "object",
                                "title": "ApplicationSourceHelm holds helm specific options",
                                "properties": {
                                  "fileParameters": {
                                    "type": "array",
                                    "title": "FileParameters are file parameters to the helm template",
                                    "items": {
                                      "type": "object",
                                      "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the Helm parameter"
                                        },
                                        "path": {
                                          "type": "string",
                                          "title": "Path is the path to the file containing the values for the Helm parameter"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "ignoreMissingValueFiles": {
                                    "type": "boolean",
                                    "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                  },
                                  "parameters": {
                                    "type": "array",
                                    "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                    "items": {
                                      "type": "object",
                                      "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                      "properties": {
                                        "forceString": {
                                          "type": "boolean",
                                          "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                        },
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the Helm parameter"
                                        },
                                        "value": {
                                          "type": "string",
                                          "title": "Value is the value for the Helm parameter"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "passCredentials": {
                                    "type": "boolean",
                                    "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                  },
                                  "releaseName": {
                                    "type": "string",
                                    "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                  },
                                  "skipCrds": {
                                    "type": "boolean",
                                    "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                  },
                                  "valueFiles": {
                                    "type": "array",
                                    "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "values": {
                                    "type": "string",
                                    "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                                  },
                                  "version": {
                                    "type": "string",
                                    "title": "Version is the Helm version to use for templating (\"3\")"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "kustomize": {
                                "type": "object",
                                "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                "properties": {
                                  "commonAnnotations": {
                                    "type": "object",
                                    "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "commonAnnotationsEnvsubst": {
                                    "type": "boolean",
                                    "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                  },
                                  "commonLabels": {
                                    "type": "object",
                                    "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "forceCommonAnnotations": {
                                    "type": "boolean",
                                    "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                  },
                                  "forceCommonLabels": {
                                    "type": "boolean",
                                    "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                  },
                                  "images": {
                                    "type": "array",
                                    "title": "Images is a list of Kustomize image override specifications",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "namePrefix": {
                                    "type": "string",
                                    "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                  },
                                  "nameSuffix": {
                                    "type": "string",
                                    "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                  },
                                  "namespace": {
                                    "type": "string",
                                    "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                  },
                                  "replicas": {
                                    "type": "array",
                                    "title": "Replicas is a list of Kustomize Replicas override specifications",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "count": {
                                          "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                          "type": "object",
                                          "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                          "properties": {
                                            "intVal": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "strVal": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "format": "int64"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "name": {
                                          "type": "string",
                                          "title": "Name of Deployment or StatefulSet"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "version": {
                                    "type": "string",
                                    "title": "Version controls which version of Kustomize to use for rendering manifests"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "path": {
                                "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                "type": "string"
                              },
                              "plugin": {
                                "type": "object",
                                "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                "properties": {
                                  "env": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "title": "EnvEntry represents an entry in the application's environment",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the variable, usually expressed in uppercase"
                                        },
                                        "value": {
                                          "type": "string",
                                          "title": "Value is the value of the variable"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "parameters": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "array": {
                                          "description": "Array is the value of an array type parameter.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "map": {
                                          "description": "Map is the value of a map type parameter.",
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "name": {
                                          "description": "Name is the name identifying a parameter.",
                                          "type": "string"
                                        },
                                        "string": {
                                          "description": "String_ is the value of a string type parameter.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "ref": {
                                "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                "type": "string"
                              },
                              "repoURL": {
                                "type": "string",
                                "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                              },
                              "targetRevision": {
                                "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "sources": {
                            "type": "array",
                            "title": "Sources is a reference to the location of the application's manifests or chart",
                            "items": {
                              "type": "object",
                              "title": "ApplicationSource contains all required information about the source of an application",
                              "properties": {
                                "chart": {
                                  "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                  "type": "string"
                                },
                                "directory": {
                                  "type": "object",
                                  "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                  "properties": {
                                    "exclude": {
                                      "type": "string",
                                      "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                    },
                                    "include": {
                                      "type": "string",
                                      "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                    },
                                    "jsonnet": {
                                      "type": "object",
                                      "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                      "properties": {
                                        "extVars": {
                                          "type": "array",
                                          "title": "ExtVars is a list of Jsonnet External Variables",
                                          "items": {
                                            "type": "object",
                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                            "properties": {
                                              "code": {
                                                "type": "boolean"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "libs": {
                                          "type": "array",
                                          "title": "Additional library search dirs",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "tlas": {
                                          "type": "array",
                                          "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                          "items": {
                                            "type": "object",
                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                            "properties": {
                                              "code": {
                                                "type": "boolean"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "recurse": {
                                      "type": "boolean",
                                      "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "helm": {
                                  "type": "object",
                                  "title": "ApplicationSourceHelm holds helm specific options",
                                  "properties": {
                                    "fileParameters": {
                                      "type": "array",
                                      "title": "FileParameters are file parameters to the helm template",
                                      "items": {
                                        "type": "object",
                                        "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "title": "Name is the name of the Helm parameter"
                                          },
                                          "path": {
                                            "type": "string",
                                            "title": "Path is the path to the file containing the values for the Helm parameter"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "ignoreMissingValueFiles": {
                                      "type": "boolean",
                                      "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                    },
                                    "parameters": {
                                      "type": "array",
                                      "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                      "items": {
                                        "type": "object",
                                        "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                        "properties": {
                                          "forceString": {
                                            "type": "boolean",
                                            "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                          },
                                          "name": {
                                            "type": "string",
                                            "title": "Name is the name of the Helm parameter"
                                          },
                                          "value": {
                                            "type": "string",
                                            "title": "Value is the value for the Helm parameter"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "passCredentials": {
                                      "type": "boolean",
                                      "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                    },
                                    "releaseName": {
                                      "type": "string",
                                      "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                    },
                                    "skipCrds": {
                                      "type": "boolean",
                                      "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                    },
                                    "valueFiles": {
                                      "type": "array",
                                      "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "values": {
                                      "type": "string",
                                      "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                                    },
                                    "version": {
                                      "type": "string",
                                      "title": "Version is the Helm version to use for templating (\"3\")"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "kustomize": {
                                  "type": "object",
                                  "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                  "properties": {
                                    "commonAnnotations": {
                                      "type": "object",
                                      "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "commonAnnotationsEnvsubst": {
                                      "type": "boolean",
                                      "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                    },
                                    "commonLabels": {
                                      "type": "object",
                                      "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "forceCommonAnnotations": {
                                      "type": "boolean",
                                      "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                    },
                                    "forceCommonLabels": {
                                      "type": "boolean",
                                      "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                    },
                                    "images": {
                                      "type": "array",
                                      "title": "Images is a list of Kustomize image override specifications",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "namePrefix": {
                                      "type": "string",
                                      "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                    },
                                    "nameSuffix": {
                                      "type": "string",
                                      "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                    },
                                    "replicas": {
                                      "type": "array",
                                      "title": "Replicas is a list of Kustomize Replicas override specifications",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "count": {
                                            "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                            "type": "object",
                                            "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                            "properties": {
                                              "intVal": {
                                                "type": "integer",
                                                "format": "int32"
                                              },
                                              "strVal": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "format": "int64"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "name": {
                                            "type": "string",
                                            "title": "Name of Deployment or StatefulSet"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "version": {
                                      "type": "string",
                                      "title": "Version controls which version of Kustomize to use for rendering manifests"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "path": {
                                  "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                  "type": "string"
                                },
                                "plugin": {
                                  "type": "object",
                                  "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                  "properties": {
                                    "env": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "title": "EnvEntry represents an entry in the application's environment",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "title": "Name is the name of the variable, usually expressed in uppercase"
                                          },
                                          "value": {
                                            "type": "string",
                                            "title": "Value is the value of the variable"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "parameters": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "array": {
                                            "description": "Array is the value of an array type parameter.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "map": {
                                            "description": "Map is the value of a map type parameter.",
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "name": {
                                            "description": "Name is the name identifying a parameter.",
                                            "type": "string"
                                          },
                                          "string": {
                                            "description": "String_ is the value of a string type parameter.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "ref": {
                                  "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                  "type": "string"
                                },
                                "repoURL": {
                                  "type": "string",
                                  "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                },
                                "targetRevision": {
                                  "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "syncPolicy": {
                            "type": "object",
                            "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                            "properties": {
                              "automated": {
                                "type": "object",
                                "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                                "properties": {
                                  "allowEmpty": {
                                    "type": "boolean",
                                    "title": "AllowEmpty allows apps have zero live resources (default: false)"
                                  },
                                  "prune": {
                                    "type": "boolean",
                                    "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                                  },
                                  "selfHeal": {
                                    "type": "boolean",
                                    "title": "SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "managedNamespaceMetadata": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "labels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "retry": {
                                "type": "object",
                                "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                                "properties": {
                                  "backoff": {
                                    "type": "object",
                                    "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                                    "properties": {
                                      "duration": {
                                        "type": "string",
                                        "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                                      },
                                      "factor": {
                                        "type": "string",
                                        "format": "int64",
                                        "title": "Factor is a factor to multiply the base duration after each failed retry"
                                      },
                                      "maxDuration": {
                                        "type": "string",
                                        "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "limit": {
                                    "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                    "type": "string",
                                    "format": "int64"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "syncOptions": {
                                "type": "array",
                                "title": "Options allow you to specify whole app sync-options",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "values": {
                    "type": "object",
                    "title": "Values contains key/value pairs which are passed directly as parameters to the template",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              },
              "git": {
                "type": "object",
                "properties": {
                  "directories": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "exclude": {
                          "type": "boolean"
                        },
                        "path": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "pathParamPrefix": {
                    "type": "string"
                  },
                  "repoURL": {
                    "type": "string"
                  },
                  "requeueAfterSeconds": {
                    "type": "string",
                    "format": "int64"
                  },
                  "revision": {
                    "type": "string"
                  },
                  "template": {
                    "type": "object",
                    "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
                    "properties": {
                      "metadata": {
                        "type": "object",
                        "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
                        "properties": {
                          "annotations": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "finalizers": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "namespace": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "spec": {
                        "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
                        "type": "object",
                        "properties": {
                          "destination": {
                            "type": "object",
                            "title": "ApplicationDestination holds information about the application's destination",
                            "properties": {
                              "name": {
                                "type": "string",
                                "title": "Name is an alternate way of specifying the target cluster by its symbolic name"
                              },
                              "namespace": {
                                "type": "string",
                                "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                              },
                              "server": {
                                "type": "string",
                                "title": "Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API"
                              }
                            },
                            "additionalProperties": false
                          },
                          "ignoreDifferences": {
                            "type": "array",
                            "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                            "items": {
                              "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                              "type": "object",
                              "properties": {
                                "group": {
                                  "type": "string"
                                },
                                "jqPathExpressions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "jsonPointers": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "kind": {
                                  "type": "string"
                                },
                                "managedFieldsManagers": {
                                  "type": "array",
                                  "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "name": {
                                  "type": "string"
                                },
                                "namespace": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "info": {
                            "type": "array",
                            "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "project": {
                            "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                            "type": "string"
                          },
                          "revisionHistoryLimit": {
                            "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                            "type": "string",
                            "format": "int64"
                          },
                          "source": {
                            "type": "object",
                            "title": "ApplicationSource contains all required information about the source of an application",
                            "properties": {
                              "chart": {
                                "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                "type": "string"
                              },
                              "directory": {
                                "type": "object",
                                "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                "properties": {
                                  "exclude": {
                                    "type": "string",
                                    "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                  },
                                  "include": {
                                    "type": "string",
                                    "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                  },
                                  "jsonnet": {
                                    "type": "object",
                                    "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                    "properties": {
                                      "extVars": {
                                        "type": "array",
                                        "title": "ExtVars is a list of Jsonnet External Variables",
                                        "items": {
                                          "type": "object",
                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                          "properties": {
                                            "code": {
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "libs": {
                                        "type": "array",
                                        "title": "Additional library search dirs",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "tlas": {
                                        "type": "array",
                                        "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                        "items": {
                                          "type": "object",
                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                          "properties": {
                                            "code": {
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "recurse": {
                                    "type": "boolean",
                                    "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "helm": {
                                "type": "object",
                                "title": "ApplicationSourceHelm holds helm specific options",
                                "properties": {
                                  "fileParameters": {
                                    "type": "array",
                                    "title": "FileParameters are file parameters to the helm template",
                                    "items": {
                                      "type": "object",
                                      "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the Helm parameter"
                                        },
                                        "path": {
                                          "type": "string",
                                          "title": "Path is the path to the file containing the values for the Helm parameter"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "ignoreMissingValueFiles": {
                                    "type": "boolean",
                                    "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                  },
                                  "parameters": {
                                    "type": "array",
                                    "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                    "items": {
                                      "type": "object",
                                      "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                      "properties": {
                                        "forceString": {
                                          "type": "boolean",
                                          "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                        },
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the Helm parameter"
                                        },
                                        "value": {
                                          "type": "string",
                                          "title": "Value is the value for the Helm parameter"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "passCredentials": {
                                    "type": "boolean",
                                    "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                  },
                                  "releaseName": {
                                    "type": "string",
                                    "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                  },
                                  "skipCrds": {
                                    "type": "boolean",
                                    "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                  },
                                  "valueFiles": {
                                    "type": "array",
                                    "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "values": {
                                    "type": "string",
                                    "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                                  },
                                  "version": {
                                    "type": "string",
                                    "title": "Version is the Helm version to use for templating (\"3\")"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "kustomize": {
                                "type": "object",
                                "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                "properties": {
                                  "commonAnnotations": {
                                    "type": "object",
                                    "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "commonAnnotationsEnvsubst": {
                                    "type": "boolean",
                                    "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                  },
                                  "commonLabels": {
                                    "type": "object",
                                    "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "forceCommonAnnotations": {
                                    "type": "boolean",
                                    "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                  },
                                  "forceCommonLabels": {
                                    "type": "boolean",
                                    "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                  },
                                  "images": {
                                    "type": "array",
                                    "title": "Images is a list of Kustomize image override specifications",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "namePrefix": {
                                    "type": "string",
                                    "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                  },
                                  "nameSuffix": {
                                    "type": "string",
                                    "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                  },
                                  "namespace": {
                                    "type": "string",
                                    "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                  },
                                  "replicas": {
                                    "type": "array",
                                    "title": "Replicas is a list of Kustomize Replicas override specifications",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "count": {
                                          "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                          "type": "object",
                                          "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                          "properties": {
                                            "intVal": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "strVal": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "format": "int64"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "name": {
                                          "type": "string",
                                          "title": "Name of Deployment or StatefulSet"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "version": {
                                    "type": "string",
                                    "title": "Version controls which version of Kustomize to use for rendering manifests"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "path": {
                                "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                "type": "string"
                              },
                              "plugin": {
                                "type": "object",
                                "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                "properties": {
                                  "env": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "title": "EnvEntry represents an entry in the application's environment",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the variable, usually expressed in uppercase"
                                        },
                                        "value": {
                                          "type": "string",
                                          "title": "Value is the value of the variable"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "parameters": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "array": {
                                          "description": "Array is the value of an array type parameter.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "map": {
                                          "description": "Map is the value of a map type parameter.",
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "name": {
                                          "description": "Name is the name identifying a parameter.",
                                          "type": "string"
                                        },
                                        "string": {
                                          "description": "String_ is the value of a string type parameter.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "ref": {
                                "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                "type": "string"
                              },
                              "repoURL": {
                                "type": "string",
                                "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                              },
                              "targetRevision": {
                                "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "sources": {
                            "type": "array",
                            "title": "Sources is a reference to the location of the application's manifests or chart",
                            "items": {
                              "type": "object",
                              "title": "ApplicationSource contains all required information about the source of an application",
                              "properties": {
                                "chart": {
                                  "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                  "type": "string"
                                },
                                "directory": {
                                  "type": "object",
                                  "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                  "properties": {
                                    "exclude": {
                                      "type": "string",
                                      "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                    },
                                    "include": {
                                      "type": "string",
                                      "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                    },
                                    "jsonnet": {
                                      "type": "object",
                                      "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                      "properties": {
                                        "extVars": {
                                          "type": "array",
                                          "title": "ExtVars is a list of Jsonnet External Variables",
                                          "items": {
                                            "type": "object",
                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                            "properties": {
                                              "code": {
                                                "type": "boolean"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "libs": {
                                          "type": "array",
                                          "title": "Additional library search dirs",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "tlas": {
                                          "type": "array",
                                          "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                          "items": {
                                            "type": "object",
                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                            "properties": {
                                              "code": {
                                                "type": "boolean"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "recurse": {
                                      "type": "boolean",
                                      "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "helm": {
                                  "type": "object",
                                  "title": "ApplicationSourceHelm holds helm specific options",
                                  "properties": {
                                    "fileParameters": {
                                      "type": "array",
                                      "title": "FileParameters are file parameters to the helm template",
                                      "items": {
                                        "type": "object",
                                        "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "title": "Name is the name of the Helm parameter"
                                          },
                                          "path": {
                                            "type": "string",
                                            "title": "Path is the path to the file containing the values for the Helm parameter"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "ignoreMissingValueFiles": {
                                      "type": "boolean",
                                      "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                    },
                                    "parameters": {
                                      "type": "array",
                                      "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                      "items": {
                                        "type": "object",
                                        "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                        "properties": {
                                          "forceString": {
                                            "type": "boolean",
                                            "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                          },
                                          "name": {
                                            "type": "string",
                                            "title": "Name is the name of the Helm parameter"
                                          },
                                          "value": {
                                            "type": "string",
                                            "title": "Value is the value for the Helm parameter"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "passCredentials": {
                                      "type": "boolean",
                                      "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                    },
                                    "releaseName": {
                                      "type": "string",
                                      "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                    },
                                    "skipCrds": {
                                      "type": "boolean",
                                      "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                    },
                                    "valueFiles": {
                                      "type": "array",
                                      "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "values": {
                                      "type": "string",
                                      "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                                    },
                                    "version": {
                                      "type": "string",
                                      "title": "Version is the Helm version to use for templating (\"3\")"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "kustomize": {
                                  "type": "object",
                                  "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                  "properties": {
                                    "commonAnnotations": {
                                      "type": "object",
                                      "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "commonAnnotationsEnvsubst": {
                                      "type": "boolean",
                                      "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                    },
                                    "commonLabels": {
                                      "type": "object",
                                      "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "forceCommonAnnotations": {
                                      "type": "boolean",
                                      "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                    },
                                    "forceCommonLabels": {
                                      "type": "boolean",
                                      "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                    },
                                    "images": {
                                      "type": "array",
                                      "title": "Images is a list of Kustomize image override specifications",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "namePrefix": {
                                      "type": "string",
                                      "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                    },
                                    "nameSuffix": {
                                      "type": "string",
                                      "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                    },
                                    "replicas": {
                                      "type": "array",
                                      "title": "Replicas is a list of Kustomize Replicas override specifications",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "count": {
                                            "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                            "type": "object",
                                            "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                            "properties": {
                                              "intVal": {
                                                "type": "integer",
                                                "format": "int32"
                                              },
                                              "strVal": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "format": "int64"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "name": {
                                            "type": "string",
                                            "title": "Name of Deployment or StatefulSet"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "version": {
                                      "type": "string",
                                      "title": "Version controls which version of Kustomize to use for rendering manifests"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "path": {
                                  "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                  "type": "string"
                                },
                                "plugin": {
                                  "type": "object",
                                  "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                  "properties": {
                                    "env": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "title": "EnvEntry represents an entry in the application's environment",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "title": "Name is the name of the variable, usually expressed in uppercase"
                                          },
                                          "value": {
                                            "type": "string",
                                            "title": "Value is the value of the variable"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "parameters": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "array": {
                                            "description": "Array is the value of an array type parameter.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "map": {
                                            "description": "Map is the value of a map type parameter.",
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "name": {
                                            "description": "Name is the name identifying a parameter.",
                                            "type": "string"
                                          },
                                          "string": {
                                            "description": "String_ is the value of a string type parameter.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "ref": {
                                  "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                  "type": "string"
                                },
                                "repoURL": {
                                  "type": "string",
                                  "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                },
                                "targetRevision": {
                                  "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "syncPolicy": {
                            "type": "object",
                            "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                            "properties": {
                              "automated": {
                                "type": "object",
                                "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                                "properties": {
                                  "allowEmpty": {
                                    "type": "boolean",
                                    "title": "AllowEmpty allows apps have zero live resources (default: false)"
                                  },
                                  "prune": {
                                    "type": "boolean",
                                    "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                                  },
                                  "selfHeal": {
                                    "type": "boolean",
                                    "title": "SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "managedNamespaceMetadata": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "labels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "retry": {
                                "type": "object",
                                "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                                "properties": {
                                  "backoff": {
                                    "type": "object",
                                    "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                                    "properties": {
                                      "duration": {
                                        "type": "string",
                                        "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                                      },
                                      "factor": {
                                        "type": "string",
                                        "format": "int64",
                                        "title": "Factor is a factor to multiply the base duration after each failed retry"
                                      },
                                      "maxDuration": {
                                        "type": "string",
                                        "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "limit": {
                                    "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                    "type": "string",
                                    "format": "int64"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "syncOptions": {
                                "type": "array",
                                "title": "Options allow you to specify whole app sync-options",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "list": {
                "type": "object",
                "title": "ListGenerator include items info",
                "properties": {
                  "elements": {
                    "type": "array",
                    "items": {
                      "description": "JSON represents any valid JSON value.\nThese types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.",
                      "type": "object",
                      "properties": {
                        "raw": {
                          "type": "string",
                          "format": "byte"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "elementsYaml": {
                    "type": "string"
                  },
                  "template": {
                    "type": "object",
                    "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
                    "properties": {
                      "metadata": {
                        "type": "object",
                        "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
                        "properties": {
                          "annotations": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "finalizers": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "namespace": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "spec": {
                        "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
                        "type": "object",
                        "properties": {
                          "destination": {
                            "type": "object",
                            "title": "ApplicationDestination holds information about the application's destination",
                            "properties": {
                              "name": {
                                "type": "string",
                                "title": "Name is an alternate way of specifying the target cluster by its symbolic name"
                              },
                              "namespace": {
                                "type": "string",
                                "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                              },
                              "server": {
                                "type": "string",
                                "title": "Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API"
                              }
                            },
                            "additionalProperties": false
                          },
                          "ignoreDifferences": {
                            "type": "array",
                            "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                            "items": {
                              "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                              "type": "object",
                              "properties": {
                                "group": {
                                  "type": "string"
                                },
                                "jqPathExpressions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "jsonPointers": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "kind": {
                                  "type": "string"
                                },
                                "managedFieldsManagers": {
                                  "type": "array",
                                  "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "name": {
                                  "type": "string"
                                },
                                "namespace": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "info": {
                            "type": "array",
                            "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "project": {
                            "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                            "type": "string"
                          },
                          "revisionHistoryLimit": {
                            "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                            "type": "string",
                            "format": "int64"
                          },
                          "source": {
                            "type": "object",
                            "title": "ApplicationSource contains all required information about the source of an application",
                            "properties": {
                              "chart": {
                                "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                "type": "string"
                              },
                              "directory": {
                                "type": "object",
                                "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                "properties": {
                                  "exclude": {
                                    "type": "string",
                                    "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                  },
                                  "include": {
                                    "type": "string",
                                    "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                  },
                                  "jsonnet": {
                                    "type": "object",
                                    "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                    "properties": {
                                      "extVars": {
                                        "type": "array",
                                        "title": "ExtVars is a list of Jsonnet External Variables",
                                        "items": {
                                          "type": "object",
                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                          "properties": {
                                            "code": {
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "libs": {
                                        "type": "array",
                                        "title": "Additional library search dirs",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "tlas": {
                                        "type": "array",
                                        "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                        "items": {
                                          "type": "object",
                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                          "properties": {
                                            "code": {
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "recurse": {
                                    "type": "boolean",
                                    "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "helm": {
                                "type": "object",
                                "title": "ApplicationSourceHelm holds helm specific options",
                                "properties": {
                                  "fileParameters": {
                                    "type": "array",
                                    "title": "FileParameters are file parameters to the helm template",
                                    "items": {
                                      "type": "object",
                                      "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the Helm parameter"
                                        },
                                        "path": {
                                          "type": "string",
                                          "title": "Path is the path to the file containing the values for the Helm parameter"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "ignoreMissingValueFiles": {
                                    "type": "boolean",
                                    "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                  },
                                  "parameters": {
                                    "type": "array",
                                    "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                    "items": {
                                      "type": "object",
                                      "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                      "properties": {
                                        "forceString": {
                                          "type": "boolean",
                                          "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                        },
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the Helm parameter"
                                        },
                                        "value": {
                                          "type": "string",
                                          "title": "Value is the value for the Helm parameter"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "passCredentials": {
                                    "type": "boolean",
                                    "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                  },
                                  "releaseName": {
                                    "type": "string",
                                    "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                  },
                                  "skipCrds": {
                                    "type": "boolean",
                                    "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                  },
                                  "valueFiles": {
                                    "type": "array",
                                    "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "values": {
                                    "type": "string",
                                    "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                                  },
                                  "version": {
                                    "type": "string",
                                    "title": "Version is the Helm version to use for templating (\"3\")"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "kustomize": {
                                "type": "object",
                                "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                "properties": {
                                  "commonAnnotations": {
                                    "type": "object",
                                    "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "commonAnnotationsEnvsubst": {
                                    "type": "boolean",
                                    "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                  },
                                  "commonLabels": {
                                    "type": "object",
                                    "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "forceCommonAnnotations": {
                                    "type": "boolean",
                                    "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                  },
                                  "forceCommonLabels": {
                                    "type": "boolean",
                                    "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                  },
                                  "images": {
                                    "type": "array",
                                    "title": "Images is a list of Kustomize image override specifications",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "namePrefix": {
                                    "type": "string",
                                    "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                  },
                                  "nameSuffix": {
                                    "type": "string",
                                    "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                  },
                                  "namespace": {
                                    "type": "string",
                                    "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                  },
                                  "replicas": {
                                    "type": "array",
                                    "title": "Replicas is a list of Kustomize Replicas override specifications",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "count": {
                                          "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                          "type": "object",
                                          "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                          "properties": {
                                            "intVal": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "strVal": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "format": "int64"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "name": {
                                          "type": "string",
                                          "title": "Name of Deployment or StatefulSet"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "version": {
                                    "type": "string",
                                    "title": "Version controls which version of Kustomize to use for rendering manifests"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "path": {
                                "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                "type": "string"
                              },
                              "plugin": {
                                "type": "object",
                                "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                "properties": {
                                  "env": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "title": "EnvEntry represents an entry in the application's environment",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the variable, usually expressed in uppercase"
                                        },
                                        "value": {
                                          "type": "string",
                                          "title": "Value is the value of the variable"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "parameters": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "array": {
                                          "description": "Array is the value of an array type parameter.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "map": {
                                          "description": "Map is the value of a map type parameter.",
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "name": {
                                          "description": "Name is the name identifying a parameter.",
                                          "type": "string"
                                        },
                                        "string": {
                                          "description": "String_ is the value of a string type parameter.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "ref": {
                                "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                "type": "string"
                              },
                              "repoURL": {
                                "type": "string",
                                "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                              },
                              "targetRevision": {
                                "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "sources": {
                            "type": "array",
                            "title": "Sources is a reference to the location of the application's manifests or chart",
                            "items": {
                              "type": "object",
                              "title": "ApplicationSource contains all required information about the source of an application",
                              "properties": {
                                "chart": {
                                  "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                  "type": "string"
                                },
                                "directory": {
                                  "type": "object",
                                  "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                  "properties": {
                                    "exclude": {
                                      "type": "string",
                                      "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                    },
                                    "include": {
                                      "type": "string",
                                      "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                    },
                                    "jsonnet": {
                                      "type": "object",
                                      "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                      "properties": {
                                        "extVars": {
                                          "type": "array",
                                          "title": "ExtVars is a list of Jsonnet External Variables",
                                          "items": {
                                            "type": "object",
                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                            "properties": {
                                              "code": {
                                                "type": "boolean"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "libs": {
                                          "type": "array",
                                          "title": "Additional library search dirs",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "tlas": {
                                          "type": "array",
                                          "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                          "items": {
                                            "type": "object",
                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                            "properties": {
                                              "code": {
                                                "type": "boolean"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "recurse": {
                                      "type": "boolean",
                                      "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "helm": {
                                  "type": "object",
                                  "title": "ApplicationSourceHelm holds helm specific options",
                                  "properties": {
                                    "fileParameters": {
                                      "type": "array",
                                      "title": "FileParameters are file parameters to the helm template",
                                      "items": {
                                        "type": "object",
                                        "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "title": "Name is the name of the Helm parameter"
                                          },
                                          "path": {
                                            "type": "string",
                                            "title": "Path is the path to the file containing the values for the Helm parameter"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "ignoreMissingValueFiles": {
                                      "type": "boolean",
                                      "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                    },
                                    "parameters": {
                                      "type": "array",
                                      "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                      "items": {
                                        "type": "object",
                                        "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                        "properties": {
                                          "forceString": {
                                            "type": "boolean",
                                            "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                          },
                                          "name": {
                                            "type": "string",
                                            "title": "Name is the name of the Helm parameter"
                                          },
                                          "value": {
                                            "type": "string",
                                            "title": "Value is the value for the Helm parameter"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "passCredentials": {
                                      "type": "boolean",
                                      "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                    },
                                    "releaseName": {
                                      "type": "string",
                                      "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                    },
                                    "skipCrds": {
                                      "type": "boolean",
                                      "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                    },
                                    "valueFiles": {
                                      "type": "array",
                                      "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "values": {
                                      "type": "string",
                                      "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                                    },
                                    "version": {
                                      "type": "string",
                                      "title": "Version is the Helm version to use for templating (\"3\")"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "kustomize": {
                                  "type": "object",
                                  "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                  "properties": {
                                    "commonAnnotations": {
                                      "type": "object",
                                      "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "commonAnnotationsEnvsubst": {
                                      "type": "boolean",
                                      "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                    },
                                    "commonLabels": {
                                      "type": "object",
                                      "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "forceCommonAnnotations": {
                                      "type": "boolean",
                                      "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                    },
                                    "forceCommonLabels": {
                                      "type": "boolean",
                                      "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                    },
                                    "images": {
                                      "type": "array",
                                      "title": "Images is a list of Kustomize image override specifications",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "namePrefix": {
                                      "type": "string",
                                      "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                    },
                                    "nameSuffix": {
                                      "type": "string",
                                      "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                    },
                                    "replicas": {
                                      "type": "array",
                                      "title": "Replicas is a list of Kustomize Replicas override specifications",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "count": {
                                            "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                            "type": "object",
                                            "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                            "properties": {
                                              "intVal": {
                                                "type": "integer",
                                                "format": "int32"
                                              },
                                              "strVal": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "format": "int64"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "name": {
                                            "type": "string",
                                            "title": "Name of Deployment or StatefulSet"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "version": {
                                      "type": "string",
                                      "title": "Version controls which version of Kustomize to use for rendering manifests"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "path": {
                                  "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                  "type": "string"
                                },
                                "plugin": {
                                  "type": "object",
                                  "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                  "properties": {
                                    "env": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "title": "EnvEntry represents an entry in the application's environment",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "title": "Name is the name of the variable, usually expressed in uppercase"
                                          },
                                          "value": {
                                            "type": "string",
                                            "title": "Value is the value of the variable"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "parameters": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "array": {
                                            "description": "Array is the value of an array type parameter.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "map": {
                                            "description": "Map is the value of a map type parameter.",
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "name": {
                                            "description": "Name is the name identifying a parameter.",
                                            "type": "string"
                                          },
                                          "string": {
                                            "description": "String_ is the value of a string type parameter.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "ref": {
                                  "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                  "type": "string"
                                },
                                "repoURL": {
                                  "type": "string",
                                  "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                },
                                "targetRevision": {
                                  "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "syncPolicy": {
                            "type": "object",
                            "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                            "properties": {
                              "automated": {
                                "type": "object",
                                "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                                "properties": {
                                  "allowEmpty": {
                                    "type": "boolean",
                                    "title": "AllowEmpty allows apps have zero live resources (default: false)"
                                  },
                                  "prune": {
                                    "type": "boolean",
                                    "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                                  },
                                  "selfHeal": {
                                    "type": "boolean",
                                    "title": "SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "managedNamespaceMetadata": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "labels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "retry": {
                                "type": "object",
                                "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                                "properties": {
                                  "backoff": {
                                    "type": "object",
                                    "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                                    "properties": {
                                      "duration": {
                                        "type": "string",
                                        "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                                      },
                                      "factor": {
                                        "type": "string",
                                        "format": "int64",
                                        "title": "Factor is a factor to multiply the base duration after each failed retry"
                                      },
                                      "maxDuration": {
                                        "type": "string",
                                        "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "limit": {
                                    "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                    "type": "string",
                                    "format": "int64"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "syncOptions": {
                                "type": "array",
                                "title": "Options allow you to specify whole app sync-options",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "matrix": {
                "description": "JSON represents any valid JSON value.\nThese types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.",
                "type": "object",
                "properties": {
                  "raw": {
                    "type": "string",
                    "format": "byte"
                  }
                },
                "additionalProperties": false
              },
              "merge": {
                "description": "JSON represents any valid JSON value.\nThese types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.",
                "type": "object",
                "properties": {
                  "raw": {
                    "type": "string",
                    "format": "byte"
                  }
                },
                "additionalProperties": false
              },
              "pullRequest": {
                "description": "PullRequestGenerator defines a generator that scrapes a PullRequest API to find candidate pull requests.",
                "type": "object",
                "properties": {
                  "bitbucketServer": {
                    "description": "PullRequestGenerator defines connection info specific to BitbucketServer.",
                    "type": "object",
                    "properties": {
                      "api": {
                        "description": "The Bitbucket REST API URL to talk to e.g. https://bitbucket.org/rest Required.",
                        "type": "string"
                      },
                      "basicAuth": {
                        "description": "BasicAuthBitbucketServer defines the username/(password or personal access token) for Basic auth.",
                        "type": "object",
                        "properties": {
                          "passwordRef": {
                            "description": "Utility struct for a reference to a secret key.",
                            "type": "object",
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "secretName": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "username": {
                            "type": "string",
                            "title": "Username for Basic auth"
                          }
                        },
                        "additionalProperties": false
                      },
                      "project": {
                        "description": "Project to scan. Required.",
                        "type": "string"
                      },
                      "repo": {
                        "description": "Repo name to scan. Required.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "filters": {
                    "description": "Filters for which pull requests should be considered.",
                    "type": "array",
                    "items": {
                      "description": "PullRequestGeneratorFilter is a single pull request filter.\nIf multiple filter types are set on a single struct, they will be AND'd together. All filters must\npass for a pull request to be included.",
                      "type": "object",
                      "properties": {
                        "branchMatch": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "gitea": {
                    "description": "PullRequestGenerator defines connection info specific to Gitea.",
                    "type": "object",
                    "properties": {
                      "api": {
                        "type": "string",
                        "title": "The Gitea API URL to talk to. Required"
                      },
                      "insecure": {
                        "description": "Allow insecure tls, for self-signed certificates; default: false.",
                        "type": "boolean"
                      },
                      "owner": {
                        "description": "Gitea org or user to scan. Required.",
                        "type": "string"
                      },
                      "repo": {
                        "description": "Gitea repo name to scan. Required.",
                        "type": "string"
                      },
                      "tokenRef": {
                        "description": "Utility struct for a reference to a secret key.",
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "secretName": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "github": {
                    "description": "PullRequestGenerator defines connection info specific to GitHub.",
                    "type": "object",
                    "properties": {
                      "api": {
                        "description": "The GitHub API URL to talk to. If blank, use https://api.github.com/.",
                        "type": "string"
                      },
                      "appSecretName": {
                        "description": "AppSecretName is a reference to a GitHub App repo-creds secret with permission to access pull requests.",
                        "type": "string"
                      },
                      "labels": {
                        "type": "array",
                        "title": "Labels is used to filter the PRs that you want to target",
                        "items": {
                          "type": "string"
                        }
                      },
                      "owner": {
                        "description": "GitHub org or user to scan. Required.",
                        "type": "string"
                      },
                      "repo": {
                        "description": "GitHub repo name to scan. Required.",
                        "type": "string"
                      },
                      "tokenRef": {
                        "description": "Utility struct for a reference to a secret key.",
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "secretName": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "gitlab": {
                    "description": "PullRequestGeneratorGitLab defines connection info specific to GitLab.",
                    "type": "object",
                    "properties": {
                      "api": {
                        "description": "The GitLab API URL to talk to. If blank, uses https://gitlab.com/.",
                        "type": "string"
                      },
                      "labels": {
                        "type": "array",
                        "title": "Labels is used to filter the MRs that you want to target",
                        "items": {
                          "type": "string"
                        }
                      },
                      "project": {
                        "description": "GitLab project to scan. Required.",
                        "type": "string"
                      },
                      "pullRequestState": {
                        "type": "string",
                        "title": "PullRequestState is an additional MRs filter to get only those with a certain state. Default: \"\" (all states)"
                      },
                      "tokenRef": {
                        "description": "Utility struct for a reference to a secret key.",
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "secretName": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "requeueAfterSeconds": {
                    "description": "Standard parameters.",
                    "type": "string",
                    "format": "int64"
                  },
                  "template": {
                    "type": "object",
                    "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
                    "properties": {
                      "metadata": {
                        "type": "object",
                        "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
                        "properties": {
                          "annotations": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "finalizers": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "namespace": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "spec": {
                        "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
                        "type": "object",
                        "properties": {
                          "destination": {
                            "type": "object",
                            "title": "ApplicationDestination holds information about the application's destination",
                            "properties": {
                              "name": {
                                "type": "string",
                                "title": "Name is an alternate way of specifying the target cluster by its symbolic name"
                              },
                              "namespace": {
                                "type": "string",
                                "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                              },
                              "server": {
                                "type": "string",
                                "title": "Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API"
                              }
                            },
                            "additionalProperties": false
                          },
                          "ignoreDifferences": {
                            "type": "array",
                            "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                            "items": {
                              "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                              "type": "object",
                              "properties": {
                                "group": {
                                  "type": "string"
                                },
                                "jqPathExpressions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "jsonPointers": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "kind": {
                                  "type": "string"
                                },
                                "managedFieldsManagers": {
                                  "type": "array",
                                  "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "name": {
                                  "type": "string"
                                },
                                "namespace": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "info": {
                            "type": "array",
                            "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "project": {
                            "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                            "type": "string"
                          },
                          "revisionHistoryLimit": {
                            "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                            "type": "string",
                            "format": "int64"
                          },
                          "source": {
                            "type": "object",
                            "title": "ApplicationSource contains all required information about the source of an application",
                            "properties": {
                              "chart": {
                                "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                "type": "string"
                              },
                              "directory": {
                                "type": "object",
                                "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                "properties": {
                                  "exclude": {
                                    "type": "string",
                                    "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                  },
                                  "include": {
                                    "type": "string",
                                    "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                  },
                                  "jsonnet": {
                                    "type": "object",
                                    "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                    "properties": {
                                      "extVars": {
                                        "type": "array",
                                        "title": "ExtVars is a list of Jsonnet External Variables",
                                        "items": {
                                          "type": "object",
                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                          "properties": {
                                            "code": {
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "libs": {
                                        "type": "array",
                                        "title": "Additional library search dirs",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "tlas": {
                                        "type": "array",
                                        "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                        "items": {
                                          "type": "object",
                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                          "properties": {
                                            "code": {
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "recurse": {
                                    "type": "boolean",
                                    "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "helm": {
                                "type": "object",
                                "title": "ApplicationSourceHelm holds helm specific options",
                                "properties": {
                                  "fileParameters": {
                                    "type": "array",
                                    "title": "FileParameters are file parameters to the helm template",
                                    "items": {
                                      "type": "object",
                                      "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the Helm parameter"
                                        },
                                        "path": {
                                          "type": "string",
                                          "title": "Path is the path to the file containing the values for the Helm parameter"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "ignoreMissingValueFiles": {
                                    "type": "boolean",
                                    "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                  },
                                  "parameters": {
                                    "type": "array",
                                    "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                    "items": {
                                      "type": "object",
                                      "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                      "properties": {
                                        "forceString": {
                                          "type": "boolean",
                                          "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                        },
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the Helm parameter"
                                        },
                                        "value": {
                                          "type": "string",
                                          "title": "Value is the value for the Helm parameter"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "passCredentials": {
                                    "type": "boolean",
                                    "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                  },
                                  "releaseName": {
                                    "type": "string",
                                    "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                  },
                                  "skipCrds": {
                                    "type": "boolean",
                                    "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                  },
                                  "valueFiles": {
                                    "type": "array",
                                    "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "values": {
                                    "type": "string",
                                    "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                                  },
                                  "version": {
                                    "type": "string",
                                    "title": "Version is the Helm version to use for templating (\"3\")"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "kustomize": {
                                "type": "object",
                                "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                "properties": {
                                  "commonAnnotations": {
                                    "type": "object",
                                    "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "commonAnnotationsEnvsubst": {
                                    "type": "boolean",
                                    "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                  },
                                  "commonLabels": {
                                    "type": "object",
                                    "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "forceCommonAnnotations": {
                                    "type": "boolean",
                                    "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                  },
                                  "forceCommonLabels": {
                                    "type": "boolean",
                                    "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                  },
                                  "images": {
                                    "type": "array",
                                    "title": "Images is a list of Kustomize image override specifications",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "namePrefix": {
                                    "type": "string",
                                    "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                  },
                                  "nameSuffix": {
                                    "type": "string",
                                    "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                  },
                                  "namespace": {
                                    "type": "string",
                                    "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                  },
                                  "replicas": {
                                    "type": "array",
                                    "title": "Replicas is a list of Kustomize Replicas override specifications",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "count": {
                                          "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                          "type": "object",
                                          "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                          "properties": {
                                            "intVal": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "strVal": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "format": "int64"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "name": {
                                          "type": "string",
                                          "title": "Name of Deployment or StatefulSet"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "version": {
                                    "type": "string",
                                    "title": "Version controls which version of Kustomize to use for rendering manifests"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "path": {
                                "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                "type": "string"
                              },
                              "plugin": {
                                "type": "object",
                                "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                "properties": {
                                  "env": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "title": "EnvEntry represents an entry in the application's environment",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the variable, usually expressed in uppercase"
                                        },
                                        "value": {
                                          "type": "string",
                                          "title": "Value is the value of the variable"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "parameters": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "array": {
                                          "description": "Array is the value of an array type parameter.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "map": {
                                          "description": "Map is the value of a map type parameter.",
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "name": {
                                          "description": "Name is the name identifying a parameter.",
                                          "type": "string"
                                        },
                                        "string": {
                                          "description": "String_ is the value of a string type parameter.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "ref": {
                                "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                "type": "string"
                              },
                              "repoURL": {
                                "type": "string",
                                "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                              },
                              "targetRevision": {
                                "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "sources": {
                            "type": "array",
                            "title": "Sources is a reference to the location of the application's manifests or chart",
                            "items": {
                              "type": "object",
                              "title": "ApplicationSource contains all required information about the source of an application",
                              "properties": {
                                "chart": {
                                  "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                  "type": "string"
                                },
                                "directory": {
                                  "type": "object",
                                  "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                  "properties": {
                                    "exclude": {
                                      "type": "string",
                                      "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                    },
                                    "include": {
                                      "type": "string",
                                      "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                    },
                                    "jsonnet": {
                                      "type": "object",
                                      "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                      "properties": {
                                        "extVars": {
                                          "type": "array",
                                          "title": "ExtVars is a list of Jsonnet External Variables",
                                          "items": {
                                            "type": "object",
                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                            "properties": {
                                              "code": {
                                                "type": "boolean"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "libs": {
                                          "type": "array",
                                          "title": "Additional library search dirs",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "tlas": {
                                          "type": "array",
                                          "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                          "items": {
                                            "type": "object",
                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                            "properties": {
                                              "code": {
                                                "type": "boolean"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "recurse": {
                                      "type": "boolean",
                                      "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "helm": {
                                  "type": "object",
                                  "title": "ApplicationSourceHelm holds helm specific options",
                                  "properties": {
                                    "fileParameters": {
                                      "type": "array",
                                      "title": "FileParameters are file parameters to the helm template",
                                      "items": {
                                        "type": "object",
                                        "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "title": "Name is the name of the Helm parameter"
                                          },
                                          "path": {
                                            "type": "string",
                                            "title": "Path is the path to the file containing the values for the Helm parameter"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "ignoreMissingValueFiles": {
                                      "type": "boolean",
                                      "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                    },
                                    "parameters": {
                                      "type": "array",
                                      "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                      "items": {
                                        "type": "object",
                                        "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                        "properties": {
                                          "forceString": {
                                            "type": "boolean",
                                            "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                          },
                                          "name": {
                                            "type": "string",
                                            "title": "Name is the name of the Helm parameter"
                                          },
                                          "value": {
                                            "type": "string",
                                            "title": "Value is the value for the Helm parameter"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "passCredentials": {
                                      "type": "boolean",
                                      "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                    },
                                    "releaseName": {
                                      "type": "string",
                                      "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                    },
                                    "skipCrds": {
                                      "type": "boolean",
                                      "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                    },
                                    "valueFiles": {
                                      "type": "array",
                                      "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "values": {
                                      "type": "string",
                                      "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                                    },
                                    "version": {
                                      "type": "string",
                                      "title": "Version is the Helm version to use for templating (\"3\")"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "kustomize": {
                                  "type": "object",
                                  "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                  "properties": {
                                    "commonAnnotations": {
                                      "type": "object",
                                      "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "commonAnnotationsEnvsubst": {
                                      "type": "boolean",
                                      "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                    },
                                    "commonLabels": {
                                      "type": "object",
                                      "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "forceCommonAnnotations": {
                                      "type": "boolean",
                                      "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                    },
                                    "forceCommonLabels": {
                                      "type": "boolean",
                                      "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                    },
                                    "images": {
                                      "type": "array",
                                      "title": "Images is a list of Kustomize image override specifications",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "namePrefix": {
                                      "type": "string",
                                      "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                    },
                                    "nameSuffix": {
                                      "type": "string",
                                      "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                    },
                                    "replicas": {
                                      "type": "array",
                                      "title": "Replicas is a list of Kustomize Replicas override specifications",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "count": {
                                            "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                            "type": "object",
                                            "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                            "properties": {
                                              "intVal": {
                                                "type": "integer",
                                                "format": "int32"
                                              },
                                              "strVal": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "format": "int64"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "name": {
                                            "type": "string",
                                            "title": "Name of Deployment or StatefulSet"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "version": {
                                      "type": "string",
                                      "title": "Version controls which version of Kustomize to use for rendering manifests"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "path": {
                                  "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                  "type": "string"
                                },
                                "plugin": {
                                  "type": "object",
                                  "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                  "properties": {
                                    "env": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "title": "EnvEntry represents an entry in the application's environment",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "title": "Name is the name of the variable, usually expressed in uppercase"
                                          },
                                          "value": {
                                            "type": "string",
                                            "title": "Value is the value of the variable"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "parameters": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "array": {
                                            "description": "Array is the value of an array type parameter.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "map": {
                                            "description": "Map is the value of a map type parameter.",
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "name": {
                                            "description": "Name is the name identifying a parameter.",
                                            "type": "string"
                                          },
                                          "string": {
                                            "description": "String_ is the value of a string type parameter.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "ref": {
                                  "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                  "type": "string"
                                },
                                "repoURL": {
                                  "type": "string",
                                  "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                },
                                "targetRevision": {
                                  "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "syncPolicy": {
                            "type": "object",
                            "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                            "properties": {
                              "automated": {
                                "type": "object",
                                "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                                "properties": {
                                  "allowEmpty": {
                                    "type": "boolean",
                                    "title": "AllowEmpty allows apps have zero live resources (default: false)"
                                  },
                                  "prune": {
                                    "type": "boolean",
                                    "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                                  },
                                  "selfHeal": {
                                    "type": "boolean",
                                    "title": "SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "managedNamespaceMetadata": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "labels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "retry": {
                                "type": "object",
                                "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                                "properties": {
                                  "backoff": {
                                    "type": "object",
                                    "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                                    "properties": {
                                      "duration": {
                                        "type": "string",
                                        "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                                      },
                                      "factor": {
                                        "type": "string",
                                        "format": "int64",
                                        "title": "Factor is a factor to multiply the base duration after each failed retry"
                                      },
                                      "maxDuration": {
                                        "type": "string",
                                        "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "limit": {
                                    "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                    "type": "string",
                                    "format": "int64"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "syncOptions": {
                                "type": "array",
                                "title": "Options allow you to specify whole app sync-options",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "scmProvider": {
                "description": "SCMProviderGenerator defines a generator that scrapes a SCMaaS API to find candidate repos.",
                "type": "object",
                "properties": {
                  "azureDevOps": {
                    "description": "SCMProviderGeneratorAzureDevOps defines connection info specific to Azure DevOps.",
                    "type": "object",
                    "properties": {
                      "accessTokenRef": {
                        "description": "Utility struct for a reference to a secret key.",
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "secretName": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "allBranches": {
                        "description": "Scan all branches instead of just the default branch.",
                        "type": "boolean"
                      },
                      "api": {
                        "description": "The URL to Azure DevOps. If blank, use https://dev.azure.com.",
                        "type": "string"
                      },
                      "organization": {
                        "description": "Azure Devops organization. Required. E.g. \"my-organization\".",
                        "type": "string"
                      },
                      "teamProject": {
                        "description": "Azure Devops team project. Required. E.g. \"my-team\".",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "bitbucket": {
                    "description": "SCMProviderGeneratorBitbucket defines connection info specific to Bitbucket Cloud (API version 2).",
                    "type": "object",
                    "properties": {
                      "allBranches": {
                        "description": "Scan all branches instead of just the main branch.",
                        "type": "boolean"
                      },
                      "appPasswordRef": {
                        "description": "Utility struct for a reference to a secret key.",
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "secretName": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "owner": {
                        "description": "Bitbucket workspace to scan. Required.",
                        "type": "string"
                      },
                      "user": {
                        "type": "string",
                        "title": "Bitbucket user to use when authenticating.  Should have a \"member\" role to be able to read all repositories and branches.  Required"
                      }
                    },
                    "additionalProperties": false
                  },
                  "bitbucketServer": {
                    "description": "SCMProviderGeneratorBitbucketServer defines connection info specific to Bitbucket Server.",
                    "type": "object",
                    "properties": {
                      "allBranches": {
                        "description": "Scan all branches instead of just the default branch.",
                        "type": "boolean"
                      },
                      "api": {
                        "description": "The Bitbucket Server REST API URL to talk to. Required.",
                        "type": "string"
                      },
                      "basicAuth": {
                        "description": "BasicAuthBitbucketServer defines the username/(password or personal access token) for Basic auth.",
                        "type": "object",
                        "properties": {
                          "passwordRef": {
                            "description": "Utility struct for a reference to a secret key.",
                            "type": "object",
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "secretName": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "username": {
                            "type": "string",
                            "title": "Username for Basic auth"
                          }
                        },
                        "additionalProperties": false
                      },
                      "project": {
                        "description": "Project to scan. Required.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "cloneProtocol": {
                    "description": "Which protocol to use for the SCM URL. Default is provider-specific but ssh if possible. Not all providers\nnecessarily support all protocols.",
                    "type": "string"
                  },
                  "filters": {
                    "description": "Filters for which repos should be considered.",
                    "type": "array",
                    "items": {
                      "description": "SCMProviderGeneratorFilter is a single repository filter.\nIf multiple filter types are set on a single struct, they will be AND'd together. All filters must\npass for a repo to be included.",
                      "type": "object",
                      "properties": {
                        "branchMatch": {
                          "description": "A regex which must match the branch name.",
                          "type": "string"
                        },
                        "labelMatch": {
                          "description": "A regex which must match at least one label.",
                          "type": "string"
                        },
                        "pathsDoNotExist": {
                          "description": "An array of paths, all of which must not exist.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "pathsExist": {
                          "description": "An array of paths, all of which must exist.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "repositoryMatch": {
                          "description": "A regex for repo names.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "gitea": {
                    "description": "SCMProviderGeneratorGitea defines a connection info specific to Gitea.",
                    "type": "object",
                    "properties": {
                      "allBranches": {
                        "description": "Scan all branches instead of just the default branch.",
                        "type": "boolean"
                      },
                      "api": {
                        "description": "The Gitea URL to talk to. For example https://gitea.mydomain.com/.",
                        "type": "string"
                      },
                      "insecure": {
                        "type": "boolean",
                        "title": "Allow self-signed TLS / Certificates; default: false"
                      },
                      "owner": {
                        "description": "Gitea organization or user to scan. Required.",
                        "type": "string"
                      },
                      "tokenRef": {
                        "description": "Utility struct for a reference to a secret key.",
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "secretName": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "github": {
                    "description": "SCMProviderGeneratorGithub defines connection info specific to GitHub.",
                    "type": "object",
                    "properties": {
                      "allBranches": {
                        "description": "Scan all branches instead of just the default branch.",
                        "type": "boolean"
                      },
                      "api": {
                        "description": "The GitHub API URL to talk to. If blank, use https://api.github.com/.",
                        "type": "string"
                      },
                      "appSecretName": {
                        "description": "AppSecretName is a reference to a GitHub App repo-creds secret.",
                        "type": "string"
                      },
                      "organization": {
                        "description": "GitHub org to scan. Required.",
                        "type": "string"
                      },
                      "tokenRef": {
                        "description": "Utility struct for a reference to a secret key.",
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "secretName": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "gitlab": {
                    "description": "SCMProviderGeneratorGitlab defines connection info specific to Gitlab.",
                    "type": "object",
                    "properties": {
                      "allBranches": {
                        "description": "Scan all branches instead of just the default branch.",
                        "type": "boolean"
                      },
                      "api": {
                        "description": "The Gitlab API URL to talk to.",
                        "type": "string"
                      },
                      "group": {
                        "description": "Gitlab group to scan. Required.  You can use either the project id (recommended) or the full namespaced path.",
                        "type": "string"
                      },
                      "includeSubgroups": {
                        "type": "boolean",
                        "title": "Recurse through subgroups (true) or scan only the base group (false).  Defaults to \"false\""
                      },
                      "tokenRef": {
                        "description": "Utility struct for a reference to a secret key.",
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "secretName": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "requeueAfterSeconds": {
                    "description": "Standard parameters.",
                    "type": "string",
                    "format": "int64"
                  },
                  "template": {
                    "type": "object",
                    "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
                    "properties": {
                      "metadata": {
                        "type": "object",
                        "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
                        "properties": {
                          "annotations": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "finalizers": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "namespace": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "spec": {
                        "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
                        "type": "object",
                        "properties": {
                          "destination": {
                            "type": "object",
                            "title": "ApplicationDestination holds information about the application's destination",
                            "properties": {
                              "name": {
                                "type": "string",
                                "title": "Name is an alternate way of specifying the target cluster by its symbolic name"
                              },
                              "namespace": {
                                "type": "string",
                                "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                              },
                              "server": {
                                "type": "string",
                                "title": "Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API"
                              }
                            },
                            "additionalProperties": false
                          },
                          "ignoreDifferences": {
                            "type": "array",
                            "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                            "items": {
                              "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                              "type": "object",
                              "properties": {
                                "group": {
                                  "type": "string"
                                },
                                "jqPathExpressions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "jsonPointers": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "kind": {
                                  "type": "string"
                                },
                                "managedFieldsManagers": {
                                  "type": "array",
                                  "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "name": {
                                  "type": "string"
                                },
                                "namespace": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "info": {
                            "type": "array",
                            "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "project": {
                            "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                            "type": "string"
                          },
                          "revisionHistoryLimit": {
                            "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                            "type": "string",
                            "format": "int64"
                          },
                          "source": {
                            "type": "object",
                            "title": "ApplicationSource contains all required information about the source of an application",
                            "properties": {
                              "chart": {
                                "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                "type": "string"
                              },
                              "directory": {
                                "type": "object",
                                "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                "properties": {
                                  "exclude": {
                                    "type": "string",
                                    "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                  },
                                  "include": {
                                    "type": "string",
                                    "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                  },
                                  "jsonnet": {
                                    "type": "object",
                                    "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                    "properties": {
                                      "extVars": {
                                        "type": "array",
                                        "title": "ExtVars is a list of Jsonnet External Variables",
                                        "items": {
                                          "type": "object",
                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                          "properties": {
                                            "code": {
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "libs": {
                                        "type": "array",
                                        "title": "Additional library search dirs",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "tlas": {
                                        "type": "array",
                                        "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                        "items": {
                                          "type": "object",
                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                          "properties": {
                                            "code": {
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "recurse": {
                                    "type": "boolean",
                                    "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "helm": {
                                "type": "object",
                                "title": "ApplicationSourceHelm holds helm specific options",
                                "properties": {
                                  "fileParameters": {
                                    "type": "array",
                                    "title": "FileParameters are file parameters to the helm template",
                                    "items": {
                                      "type": "object",
                                      "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the Helm parameter"
                                        },
                                        "path": {
                                          "type": "string",
                                          "title": "Path is the path to the file containing the values for the Helm parameter"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "ignoreMissingValueFiles": {
                                    "type": "boolean",
                                    "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                  },
                                  "parameters": {
                                    "type": "array",
                                    "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                    "items": {
                                      "type": "object",
                                      "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                      "properties": {
                                        "forceString": {
                                          "type": "boolean",
                                          "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                        },
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the Helm parameter"
                                        },
                                        "value": {
                                          "type": "string",
                                          "title": "Value is the value for the Helm parameter"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "passCredentials": {
                                    "type": "boolean",
                                    "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                  },
                                  "releaseName": {
                                    "type": "string",
                                    "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                  },
                                  "skipCrds": {
                                    "type": "boolean",
                                    "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                  },
                                  "valueFiles": {
                                    "type": "array",
                                    "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "values": {
                                    "type": "string",
                                    "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                                  },
                                  "version": {
                                    "type": "string",
                                    "title": "Version is the Helm version to use for templating (\"3\")"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "kustomize": {
                                "type": "object",
                                "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                "properties": {
                                  "commonAnnotations": {
                                    "type": "object",
                                    "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "commonAnnotationsEnvsubst": {
                                    "type": "boolean",
                                    "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                  },
                                  "commonLabels": {
                                    "type": "object",
                                    "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "forceCommonAnnotations": {
                                    "type": "boolean",
                                    "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                  },
                                  "forceCommonLabels": {
                                    "type": "boolean",
                                    "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                  },
                                  "images": {
                                    "type": "array",
                                    "title": "Images is a list of Kustomize image override specifications",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "namePrefix": {
                                    "type": "string",
                                    "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                  },
                                  "nameSuffix": {
                                    "type": "string",
                                    "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                  },
                                  "namespace": {
                                    "type": "string",
                                    "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                  },
                                  "replicas": {
                                    "type": "array",
                                    "title": "Replicas is a list of Kustomize Replicas override specifications",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "count": {
                                          "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                          "type": "object",
                                          "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                          "properties": {
                                            "intVal": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "strVal": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "format": "int64"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "name": {
                                          "type": "string",
                                          "title": "Name of Deployment or StatefulSet"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "version": {
                                    "type": "string",
                                    "title": "Version controls which version of Kustomize to use for rendering manifests"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "path": {
                                "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                "type": "string"
                              },
                              "plugin": {
                                "type": "object",
                                "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                "properties": {
                                  "env": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "title": "EnvEntry represents an entry in the application's environment",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the variable, usually expressed in uppercase"
                                        },
                                        "value": {
                                          "type": "string",
                                          "title": "Value is the value of the variable"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "parameters": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "array": {
                                          "description": "Array is the value of an array type parameter.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "map": {
                                          "description": "Map is the value of a map type parameter.",
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "name": {
                                          "description": "Name is the name identifying a parameter.",
                                          "type": "string"
                                        },
                                        "string": {
                                          "description": "String_ is the value of a string type parameter.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "ref": {
                                "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                "type": "string"
                              },
                              "repoURL": {
                                "type": "string",
                                "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                              },
                              "targetRevision": {
                                "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "sources": {
                            "type": "array",
                            "title": "Sources is a reference to the location of the application's manifests or chart",
                            "items": {
                              "type": "object",
                              "title": "ApplicationSource contains all required information about the source of an application",
                              "properties": {
                                "chart": {
                                  "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                  "type": "string"
                                },
                                "directory": {
                                  "type": "object",
                                  "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                  "properties": {
                                    "exclude": {
                                      "type": "string",
                                      "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                    },
                                    "include": {
                                      "type": "string",
                                      "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                    },
                                    "jsonnet": {
                                      "type": "object",
                                      "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                      "properties": {
                                        "extVars": {
                                          "type": "array",
                                          "title": "ExtVars is a list of Jsonnet External Variables",
                                          "items": {
                                            "type": "object",
                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                            "properties": {
                                              "code": {
                                                "type": "boolean"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "libs": {
                                          "type": "array",
                                          "title": "Additional library search dirs",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "tlas": {
                                          "type": "array",
                                          "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                          "items": {
                                            "type": "object",
                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                            "properties": {
                                              "code": {
                                                "type": "boolean"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "recurse": {
                                      "type": "boolean",
                                      "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "helm": {
                                  "type": "object",
                                  "title": "ApplicationSourceHelm holds helm specific options",
                                  "properties": {
                                    "fileParameters": {
                                      "type": "array",
                                      "title": "FileParameters are file parameters to the helm template",
                                      "items": {
                                        "type": "object",
                                        "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "title": "Name is the name of the Helm parameter"
                                          },
                                          "path": {
                                            "type": "string",
                                            "title": "Path is the path to the file containing the values for the Helm parameter"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "ignoreMissingValueFiles": {
                                      "type": "boolean",
                                      "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                    },
                                    "parameters": {
                                      "type": "array",
                                      "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                      "items": {
                                        "type": "object",
                                        "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                        "properties": {
                                          "forceString": {
                                            "type": "boolean",
                                            "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                          },
                                          "name": {
                                            "type": "string",
                                            "title": "Name is the name of the Helm parameter"
                                          },
                                          "value": {
                                            "type": "string",
                                            "title": "Value is the value for the Helm parameter"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "passCredentials": {
                                      "type": "boolean",
                                      "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                    },
                                    "releaseName": {
                                      "type": "string",
                                      "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                    },
                                    "skipCrds": {
                                      "type": "boolean",
                                      "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                    },
                                    "valueFiles": {
                                      "type": "array",
                                      "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "values": {
                                      "type": "string",
                                      "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                                    },
                                    "version": {
                                      "type": "string",
                                      "title": "Version is the Helm version to use for templating (\"3\")"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "kustomize": {
                                  "type": "object",
                                  "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                  "properties": {
                                    "commonAnnotations": {
                                      "type": "object",
                                      "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "commonAnnotationsEnvsubst": {
                                      "type": "boolean",
                                      "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                    },
                                    "commonLabels": {
                                      "type": "object",
                                      "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "forceCommonAnnotations": {
                                      "type": "boolean",
                                      "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                    },
                                    "forceCommonLabels": {
                                      "type": "boolean",
                                      "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                    },
                                    "images": {
                                      "type": "array",
                                      "title": "Images is a list of Kustomize image override specifications",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "namePrefix": {
                                      "type": "string",
                                      "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                    },
                                    "nameSuffix": {
                                      "type": "string",
                                      "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                    },
                                    "replicas": {
                                      "type": "array",
                                      "title": "Replicas is a list of Kustomize Replicas override specifications",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "count": {
                                            "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                            "type": "object",
                                            "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                            "properties": {
                                              "intVal": {
                                                "type": "integer",
                                                "format": "int32"
                                              },
                                              "strVal": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "format": "int64"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "name": {
                                            "type": "string",
                                            "title": "Name of Deployment or StatefulSet"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "version": {
                                      "type": "string",
                                      "title": "Version controls which version of Kustomize to use for rendering manifests"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "path": {
                                  "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                  "type": "string"
                                },
                                "plugin": {
                                  "type": "object",
                                  "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                  "properties": {
                                    "env": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "title": "EnvEntry represents an entry in the application's environment",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "title": "Name is the name of the variable, usually expressed in uppercase"
                                          },
                                          "value": {
                                            "type": "string",
                                            "title": "Value is the value of the variable"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "parameters": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "array": {
                                            "description": "Array is the value of an array type parameter.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "map": {
                                            "description": "Map is the value of a map type parameter.",
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "name": {
                                            "description": "Name is the name identifying a parameter.",
                                            "type": "string"
                                          },
                                          "string": {
                                            "description": "String_ is the value of a string type parameter.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "ref": {
                                  "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                  "type": "string"
                                },
                                "repoURL": {
                                  "type": "string",
                                  "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                },
                                "targetRevision": {
                                  "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "syncPolicy": {
                            "type": "object",
                            "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                            "properties": {
                              "automated": {
                                "type": "object",
                                "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                                "properties": {
                                  "allowEmpty": {
                                    "type": "boolean",
                                    "title": "AllowEmpty allows apps have zero live resources (default: false)"
                                  },
                                  "prune": {
                                    "type": "boolean",
                                    "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                                  },
                                  "selfHeal": {
                                    "type": "boolean",
                                    "title": "SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "managedNamespaceMetadata": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "labels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "retry": {
                                "type": "object",
                                "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                                "properties": {
                                  "backoff": {
                                    "type": "object",
                                    "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                                    "properties": {
                                      "duration": {
                                        "type": "string",
                                        "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                                      },
                                      "factor": {
                                        "type": "string",
                                        "format": "int64",
                                        "title": "Factor is a factor to multiply the base duration after each failed retry"
                                      },
                                      "maxDuration": {
                                        "type": "string",
                                        "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "limit": {
                                    "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                    "type": "string",
                                    "format": "int64"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "syncOptions": {
                                "type": "array",
                                "title": "Options allow you to specify whole app sync-options",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "selector": {
                "type": "object",
                "title": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.\n+structType=atomic",
                "properties": {
                  "matchExpressions": {
                    "type": "array",
                    "title": "matchExpressions is a list of label selector requirements. The requirements are ANDed.\n+optional",
                    "items": {
                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "title": "key is the label key that the selector applies to.\n+patchMergeKey=key\n+patchStrategy=merge"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                          "type": "string"
                        },
                        "values": {
                          "type": "array",
                          "title": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.\n+optional",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "matchLabels": {
                    "type": "object",
                    "title": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n+optional",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "template": {
          "type": "object",
          "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
          "properties": {
            "metadata": {
              "type": "object",
              "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
              "properties": {
                "annotations": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "finalizers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "labels": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "spec": {
              "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
              "type": "object",
              "properties": {
                "destination": {
                  "type": "object",
                  "title": "ApplicationDestination holds information about the application's destination",
                  "properties": {
                    "name": {
                      "type": "string",
                      "title": "Name is an alternate way of specifying the target cluster by its symbolic name"
                    },
                    "namespace": {
                      "type": "string",
                      "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                    },
                    "server": {
                      "type": "string",
                      "title": "Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API"
                    }
                  },
                  "additionalProperties": false
                },
                "ignoreDifferences": {
                  "type": "array",
                  "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                  "items": {
                    "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "string"
                      },
                      "jqPathExpressions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "jsonPointers": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "kind": {
                        "type": "string"
                      },
                      "managedFieldsManagers": {
                        "type": "array",
                        "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                        "items": {
                          "type": "string"
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "namespace": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "info": {
                  "type": "array",
                  "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "project": {
                  "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                  "type": "string"
                },
                "revisionHistoryLimit": {
                  "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                  "type": "string",
                  "format": "int64"
                },
                "source": {
                  "type": "object",
                  "title": "ApplicationSource contains all required information about the source of an application",
                  "properties": {
                    "chart": {
                      "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                      "type": "string"
                    },
                    "directory": {
                      "type": "object",
                      "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                      "properties": {
                        "exclude": {
                          "type": "string",
                          "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                        },
                        "include": {
                          "type": "string",
                          "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                        },
                        "jsonnet": {
                          "type": "object",
                          "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                          "properties": {
                            "extVars": {
                              "type": "array",
                              "title": "ExtVars is a list of Jsonnet External Variables",
                              "items": {
                                "type": "object",
                                "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                "properties": {
                                  "code": {
                                    "type": "boolean"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "libs": {
                              "type": "array",
                              "title": "Additional library search dirs",
                              "items": {
                                "type": "string"
                              }
                            },
                            "tlas": {
                              "type": "array",
                              "title": "TLAS is a list of Jsonnet Top-level Arguments",
                              "items": {
                                "type": "object",
                                "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                "properties": {
                                  "code": {
                                    "type": "boolean"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            }
                          },
                          "additionalProperties": false
                        },
                        "recurse": {
                          "type": "boolean",
                          "title": "Recurse specifies whether to scan a directory recursively for manifests"
                        }
                      },
                      "additionalProperties": false
                    },
                    "helm": {
                      "type": "object",
                      "title": "ApplicationSourceHelm holds helm specific options",
                      "properties": {
                        "fileParameters": {
                          "type": "array",
                          "title": "FileParameters are file parameters to the helm template",
                          "items": {
                            "type": "object",
                            "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                            "properties": {
                              "name": {
                                "type": "string",
                                "title": "Name is the name of the Helm parameter"
                              },
                              "path": {
                                "type": "string",
                                "title": "Path is the path to the file containing the values for the Helm parameter"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "ignoreMissingValueFiles": {
                          "type": "boolean",
                          "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                        },
                        "parameters": {
                          "type": "array",
                          "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                          "items": {
                            "type": "object",
                            "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                            "properties": {
                              "forceString": {
                                "type": "boolean",
                                "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                              },
                              "name": {
                                "type": "string",
                                "title": "Name is the name of the Helm parameter"
                              },
                              "value": {
                                "type": "string",
                                "title": "Value is the value for the Helm parameter"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "passCredentials": {
                          "type": "boolean",
                          "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                        },
                        "releaseName": {
                          "type": "string",
                          "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                        },
                        "skipCrds": {
                          "type": "boolean",
                          "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                        },
                        "valueFiles": {
                          "type": "array",
                          "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                          "items": {
                            "type": "string"
                          }
                        },
                        "values": {
                          "type": "string",
                          "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                        },
                        "version": {
                          "type": "string",
                          "title": "Version is the Helm version to use for templating (\"3\")"
                        }
                      },
                      "additionalProperties": false
                    },
                    "kustomize": {
                      "type": "object",
                      "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                      "properties": {
                        "commonAnnotations": {
                          "type": "object",
                          "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "commonAnnotationsEnvsubst": {
                          "type": "boolean",
                          "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                        },
                        "commonLabels": {
                          "type": "object",
                          "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "forceCommonAnnotations": {
                          "type": "boolean",
                          "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                        },
                        "forceCommonLabels": {
                          "type": "boolean",
                          "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                        },
                        "images": {
                          "type": "array",
                          "title": "Images is a list of Kustomize image override specifications",
                          "items": {
                            "type": "string"
                          }
                        },
                        "namePrefix": {
                          "type": "string",
                          "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                        },
                        "nameSuffix": {
                          "type": "string",
                          "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                        },
                        "namespace": {
                          "type": "string",
                          "title": "Namespace sets the namespace that Kustomize adds to all resources"
                        },
                        "replicas": {
                          "type": "array",
                          "title": "Replicas is a list of Kustomize Replicas override specifications",
                          "items": {
                            "type": "object",
                            "properties": {
                              "count": {
                                "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                "type": "object",
                                "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                "properties": {
                                  "intVal": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "strVal": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string",
                                    "format": "int64"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "name": {
                                "type": "string",
                                "title": "Name of Deployment or StatefulSet"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "version": {
                          "type": "string",
                          "title": "Version controls which version of Kustomize to use for rendering manifests"
                        }
                      },
                      "additionalProperties": false
                    },
                    "path": {
                      "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                      "type": "string"
                    },
                    "plugin": {
                      "type": "object",
                      "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                      "properties": {
                        "env": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "title": "EnvEntry represents an entry in the application's environment",
                            "properties": {
                              "name": {
                                "type": "string",
                                "title": "Name is the name of the variable, usually expressed in uppercase"
                              },
                              "value": {
                                "type": "string",
                                "title": "Value is the value of the variable"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "name": {
                          "type": "string"
                        },
                        "parameters": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "array": {
                                "description": "Array is the value of an array type parameter.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "map": {
                                "description": "Map is the value of a map type parameter.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "name": {
                                "description": "Name is the name identifying a parameter.",
                                "type": "string"
                              },
                              "string": {
                                "description": "String_ is the value of a string type parameter.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "ref": {
                      "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                      "type": "string"
                    },
                    "repoURL": {
                      "type": "string",
                      "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                    },
                    "targetRevision": {
                      "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "sources": {
                  "type": "array",
                  "title": "Sources is a reference to the location of the application's manifests or chart",
                  "items": {
                    "type": "object",
                    "title": "ApplicationSource contains all required information about the source of an application",
                    "properties": {
                      "chart": {
                        "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                        "type": "string"
                      },
                      "directory": {
                        "type": "object",
                        "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                        "properties": {
                          "exclude": {
                            "type": "string",
                            "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                          },
                          "include": {
                            "type": "string",
                            "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                          },
                          "jsonnet": {
                            "type": "object",
                            "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                            "properties": {
                              "extVars": {
                                "type": "array",
                                "title": "ExtVars is a list of Jsonnet External Variables",
                                "items": {
                                  "type": "object",
                                  "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                  "properties": {
                                    "code": {
                                      "type": "boolean"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "libs": {
                                "type": "array",
                                "title": "Additional library search dirs",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "tlas": {
                                "type": "array",
                                "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                "items": {
                                  "type": "object",
                                  "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                  "properties": {
                                    "code": {
                                      "type": "boolean"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "recurse": {
                            "type": "boolean",
                            "title": "Recurse specifies whether to scan a directory recursively for manifests"
                          }
                        },
                        "additionalProperties": false
                      },
                      "helm": {
                        "type": "object",
                        "title": "ApplicationSourceHelm holds helm specific options",
                        "properties": {
                          "fileParameters": {
                            "type": "array",
                            "title": "FileParameters are file parameters to the helm template",
                            "items": {
                              "type": "object",
                              "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "title": "Name is the name of the Helm parameter"
                                },
                                "path": {
                                  "type": "string",
                                  "title": "Path is the path to the file containing the values for the Helm parameter"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "ignoreMissingValueFiles": {
                            "type": "boolean",
                            "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                          },
                          "parameters": {
                            "type": "array",
                            "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                            "items": {
                              "type": "object",
                              "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                              "properties": {
                                "forceString": {
                                  "type": "boolean",
                                  "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Name is the name of the Helm parameter"
                                },
                                "value": {
                                  "type": "string",
                                  "title": "Value is the value for the Helm parameter"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "passCredentials": {
                            "type": "boolean",
                            "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                          },
                          "releaseName": {
                            "type": "string",
                            "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                          },
                          "skipCrds": {
                            "type": "boolean",
                            "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                          },
                          "valueFiles": {
                            "type": "array",
                            "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                            "items": {
                              "type": "string"
                            }
                          },
                          "values": {
                            "type": "string",
                            "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                          },
                          "version": {
                            "type": "string",
                            "title": "Version is the Helm version to use for templating (\"3\")"
                          }
                        },
                        "additionalProperties": false
                      },
                      "kustomize": {
                        "type": "object",
                        "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                        "properties": {
                          "commonAnnotations": {
                            "type": "object",
                            "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "commonAnnotationsEnvsubst": {
                            "type": "boolean",
                            "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                          },
                          "commonLabels": {
                            "type": "object",
                            "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "forceCommonAnnotations": {
                            "type": "boolean",
                            "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                          },
                          "forceCommonLabels": {
                            "type": "boolean",
                            "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                          },
                          "images": {
                            "type": "array",
                            "title": "Images is a list of Kustomize image override specifications",
                            "items": {
                              "type": "string"
                            }
                          },
                          "namePrefix": {
                            "type": "string",
                            "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                          },
                          "nameSuffix": {
                            "type": "string",
                            "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                          },
                          "namespace": {
                            "type": "string",
                            "title": "Namespace sets the namespace that Kustomize adds to all resources"
                          },
                          "replicas": {
                            "type": "array",
                            "title": "Replicas is a list of Kustomize Replicas override specifications",
                            "items": {
                              "type": "object",
                              "properties": {
                                "count": {
                                  "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                  "type": "object",
                                  "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                  "properties": {
                                    "intVal": {
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "strVal": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string",
                                      "format": "int64"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Name of Deployment or StatefulSet"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "version": {
                            "type": "string",
                            "title": "Version controls which version of Kustomize to use for rendering manifests"
                          }
                        },
                        "additionalProperties": false
                      },
                      "path": {
                        "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                        "type": "string"
                      },
                      "plugin": {
                        "type": "object",
                        "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                        "properties": {
                          "env": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "EnvEntry represents an entry in the application's environment",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "title": "Name is the name of the variable, usually expressed in uppercase"
                                },
                                "value": {
                                  "type": "string",
                                  "title": "Value is the value of the variable"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "parameters": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "array": {
                                  "description": "Array is the value of an array type parameter.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "map": {
                                  "description": "Map is the value of a map type parameter.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "name": {
                                  "description": "Name is the name identifying a parameter.",
                                  "type": "string"
                                },
                                "string": {
                                  "description": "String_ is the value of a string type parameter.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "ref": {
                        "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                        "type": "string"
                      },
                      "repoURL": {
                        "type": "string",
                        "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                      },
                      "targetRevision": {
                        "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "syncPolicy": {
                  "type": "object",
                  "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                  "properties": {
                    "automated": {
                      "type": "object",
                      "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                      "properties": {
                        "allowEmpty": {
                          "type": "boolean",
                          "title": "AllowEmpty allows apps have zero live resources (default: false)"
                        },
                        "prune": {
                          "type": "boolean",
                          "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                        },
                        "selfHeal": {
                          "type": "boolean",
                          "title": "SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                        }
                      },
                      "additionalProperties": false
                    },
                    "managedNamespaceMetadata": {
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "labels": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "retry": {
                      "type": "object",
                      "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                      "properties": {
                        "backoff": {
                          "type": "object",
                          "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                          "properties": {
                            "duration": {
                              "type": "string",
                              "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                            },
                            "factor": {
                              "type": "string",
                              "format": "int64",
                              "title": "Factor is a factor to multiply the base duration after each failed retry"
                            },
                            "maxDuration": {
                              "type": "string",
                              "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                            }
                          },
                          "additionalProperties": false
                        },
                        "limit": {
                          "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                          "type": "string",
                          "format": "int64"
                        }
                      },
                      "additionalProperties": false
                    },
                    "syncOptions": {
                      "type": "array",
                      "title": "Options allow you to specify whole app sync-options",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "merge": {
      "description": "MergeGenerator merges the output of two or more generators. Where the values for all specified merge keys are equal\nbetween two sets of generated parameters, the parameter sets will be merged with the parameters from the latter\ngenerator taking precedence. Parameter sets with merge keys not present in the base generator's params will be\nignored.\nFor example, if the first generator produced [{a: '1', b: '2'}, {c: '1', d: '1'}] and the second generator produced\n[{'a': 'override'}], the united parameters for merge keys = ['a'] would be\n[{a: 'override', b: '1'}, {c: '1', d: '1'}].\n\nMergeGenerator supports template overriding. If a MergeGenerator is one of multiple top-level generators, its\ntemplate will be merged with the top-level generator before the parameters are applied.",
      "type": "object",
      "properties": {
        "generators": {
          "type": "array",
          "items": {
            "description": "ApplicationSetNestedGenerator represents a generator nested within a combination-type generator (MatrixGenerator or\nMergeGenerator).",
            "type": "object",
            "properties": {
              "clusterDecisionResource": {
                "description": "DuckType defines a generator to match against clusters registered with ArgoCD.",
                "type": "object",
                "properties": {
                  "configMapRef": {
                    "type": "string",
                    "title": "ConfigMapRef is a ConfigMap with the duck type definitions needed to retrieve the data\n             this includes apiVersion(group/version), kind, matchKey and validation settings\nName is the resource name of the kind, group and version, defined in the ConfigMapRef\nRequeueAfterSeconds is how long before the duckType will be rechecked for a change"
                  },
                  "labelSelector": {
                    "type": "object",
                    "title": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.\n+structType=atomic",
                    "properties": {
                      "matchExpressions": {
                        "type": "array",
                        "title": "matchExpressions is a list of label selector requirements. The requirements are ANDed.\n+optional",
                        "items": {
                          "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "title": "key is the label key that the selector applies to.\n+patchMergeKey=key\n+patchStrategy=merge"
                            },
                            "operator": {
                              "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                              "type": "string"
                            },
                            "values": {
                              "type": "array",
                              "title": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.\n+optional",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "matchLabels": {
                        "type": "object",
                        "title": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n+optional",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "name": {
                    "type": "string"
                  },
                  "requeueAfterSeconds": {
                    "type": "string",
                    "format": "int64"
                  },
                  "template": {
                    "type": "object",
                    "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
                    "properties": {
                      "metadata": {
                        "type": "object",
                        "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
                        "properties": {
                          "annotations": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "finalizers": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "namespace": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "spec": {
                        "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
                        "type": "object",
                        "properties": {
                          "destination": {
                            "type": "object",
                            "title": "ApplicationDestination holds information about the application's destination",
                            "properties": {
                              "name": {
                                "type": "string",
                                "title": "Name is an alternate way of specifying the target cluster by its symbolic name"
                              },
                              "namespace": {
                                "type": "string",
                                "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                              },
                              "server": {
                                "type": "string",
                                "title": "Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API"
                              }
                            },
                            "additionalProperties": false
                          },
                          "ignoreDifferences": {
                            "type": "array",
                            "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                            "items": {
                              "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                              "type": "object",
                              "properties": {
                                "group": {
                                  "type": "string"
                                },
                                "jqPathExpressions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "jsonPointers": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "kind": {
                                  "type": "string"
                                },
                                "managedFieldsManagers": {
                                  "type": "array",
                                  "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "name": {
                                  "type": "string"
                                },
                                "namespace": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "info": {
                            "type": "array",
                            "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "project": {
                            "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                            "type": "string"
                          },
                          "revisionHistoryLimit": {
                            "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                            "type": "string",
                            "format": "int64"
                          },
                          "source": {
                            "type": "object",
                            "title": "ApplicationSource contains all required information about the source of an application",
                            "properties": {
                              "chart": {
                                "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                "type": "string"
                              },
                              "directory": {
                                "type": "object",
                                "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                "properties": {
                                  "exclude": {
                                    "type": "string",
                                    "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                  },
                                  "include": {
                                    "type": "string",
                                    "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                  },
                                  "jsonnet": {
                                    "type": "object",
                                    "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                    "properties": {
                                      "extVars": {
                                        "type": "array",
                                        "title": "ExtVars is a list of Jsonnet External Variables",
                                        "items": {
                                          "type": "object",
                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                          "properties": {
                                            "code": {
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "libs": {
                                        "type": "array",
                                        "title": "Additional library search dirs",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "tlas": {
                                        "type": "array",
                                        "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                        "items": {
                                          "type": "object",
                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                          "properties": {
                                            "code": {
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "recurse": {
                                    "type": "boolean",
                                    "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "helm": {
                                "type": "object",
                                "title": "ApplicationSourceHelm holds helm specific options",
                                "properties": {
                                  "fileParameters": {
                                    "type": "array",
                                    "title": "FileParameters are file parameters to the helm template",
                                    "items": {
                                      "type": "object",
                                      "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the Helm parameter"
                                        },
                                        "path": {
                                          "type": "string",
                                          "title": "Path is the path to the file containing the values for the Helm parameter"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "ignoreMissingValueFiles": {
                                    "type": "boolean",
                                    "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                  },
                                  "parameters": {
                                    "type": "array",
                                    "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                    "items": {
                                      "type": "object",
                                      "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                      "properties": {
                                        "forceString": {
                                          "type": "boolean",
                                          "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                        },
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the Helm parameter"
                                        },
                                        "value": {
                                          "type": "string",
                                          "title": "Value is the value for the Helm parameter"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "passCredentials": {
                                    "type": "boolean",
                                    "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                  },
                                  "releaseName": {
                                    "type": "string",
                                    "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                  },
                                  "skipCrds": {
                                    "type": "boolean",
                                    "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                  },
                                  "valueFiles": {
                                    "type": "array",
                                    "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "values": {
                                    "type": "string",
                                    "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                                  },
                                  "version": {
                                    "type": "string",
                                    "title": "Version is the Helm version to use for templating (\"3\")"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "kustomize": {
                                "type": "object",
                                "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                "properties": {
                                  "commonAnnotations": {
                                    "type": "object",
                                    "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "commonAnnotationsEnvsubst": {
                                    "type": "boolean",
                                    "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                  },
                                  "commonLabels": {
                                    "type": "object",
                                    "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "forceCommonAnnotations": {
                                    "type": "boolean",
                                    "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                  },
                                  "forceCommonLabels": {
                                    "type": "boolean",
                                    "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                  },
                                  "images": {
                                    "type": "array",
                                    "title": "Images is a list of Kustomize image override specifications",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "namePrefix": {
                                    "type": "string",
                                    "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                  },
                                  "nameSuffix": {
                                    "type": "string",
                                    "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                  },
                                  "namespace": {
                                    "type": "string",
                                    "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                  },
                                  "replicas": {
                                    "type": "array",
                                    "title": "Replicas is a list of Kustomize Replicas override specifications",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "count": {
                                          "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                          "type": "object",
                                          "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                          "properties": {
                                            "intVal": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "strVal": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "format": "int64"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "name": {
                                          "type": "string",
                                          "title": "Name of Deployment or StatefulSet"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "version": {
                                    "type": "string",
                                    "title": "Version controls which version of Kustomize to use for rendering manifests"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "path": {
                                "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                "type": "string"
                              },
                              "plugin": {
                                "type": "object",
                                "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                "properties": {
                                  "env": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "title": "EnvEntry represents an entry in the application's environment",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the variable, usually expressed in uppercase"
                                        },
                                        "value": {
                                          "type": "string",
                                          "title": "Value is the value of the variable"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "parameters": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "array": {
                                          "description": "Array is the value of an array type parameter.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "map": {
                                          "description": "Map is the value of a map type parameter.",
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "name": {
                                          "description": "Name is the name identifying a parameter.",
                                          "type": "string"
                                        },
                                        "string": {
                                          "description": "String_ is the value of a string type parameter.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "ref": {
                                "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                "type": "string"
                              },
                              "repoURL": {
                                "type": "string",
                                "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                              },
                              "targetRevision": {
                                "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "sources": {
                            "type": "array",
                            "title": "Sources is a reference to the location of the application's manifests or chart",
                            "items": {
                              "type": "object",
                              "title": "ApplicationSource contains all required information about the source of an application",
                              "properties": {
                                "chart": {
                                  "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                  "type": "string"
                                },
                                "directory": {
                                  "type": "object",
                                  "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                  "properties": {
                                    "exclude": {
                                      "type": "string",
                                      "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                    },
                                    "include": {
                                      "type": "string",
                                      "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                    },
                                    "jsonnet": {
                                      "type": "object",
                                      "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                      "properties": {
                                        "extVars": {
                                          "type": "array",
                                          "title": "ExtVars is a list of Jsonnet External Variables",
                                          "items": {
                                            "type": "object",
                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                            "properties": {
                                              "code": {
                                                "type": "boolean"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "libs": {
                                          "type": "array",
                                          "title": "Additional library search dirs",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "tlas": {
                                          "type": "array",
                                          "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                          "items": {
                                            "type": "object",
                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                            "properties": {
                                              "code": {
                                                "type": "boolean"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "recurse": {
                                      "type": "boolean",
                                      "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "helm": {
                                  "type": "object",
                                  "title": "ApplicationSourceHelm holds helm specific options",
                                  "properties": {
                                    "fileParameters": {
                                      "type": "array",
                                      "title": "FileParameters are file parameters to the helm template",
                                      "items": {
                                        "type": "object",
                                        "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "title": "Name is the name of the Helm parameter"
                                          },
                                          "path": {
                                            "type": "string",
                                            "title": "Path is the path to the file containing the values for the Helm parameter"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "ignoreMissingValueFiles": {
                                      "type": "boolean",
                                      "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                    },
                                    "parameters": {
                                      "type": "array",
                                      "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                      "items": {
                                        "type": "object",
                                        "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                        "properties": {
                                          "forceString": {
                                            "type": "boolean",
                                            "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                          },
                                          "name": {
                                            "type": "string",
                                            "title": "Name is the name of the Helm parameter"
                                          },
                                          "value": {
                                            "type": "string",
                                            "title": "Value is the value for the Helm parameter"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "passCredentials": {
                                      "type": "boolean",
                                      "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                    },
                                    "releaseName": {
                                      "type": "string",
                                      "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                    },
                                    "skipCrds": {
                                      "type": "boolean",
                                      "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                    },
                                    "valueFiles": {
                                      "type": "array",
                                      "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "values": {
                                      "type": "string",
                                      "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                                    },
                                    "version": {
                                      "type": "string",
                                      "title": "Version is the Helm version to use for templating (\"3\")"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "kustomize": {
                                  "type": "object",
                                  "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                  "properties": {
                                    "commonAnnotations": {
                                      "type": "object",
                                      "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "commonAnnotationsEnvsubst": {
                                      "type": "boolean",
                                      "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                    },
                                    "commonLabels": {
                                      "type": "object",
                                      "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "forceCommonAnnotations": {
                                      "type": "boolean",
                                      "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                    },
                                    "forceCommonLabels": {
                                      "type": "boolean",
                                      "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                    },
                                    "images": {
                                      "type": "array",
                                      "title": "Images is a list of Kustomize image override specifications",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "namePrefix": {
                                      "type": "string",
                                      "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                    },
                                    "nameSuffix": {
                                      "type": "string",
                                      "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                    },
                                    "replicas": {
                                      "type": "array",
                                      "title": "Replicas is a list of Kustomize Replicas override specifications",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "count": {
                                            "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                            "type": "object",
                                            "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                            "properties": {
                                              "intVal": {
                                                "type": "integer",
                                                "format": "int32"
                                              },
                                              "strVal": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "format": "int64"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "name": {
                                            "type": "string",
                                            "title": "Name of Deployment or StatefulSet"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "version": {
                                      "type": "string",
                                      "title": "Version controls which version of Kustomize to use for rendering manifests"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "path": {
                                  "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                  "type": "string"
                                },
                                "plugin": {
                                  "type": "object",
                                  "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                  "properties": {
                                    "env": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "title": "EnvEntry represents an entry in the application's environment",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "title": "Name is the name of the variable, usually expressed in uppercase"
                                          },
                                          "value": {
                                            "type": "string",
                                            "title": "Value is the value of the variable"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "parameters": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "array": {
                                            "description": "Array is the value of an array type parameter.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "map": {
                                            "description": "Map is the value of a map type parameter.",
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "name": {
                                            "description": "Name is the name identifying a parameter.",
                                            "type": "string"
                                          },
                                          "string": {
                                            "description": "String_ is the value of a string type parameter.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "ref": {
                                  "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                  "type": "string"
                                },
                                "repoURL": {
                                  "type": "string",
                                  "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                },
                                "targetRevision": {
                                  "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "syncPolicy": {
                            "type": "object",
                            "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                            "properties": {
                              "automated": {
                                "type": "object",
                                "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                                "properties": {
                                  "allowEmpty": {
                                    "type": "boolean",
                                    "title": "AllowEmpty allows apps have zero live resources (default: false)"
                                  },
                                  "prune": {
                                    "type": "boolean",
                                    "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                                  },
                                  "selfHeal": {
                                    "type": "boolean",
                                    "title": "SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "managedNamespaceMetadata": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "labels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "retry": {
                                "type": "object",
                                "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                                "properties": {
                                  "backoff": {
                                    "type": "object",
                                    "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                                    "properties": {
                                      "duration": {
                                        "type": "string",
                                        "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                                      },
                                      "factor": {
                                        "type": "string",
                                        "format": "int64",
                                        "title": "Factor is a factor to multiply the base duration after each failed retry"
                                      },
                                      "maxDuration": {
                                        "type": "string",
                                        "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "limit": {
                                    "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                    "type": "string",
                                    "format": "int64"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "syncOptions": {
                                "type": "array",
                                "title": "Options allow you to specify whole app sync-options",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "values": {
                    "type": "object",
                    "title": "Values contains key/value pairs which are passed directly as parameters to the template",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              },
              "clusters": {
                "description": "ClusterGenerator defines a generator to match against clusters registered with ArgoCD.",
                "type": "object",
                "properties": {
                  "selector": {
                    "type": "object",
                    "title": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.\n+structType=atomic",
                    "properties": {
                      "matchExpressions": {
                        "type": "array",
                        "title": "matchExpressions is a list of label selector requirements. The requirements are ANDed.\n+optional",
                        "items": {
                          "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "title": "key is the label key that the selector applies to.\n+patchMergeKey=key\n+patchStrategy=merge"
                            },
                            "operator": {
                              "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                              "type": "string"
                            },
                            "values": {
                              "type": "array",
                              "title": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.\n+optional",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "matchLabels": {
                        "type": "object",
                        "title": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n+optional",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "template": {
                    "type": "object",
                    "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
                    "properties": {
                      "metadata": {
                        "type": "object",
                        "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
                        "properties": {
                          "annotations": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "finalizers": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "namespace": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "spec": {
                        "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
                        "type": "object",
                        "properties": {
                          "destination": {
                            "type": "object",
                            "title": "ApplicationDestination holds information about the application's destination",
                            "properties": {
                              "name": {
                                "type": "string",
                                "title": "Name is an alternate way of specifying the target cluster by its symbolic name"
                              },
                              "namespace": {
                                "type": "string",
                                "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                              },
                              "server": {
                                "type": "string",
                                "title": "Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API"
                              }
                            },
                            "additionalProperties": false
                          },
                          "ignoreDifferences": {
                            "type": "array",
                            "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                            "items": {
                              "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                              "type": "object",
                              "properties": {
                                "group": {
                                  "type": "string"
                                },
                                "jqPathExpressions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "jsonPointers": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "kind": {
                                  "type": "string"
                                },
                                "managedFieldsManagers": {
                                  "type": "array",
                                  "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "name": {
                                  "type": "string"
                                },
                                "namespace": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "info": {
                            "type": "array",
                            "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "project": {
                            "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                            "type": "string"
                          },
                          "revisionHistoryLimit": {
                            "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                            "type": "string",
                            "format": "int64"
                          },
                          "source": {
                            "type": "object",
                            "title": "ApplicationSource contains all required information about the source of an application",
                            "properties": {
                              "chart": {
                                "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                "type": "string"
                              },
                              "directory": {
                                "type": "object",
                                "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                "properties": {
                                  "exclude": {
                                    "type": "string",
                                    "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                  },
                                  "include": {
                                    "type": "string",
                                    "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                  },
                                  "jsonnet": {
                                    "type": "object",
                                    "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                    "properties": {
                                      "extVars": {
                                        "type": "array",
                                        "title": "ExtVars is a list of Jsonnet External Variables",
                                        "items": {
                                          "type": "object",
                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                          "properties": {
                                            "code": {
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "libs": {
                                        "type": "array",
                                        "title": "Additional library search dirs",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "tlas": {
                                        "type": "array",
                                        "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                        "items": {
                                          "type": "object",
                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                          "properties": {
                                            "code": {
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "recurse": {
                                    "type": "boolean",
                                    "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "helm": {
                                "type": "object",
                                "title": "ApplicationSourceHelm holds helm specific options",
                                "properties": {
                                  "fileParameters": {
                                    "type": "array",
                                    "title": "FileParameters are file parameters to the helm template",
                                    "items": {
                                      "type": "object",
                                      "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the Helm parameter"
                                        },
                                        "path": {
                                          "type": "string",
                                          "title": "Path is the path to the file containing the values for the Helm parameter"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "ignoreMissingValueFiles": {
                                    "type": "boolean",
                                    "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                  },
                                  "parameters": {
                                    "type": "array",
                                    "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                    "items": {
                                      "type": "object",
                                      "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                      "properties": {
                                        "forceString": {
                                          "type": "boolean",
                                          "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                        },
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the Helm parameter"
                                        },
                                        "value": {
                                          "type": "string",
                                          "title": "Value is the value for the Helm parameter"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "passCredentials": {
                                    "type": "boolean",
                                    "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                  },
                                  "releaseName": {
                                    "type": "string",
                                    "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                  },
                                  "skipCrds": {
                                    "type": "boolean",
                                    "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                  },
                                  "valueFiles": {
                                    "type": "array",
                                    "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "values": {
                                    "type": "string",
                                    "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                                  },
                                  "version": {
                                    "type": "string",
                                    "title": "Version is the Helm version to use for templating (\"3\")"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "kustomize": {
                                "type": "object",
                                "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                "properties": {
                                  "commonAnnotations": {
                                    "type": "object",
                                    "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "commonAnnotationsEnvsubst": {
                                    "type": "boolean",
                                    "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                  },
                                  "commonLabels": {
                                    "type": "object",
                                    "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "forceCommonAnnotations": {
                                    "type": "boolean",
                                    "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                  },
                                  "forceCommonLabels": {
                                    "type": "boolean",
                                    "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                  },
                                  "images": {
                                    "type": "array",
                                    "title": "Images is a list of Kustomize image override specifications",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "namePrefix": {
                                    "type": "string",
                                    "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                  },
                                  "nameSuffix": {
                                    "type": "string",
                                    "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                  },
                                  "namespace": {
                                    "type": "string",
                                    "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                  },
                                  "replicas": {
                                    "type": "array",
                                    "title": "Replicas is a list of Kustomize Replicas override specifications",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "count": {
                                          "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                          "type": "object",
                                          "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                          "properties": {
                                            "intVal": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "strVal": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "format": "int64"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "name": {
                                          "type": "string",
                                          "title": "Name of Deployment or StatefulSet"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "version": {
                                    "type": "string",
                                    "title": "Version controls which version of Kustomize to use for rendering manifests"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "path": {
                                "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                "type": "string"
                              },
                              "plugin": {
                                "type": "object",
                                "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                "properties": {
                                  "env": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "title": "EnvEntry represents an entry in the application's environment",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the variable, usually expressed in uppercase"
                                        },
                                        "value": {
                                          "type": "string",
                                          "title": "Value is the value of the variable"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "parameters": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "array": {
                                          "description": "Array is the value of an array type parameter.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "map": {
                                          "description": "Map is the value of a map type parameter.",
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "name": {
                                          "description": "Name is the name identifying a parameter.",
                                          "type": "string"
                                        },
                                        "string": {
                                          "description": "String_ is the value of a string type parameter.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "ref": {
                                "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                "type": "string"
                              },
                              "repoURL": {
                                "type": "string",
                                "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                              },
                              "targetRevision": {
                                "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "sources": {
                            "type": "array",
                            "title": "Sources is a reference to the location of the application's manifests or chart",
                            "items": {
                              "type": "object",
                              "title": "ApplicationSource contains all required information about the source of an application",
                              "properties": {
                                "chart": {
                                  "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                  "type": "string"
                                },
                                "directory": {
                                  "type": "object",
                                  "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                  "properties": {
                                    "exclude": {
                                      "type": "string",
                                      "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                    },
                                    "include": {
                                      "type": "string",
                                      "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                    },
                                    "jsonnet": {
                                      "type": "object",
                                      "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                      "properties": {
                                        "extVars": {
                                          "type": "array",
                                          "title": "ExtVars is a list of Jsonnet External Variables",
                                          "items": {
                                            "type": "object",
                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                            "properties": {
                                              "code": {
                                                "type": "boolean"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "libs": {
                                          "type": "array",
                                          "title": "Additional library search dirs",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "tlas": {
                                          "type": "array",
                                          "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                          "items": {
                                            "type": "object",
                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                            "properties": {
                                              "code": {
                                                "type": "boolean"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "recurse": {
                                      "type": "boolean",
                                      "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "helm": {
                                  "type": "object",
                                  "title": "ApplicationSourceHelm holds helm specific options",
                                  "properties": {
                                    "fileParameters": {
                                      "type": "array",
                                      "title": "FileParameters are file parameters to the helm template",
                                      "items": {
                                        "type": "object",
                                        "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "title": "Name is the name of the Helm parameter"
                                          },
                                          "path": {
                                            "type": "string",
                                            "title": "Path is the path to the file containing the values for the Helm parameter"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "ignoreMissingValueFiles": {
                                      "type": "boolean",
                                      "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                    },
                                    "parameters": {
                                      "type": "array",
                                      "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                      "items": {
                                        "type": "object",
                                        "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                        "properties": {
                                          "forceString": {
                                            "type": "boolean",
                                            "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                          },
                                          "name": {
                                            "type": "string",
                                            "title": "Name is the name of the Helm parameter"
                                          },
                                          "value": {
                                            "type": "string",
                                            "title": "Value is the value for the Helm parameter"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "passCredentials": {
                                      "type": "boolean",
                                      "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                    },
                                    "releaseName": {
                                      "type": "string",
                                      "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                    },
                                    "skipCrds": {
                                      "type": "boolean",
                                      "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                    },
                                    "valueFiles": {
                                      "type": "array",
                                      "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "values": {
                                      "type": "string",
                                      "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                                    },
                                    "version": {
                                      "type": "string",
                                      "title": "Version is the Helm version to use for templating (\"3\")"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "kustomize": {
                                  "type": "object",
                                  "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                  "properties": {
                                    "commonAnnotations": {
                                      "type": "object",
                                      "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "commonAnnotationsEnvsubst": {
                                      "type": "boolean",
                                      "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                    },
                                    "commonLabels": {
                                      "type": "object",
                                      "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "forceCommonAnnotations": {
                                      "type": "boolean",
                                      "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                    },
                                    "forceCommonLabels": {
                                      "type": "boolean",
                                      "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                    },
                                    "images": {
                                      "type": "array",
                                      "title": "Images is a list of Kustomize image override specifications",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "namePrefix": {
                                      "type": "string",
                                      "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                    },
                                    "nameSuffix": {
                                      "type": "string",
                                      "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                    },
                                    "replicas": {
                                      "type": "array",
                                      "title": "Replicas is a list of Kustomize Replicas override specifications",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "count": {
                                            "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                            "type": "object",
                                            "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                            "properties": {
                                              "intVal": {
                                                "type": "integer",
                                                "format": "int32"
                                              },
                                              "strVal": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "format": "int64"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "name": {
                                            "type": "string",
                                            "title": "Name of Deployment or StatefulSet"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "version": {
                                      "type": "string",
                                      "title": "Version controls which version of Kustomize to use for rendering manifests"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "path": {
                                  "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                  "type": "string"
                                },
                                "plugin": {
                                  "type": "object",
                                  "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                  "properties": {
                                    "env": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "title": "EnvEntry represents an entry in the application's environment",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "title": "Name is the name of the variable, usually expressed in uppercase"
                                          },
                                          "value": {
                                            "type": "string",
                                            "title": "Value is the value of the variable"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "parameters": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "array": {
                                            "description": "Array is the value of an array type parameter.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "map": {
                                            "description": "Map is the value of a map type parameter.",
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "name": {
                                            "description": "Name is the name identifying a parameter.",
                                            "type": "string"
                                          },
                                          "string": {
                                            "description": "String_ is the value of a string type parameter.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "ref": {
                                  "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                  "type": "string"
                                },
                                "repoURL": {
                                  "type": "string",
                                  "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                },
                                "targetRevision": {
                                  "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "syncPolicy": {
                            "type": "object",
                            "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                            "properties": {
                              "automated": {
                                "type": "object",
                                "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                                "properties": {
                                  "allowEmpty": {
                                    "type": "boolean",
                                    "title": "AllowEmpty allows apps have zero live resources (default: false)"
                                  },
                                  "prune": {
                                    "type": "boolean",
                                    "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                                  },
                                  "selfHeal": {
                                    "type": "boolean",
                                    "title": "SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "managedNamespaceMetadata": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "labels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "retry": {
                                "type": "object",
                                "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                                "properties": {
                                  "backoff": {
                                    "type": "object",
                                    "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                                    "properties": {
                                      "duration": {
                                        "type": "string",
                                        "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                                      },
                                      "factor": {
                                        "type": "string",
                                        "format": "int64",
                                        "title": "Factor is a factor to multiply the base duration after each failed retry"
                                      },
                                      "maxDuration": {
                                        "type": "string",
                                        "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "limit": {
                                    "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                    "type": "string",
                                    "format": "int64"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "syncOptions": {
                                "type": "array",
                                "title": "Options allow you to specify whole app sync-options",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "values": {
                    "type": "object",
                    "title": "Values contains key/value pairs which are passed directly as parameters to the template",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              },
              "git": {
                "type": "object",
                "properties": {
                  "directories": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "exclude": {
                          "type": "boolean"
                        },
                        "path": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "pathParamPrefix": {
                    "type": "string"
                  },
                  "repoURL": {
                    "type": "string"
                  },
                  "requeueAfterSeconds": {
                    "type": "string",
                    "format": "int64"
                  },
                  "revision": {
                    "type": "string"
                  },
                  "template": {
                    "type": "object",
                    "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
                    "properties": {
                      "metadata": {
                        "type": "object",
                        "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
                        "properties": {
                          "annotations": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "finalizers": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "namespace": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "spec": {
                        "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
                        "type": "object",
                        "properties": {
                          "destination": {
                            "type": "object",
                            "title": "ApplicationDestination holds information about the application's destination",
                            "properties": {
                              "name": {
                                "type": "string",
                                "title": "Name is an alternate way of specifying the target cluster by its symbolic name"
                              },
                              "namespace": {
                                "type": "string",
                                "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                              },
                              "server": {
                                "type": "string",
                                "title": "Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API"
                              }
                            },
                            "additionalProperties": false
                          },
                          "ignoreDifferences": {
                            "type": "array",
                            "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                            "items": {
                              "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                              "type": "object",
                              "properties": {
                                "group": {
                                  "type": "string"
                                },
                                "jqPathExpressions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "jsonPointers": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "kind": {
                                  "type": "string"
                                },
                                "managedFieldsManagers": {
                                  "type": "array",
                                  "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "name": {
                                  "type": "string"
                                },
                                "namespace": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "info": {
                            "type": "array",
                            "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "project": {
                            "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                            "type": "string"
                          },
                          "revisionHistoryLimit": {
                            "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                            "type": "string",
                            "format": "int64"
                          },
                          "source": {
                            "type": "object",
                            "title": "ApplicationSource contains all required information about the source of an application",
                            "properties": {
                              "chart": {
                                "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                "type": "string"
                              },
                              "directory": {
                                "type": "object",
                                "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                "properties": {
                                  "exclude": {
                                    "type": "string",
                                    "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                  },
                                  "include": {
                                    "type": "string",
                                    "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                  },
                                  "jsonnet": {
                                    "type": "object",
                                    "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                    "properties": {
                                      "extVars": {
                                        "type": "array",
                                        "title": "ExtVars is a list of Jsonnet External Variables",
                                        "items": {
                                          "type": "object",
                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                          "properties": {
                                            "code": {
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "libs": {
                                        "type": "array",
                                        "title": "Additional library search dirs",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "tlas": {
                                        "type": "array",
                                        "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                        "items": {
                                          "type": "object",
                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                          "properties": {
                                            "code": {
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "recurse": {
                                    "type": "boolean",
                                    "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "helm": {
                                "type": "object",
                                "title": "ApplicationSourceHelm holds helm specific options",
                                "properties": {
                                  "fileParameters": {
                                    "type": "array",
                                    "title": "FileParameters are file parameters to the helm template",
                                    "items": {
                                      "type": "object",
                                      "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the Helm parameter"
                                        },
                                        "path": {
                                          "type": "string",
                                          "title": "Path is the path to the file containing the values for the Helm parameter"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "ignoreMissingValueFiles": {
                                    "type": "boolean",
                                    "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                  },
                                  "parameters": {
                                    "type": "array",
                                    "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                    "items": {
                                      "type": "object",
                                      "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                      "properties": {
                                        "forceString": {
                                          "type": "boolean",
                                          "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                        },
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the Helm parameter"
                                        },
                                        "value": {
                                          "type": "string",
                                          "title": "Value is the value for the Helm parameter"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "passCredentials": {
                                    "type": "boolean",
                                    "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                  },
                                  "releaseName": {
                                    "type": "string",
                                    "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                  },
                                  "skipCrds": {
                                    "type": "boolean",
                                    "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                  },
                                  "valueFiles": {
                                    "type": "array",
                                    "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "values": {
                                    "type": "string",
                                    "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                                  },
                                  "version": {
                                    "type": "string",
                                    "title": "Version is the Helm version to use for templating (\"3\")"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "kustomize": {
                                "type": "object",
                                "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                "properties": {
                                  "commonAnnotations": {
                                    "type": "object",
                                    "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "commonAnnotationsEnvsubst": {
                                    "type": "boolean",
                                    "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                  },
                                  "commonLabels": {
                                    "type": "object",
                                    "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "forceCommonAnnotations": {
                                    "type": "boolean",
                                    "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                  },
                                  "forceCommonLabels": {
                                    "type": "boolean",
                                    "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                  },
                                  "images": {
                                    "type": "array",
                                    "title": "Images is a list of Kustomize image override specifications",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "namePrefix": {
                                    "type": "string",
                                    "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                  },
                                  "nameSuffix": {
                                    "type": "string",
                                    "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                  },
                                  "namespace": {
                                    "type": "string",
                                    "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                  },
                                  "replicas": {
                                    "type": "array",
                                    "title": "Replicas is a list of Kustomize Replicas override specifications",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "count": {
                                          "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                          "type": "object",
                                          "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                          "properties": {
                                            "intVal": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "strVal": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "format": "int64"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "name": {
                                          "type": "string",
                                          "title": "Name of Deployment or StatefulSet"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "version": {
                                    "type": "string",
                                    "title": "Version controls which version of Kustomize to use for rendering manifests"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "path": {
                                "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                "type": "string"
                              },
                              "plugin": {
                                "type": "object",
                                "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                "properties": {
                                  "env": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "title": "EnvEntry represents an entry in the application's environment",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the variable, usually expressed in uppercase"
                                        },
                                        "value": {
                                          "type": "string",
                                          "title": "Value is the value of the variable"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "parameters": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "array": {
                                          "description": "Array is the value of an array type parameter.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "map": {
                                          "description": "Map is the value of a map type parameter.",
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "name": {
                                          "description": "Name is the name identifying a parameter.",
                                          "type": "string"
                                        },
                                        "string": {
                                          "description": "String_ is the value of a string type parameter.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "ref": {
                                "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                "type": "string"
                              },
                              "repoURL": {
                                "type": "string",
                                "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                              },
                              "targetRevision": {
                                "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "sources": {
                            "type": "array",
                            "title": "Sources is a reference to the location of the application's manifests or chart",
                            "items": {
                              "type": "object",
                              "title": "ApplicationSource contains all required information about the source of an application",
                              "properties": {
                                "chart": {
                                  "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                  "type": "string"
                                },
                                "directory": {
                                  "type": "object",
                                  "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                  "properties": {
                                    "exclude": {
                                      "type": "string",
                                      "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                    },
                                    "include": {
                                      "type": "string",
                                      "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                    },
                                    "jsonnet": {
                                      "type": "object",
                                      "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                      "properties": {
                                        "extVars": {
                                          "type": "array",
                                          "title": "ExtVars is a list of Jsonnet External Variables",
                                          "items": {
                                            "type": "object",
                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                            "properties": {
                                              "code": {
                                                "type": "boolean"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "libs": {
                                          "type": "array",
                                          "title": "Additional library search dirs",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "tlas": {
                                          "type": "array",
                                          "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                          "items": {
                                            "type": "object",
                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                            "properties": {
                                              "code": {
                                                "type": "boolean"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "recurse": {
                                      "type": "boolean",
                                      "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "helm": {
                                  "type": "object",
                                  "title": "ApplicationSourceHelm holds helm specific options",
                                  "properties": {
                                    "fileParameters": {
                                      "type": "array",
                                      "title": "FileParameters are file parameters to the helm template",
                                      "items": {
                                        "type": "object",
                                        "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "title": "Name is the name of the Helm parameter"
                                          },
                                          "path": {
                                            "type": "string",
                                            "title": "Path is the path to the file containing the values for the Helm parameter"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "ignoreMissingValueFiles": {
                                      "type": "boolean",
                                      "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                    },
                                    "parameters": {
                                      "type": "array",
                                      "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                      "items": {
                                        "type": "object",
                                        "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                        "properties": {
                                          "forceString": {
                                            "type": "boolean",
                                            "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                          },
                                          "name": {
                                            "type": "string",
                                            "title": "Name is the name of the Helm parameter"
                                          },
                                          "value": {
                                            "type": "string",
                                            "title": "Value is the value for the Helm parameter"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "passCredentials": {
                                      "type": "boolean",
                                      "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                    },
                                    "releaseName": {
                                      "type": "string",
                                      "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                    },
                                    "skipCrds": {
                                      "type": "boolean",
                                      "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                    },
                                    "valueFiles": {
                                      "type": "array",
                                      "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "values": {
                                      "type": "string",
                                      "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                                    },
                                    "version": {
                                      "type": "string",
                                      "title": "Version is the Helm version to use for templating (\"3\")"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "kustomize": {
                                  "type": "object",
                                  "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                  "properties": {
                                    "commonAnnotations": {
                                      "type": "object",
                                      "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "commonAnnotationsEnvsubst": {
                                      "type": "boolean",
                                      "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                    },
                                    "commonLabels": {
                                      "type": "object",
                                      "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "forceCommonAnnotations": {
                                      "type": "boolean",
                                      "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                    },
                                    "forceCommonLabels": {
                                      "type": "boolean",
                                      "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                    },
                                    "images": {
                                      "type": "array",
                                      "title": "Images is a list of Kustomize image override specifications",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "namePrefix": {
                                      "type": "string",
                                      "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                    },
                                    "nameSuffix": {
                                      "type": "string",
                                      "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                    },
                                    "replicas": {
                                      "type": "array",
                                      "title": "Replicas is a list of Kustomize Replicas override specifications",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "count": {
                                            "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                            "type": "object",
                                            "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                            "properties": {
                                              "intVal": {
                                                "type": "integer",
                                                "format": "int32"
                                              },
                                              "strVal": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "format": "int64"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "name": {
                                            "type": "string",
                                            "title": "Name of Deployment or StatefulSet"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "version": {
                                      "type": "string",
                                      "title": "Version controls which version of Kustomize to use for rendering manifests"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "path": {
                                  "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                  "type": "string"
                                },
                                "plugin": {
                                  "type": "object",
                                  "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                  "properties": {
                                    "env": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "title": "EnvEntry represents an entry in the application's environment",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "title": "Name is the name of the variable, usually expressed in uppercase"
                                          },
                                          "value": {
                                            "type": "string",
                                            "title": "Value is the value of the variable"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "parameters": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "array": {
                                            "description": "Array is the value of an array type parameter.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "map": {
                                            "description": "Map is the value of a map type parameter.",
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "name": {
                                            "description": "Name is the name identifying a parameter.",
                                            "type": "string"
                                          },
                                          "string": {
                                            "description": "String_ is the value of a string type parameter.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "ref": {
                                  "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                  "type": "string"
                                },
                                "repoURL": {
                                  "type": "string",
                                  "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                },
                                "targetRevision": {
                                  "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "syncPolicy": {
                            "type": "object",
                            "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                            "properties": {
                              "automated": {
                                "type": "object",
                                "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                                "properties": {
                                  "allowEmpty": {
                                    "type": "boolean",
                                    "title": "AllowEmpty allows apps have zero live resources (default: false)"
                                  },
                                  "prune": {
                                    "type": "boolean",
                                    "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                                  },
                                  "selfHeal": {
                                    "type": "boolean",
                                    "title": "SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "managedNamespaceMetadata": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "labels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "retry": {
                                "type": "object",
                                "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                                "properties": {
                                  "backoff": {
                                    "type": "object",
                                    "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                                    "properties": {
                                      "duration": {
                                        "type": "string",
                                        "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                                      },
                                      "factor": {
                                        "type": "string",
                                        "format": "int64",
                                        "title": "Factor is a factor to multiply the base duration after each failed retry"
                                      },
                                      "maxDuration": {
                                        "type": "string",
                                        "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "limit": {
                                    "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                    "type": "string",
                                    "format": "int64"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "syncOptions": {
                                "type": "array",
                                "title": "Options allow you to specify whole app sync-options",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "list": {
                "type": "object",
                "title": "ListGenerator include items info",
                "properties": {
                  "elements": {
                    "type": "array",
                    "items": {
                      "description": "JSON represents any valid JSON value.\nThese types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.",
                      "type": "object",
                      "properties": {
                        "raw": {
                          "type": "string",
                          "format": "byte"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "elementsYaml": {
                    "type": "string"
                  },
                  "template": {
                    "type": "object",
                    "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
                    "properties": {
                      "metadata": {
                        "type": "object",
                        "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
                        "properties": {
                          "annotations": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "finalizers": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "namespace": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "spec": {
                        "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
                        "type": "object",
                        "properties": {
                          "destination": {
                            "type": "object",
                            "title": "ApplicationDestination holds information about the application's destination",
                            "properties": {
                              "name": {
                                "type": "string",
                                "title": "Name is an alternate way of specifying the target cluster by its symbolic name"
                              },
                              "namespace": {
                                "type": "string",
                                "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                              },
                              "server": {
                                "type": "string",
                                "title": "Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API"
                              }
                            },
                            "additionalProperties": false
                          },
                          "ignoreDifferences": {
                            "type": "array",
                            "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                            "items": {
                              "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                              "type": "object",
                              "properties": {
                                "group": {
                                  "type": "string"
                                },
                                "jqPathExpressions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "jsonPointers": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "kind": {
                                  "type": "string"
                                },
                                "managedFieldsManagers": {
                                  "type": "array",
                                  "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "name": {
                                  "type": "string"
                                },
                                "namespace": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "info": {
                            "type": "array",
                            "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "project": {
                            "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                            "type": "string"
                          },
                          "revisionHistoryLimit": {
                            "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                            "type": "string",
                            "format": "int64"
                          },
                          "source": {
                            "type": "object",
                            "title": "ApplicationSource contains all required information about the source of an application",
                            "properties": {
                              "chart": {
                                "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                "type": "string"
                              },
                              "directory": {
                                "type": "object",
                                "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                "properties": {
                                  "exclude": {
                                    "type": "string",
                                    "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                  },
                                  "include": {
                                    "type": "string",
                                    "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                  },
                                  "jsonnet": {
                                    "type": "object",
                                    "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                    "properties": {
                                      "extVars": {
                                        "type": "array",
                                        "title": "ExtVars is a list of Jsonnet External Variables",
                                        "items": {
                                          "type": "object",
                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                          "properties": {
                                            "code": {
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "libs": {
                                        "type": "array",
                                        "title": "Additional library search dirs",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "tlas": {
                                        "type": "array",
                                        "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                        "items": {
                                          "type": "object",
                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                          "properties": {
                                            "code": {
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "recurse": {
                                    "type": "boolean",
                                    "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "helm": {
                                "type": "object",
                                "title": "ApplicationSourceHelm holds helm specific options",
                                "properties": {
                                  "fileParameters": {
                                    "type": "array",
                                    "title": "FileParameters are file parameters to the helm template",
                                    "items": {
                                      "type": "object",
                                      "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the Helm parameter"
                                        },
                                        "path": {
                                          "type": "string",
                                          "title": "Path is the path to the file containing the values for the Helm parameter"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "ignoreMissingValueFiles": {
                                    "type": "boolean",
                                    "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                  },
                                  "parameters": {
                                    "type": "array",
                                    "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                    "items": {
                                      "type": "object",
                                      "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                      "properties": {
                                        "forceString": {
                                          "type": "boolean",
                                          "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                        },
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the Helm parameter"
                                        },
                                        "value": {
                                          "type": "string",
                                          "title": "Value is the value for the Helm parameter"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "passCredentials": {
                                    "type": "boolean",
                                    "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                  },
                                  "releaseName": {
                                    "type": "string",
                                    "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                  },
                                  "skipCrds": {
                                    "type": "boolean",
                                    "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                  },
                                  "valueFiles": {
                                    "type": "array",
                                    "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "values": {
                                    "type": "string",
                                    "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                                  },
                                  "version": {
                                    "type": "string",
                                    "title": "Version is the Helm version to use for templating (\"3\")"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "kustomize": {
                                "type": "object",
                                "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                "properties": {
                                  "commonAnnotations": {
                                    "type": "object",
                                    "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "commonAnnotationsEnvsubst": {
                                    "type": "boolean",
                                    "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                  },
                                  "commonLabels": {
                                    "type": "object",
                                    "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "forceCommonAnnotations": {
                                    "type": "boolean",
                                    "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                  },
                                  "forceCommonLabels": {
                                    "type": "boolean",
                                    "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                  },
                                  "images": {
                                    "type": "array",
                                    "title": "Images is a list of Kustomize image override specifications",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "namePrefix": {
                                    "type": "string",
                                    "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                  },
                                  "nameSuffix": {
                                    "type": "string",
                                    "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                  },
                                  "namespace": {
                                    "type": "string",
                                    "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                  },
                                  "replicas": {
                                    "type": "array",
                                    "title": "Replicas is a list of Kustomize Replicas override specifications",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "count": {
                                          "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                          "type": "object",
                                          "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                          "properties": {
                                            "intVal": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "strVal": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "format": "int64"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "name": {
                                          "type": "string",
                                          "title": "Name of Deployment or StatefulSet"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "version": {
                                    "type": "string",
                                    "title": "Version controls which version of Kustomize to use for rendering manifests"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "path": {
                                "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                "type": "string"
                              },
                              "plugin": {
                                "type": "object",
                                "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                "properties": {
                                  "env": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "title": "EnvEntry represents an entry in the application's environment",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the variable, usually expressed in uppercase"
                                        },
                                        "value": {
                                          "type": "string",
                                          "title": "Value is the value of the variable"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "parameters": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "array": {
                                          "description": "Array is the value of an array type parameter.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "map": {
                                          "description": "Map is the value of a map type parameter.",
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "name": {
                                          "description": "Name is the name identifying a parameter.",
                                          "type": "string"
                                        },
                                        "string": {
                                          "description": "String_ is the value of a string type parameter.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "ref": {
                                "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                "type": "string"
                              },
                              "repoURL": {
                                "type": "string",
                                "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                              },
                              "targetRevision": {
                                "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "sources": {
                            "type": "array",
                            "title": "Sources is a reference to the location of the application's manifests or chart",
                            "items": {
                              "type": "object",
                              "title": "ApplicationSource contains all required information about the source of an application",
                              "properties": {
                                "chart": {
                                  "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                  "type": "string"
                                },
                                "directory": {
                                  "type": "object",
                                  "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                  "properties": {
                                    "exclude": {
                                      "type": "string",
                                      "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                    },
                                    "include": {
                                      "type": "string",
                                      "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                    },
                                    "jsonnet": {
                                      "type": "object",
                                      "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                      "properties": {
                                        "extVars": {
                                          "type": "array",
                                          "title": "ExtVars is a list of Jsonnet External Variables",
                                          "items": {
                                            "type": "object",
                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                            "properties": {
                                              "code": {
                                                "type": "boolean"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "libs": {
                                          "type": "array",
                                          "title": "Additional library search dirs",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "tlas": {
                                          "type": "array",
                                          "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                          "items": {
                                            "type": "object",
                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                            "properties": {
                                              "code": {
                                                "type": "boolean"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "recurse": {
                                      "type": "boolean",
                                      "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "helm": {
                                  "type": "object",
                                  "title": "ApplicationSourceHelm holds helm specific options",
                                  "properties": {
                                    "fileParameters": {
                                      "type": "array",
                                      "title": "FileParameters are file parameters to the helm template",
                                      "items": {
                                        "type": "object",
                                        "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "title": "Name is the name of the Helm parameter"
                                          },
                                          "path": {
                                            "type": "string",
                                            "title": "Path is the path to the file containing the values for the Helm parameter"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "ignoreMissingValueFiles": {
                                      "type": "boolean",
                                      "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                    },
                                    "parameters": {
                                      "type": "array",
                                      "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                      "items": {
                                        "type": "object",
                                        "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                        "properties": {
                                          "forceString": {
                                            "type": "boolean",
                                            "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                          },
                                          "name": {
                                            "type": "string",
                                            "title": "Name is the name of the Helm parameter"
                                          },
                                          "value": {
                                            "type": "string",
                                            "title": "Value is the value for the Helm parameter"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "passCredentials": {
                                      "type": "boolean",
                                      "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                    },
                                    "releaseName": {
                                      "type": "string",
                                      "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                    },
                                    "skipCrds": {
                                      "type": "boolean",
                                      "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                    },
                                    "valueFiles": {
                                      "type": "array",
                                      "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "values": {
                                      "type": "string",
                                      "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                                    },
                                    "version": {
                                      "type": "string",
                                      "title": "Version is the Helm version to use for templating (\"3\")"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "kustomize": {
                                  "type": "object",
                                  "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                  "properties": {
                                    "commonAnnotations": {
                                      "type": "object",
                                      "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "commonAnnotationsEnvsubst": {
                                      "type": "boolean",
                                      "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                    },
                                    "commonLabels": {
                                      "type": "object",
                                      "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "forceCommonAnnotations": {
                                      "type": "boolean",
                                      "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                    },
                                    "forceCommonLabels": {
                                      "type": "boolean",
                                      "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                    },
                                    "images": {
                                      "type": "array",
                                      "title": "Images is a list of Kustomize image override specifications",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "namePrefix": {
                                      "type": "string",
                                      "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                    },
                                    "nameSuffix": {
                                      "type": "string",
                                      "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                    },
                                    "replicas": {
                                      "type": "array",
                                      "title": "Replicas is a list of Kustomize Replicas override specifications",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "count": {
                                            "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                            "type": "object",
                                            "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                            "properties": {
                                              "intVal": {
                                                "type": "integer",
                                                "format": "int32"
                                              },
                                              "strVal": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "format": "int64"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "name": {
                                            "type": "string",
                                            "title": "Name of Deployment or StatefulSet"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "version": {
                                      "type": "string",
                                      "title": "Version controls which version of Kustomize to use for rendering manifests"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "path": {
                                  "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                  "type": "string"
                                },
                                "plugin": {
                                  "type": "object",
                                  "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                  "properties": {
                                    "env": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "title": "EnvEntry represents an entry in the application's environment",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "title": "Name is the name of the variable, usually expressed in uppercase"
                                          },
                                          "value": {
                                            "type": "string",
                                            "title": "Value is the value of the variable"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "parameters": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "array": {
                                            "description": "Array is the value of an array type parameter.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "map": {
                                            "description": "Map is the value of a map type parameter.",
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "name": {
                                            "description": "Name is the name identifying a parameter.",
                                            "type": "string"
                                          },
                                          "string": {
                                            "description": "String_ is the value of a string type parameter.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "ref": {
                                  "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                  "type": "string"
                                },
                                "repoURL": {
                                  "type": "string",
                                  "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                },
                                "targetRevision": {
                                  "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "syncPolicy": {
                            "type": "object",
                            "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                            "properties": {
                              "automated": {
                                "type": "object",
                                "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                                "properties": {
                                  "allowEmpty": {
                                    "type": "boolean",
                                    "title": "AllowEmpty allows apps have zero live resources (default: false)"
                                  },
                                  "prune": {
                                    "type": "boolean",
                                    "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                                  },
                                  "selfHeal": {
                                    "type": "boolean",
                                    "title": "SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "managedNamespaceMetadata": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "labels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "retry": {
                                "type": "object",
                                "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                                "properties": {
                                  "backoff": {
                                    "type": "object",
                                    "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                                    "properties": {
                                      "duration": {
                                        "type": "string",
                                        "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                                      },
                                      "factor": {
                                        "type": "string",
                                        "format": "int64",
                                        "title": "Factor is a factor to multiply the base duration after each failed retry"
                                      },
                                      "maxDuration": {
                                        "type": "string",
                                        "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "limit": {
                                    "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                    "type": "string",
                                    "format": "int64"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "syncOptions": {
                                "type": "array",
                                "title": "Options allow you to specify whole app sync-options",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "matrix": {
                "description": "JSON represents any valid JSON value.\nThese types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.",
                "type": "object",
                "properties": {
                  "raw": {
                    "type": "string",
                    "format": "byte"
                  }
                },
                "additionalProperties": false
              },
              "merge": {
                "description": "JSON represents any valid JSON value.\nThese types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.",
                "type": "object",
                "properties": {
                  "raw": {
                    "type": "string",
                    "format": "byte"
                  }
                },
                "additionalProperties": false
              },
              "pullRequest": {
                "description": "PullRequestGenerator defines a generator that scrapes a PullRequest API to find candidate pull requests.",
                "type": "object",
                "properties": {
                  "bitbucketServer": {
                    "description": "PullRequestGenerator defines connection info specific to BitbucketServer.",
                    "type": "object",
                    "properties": {
                      "api": {
                        "description": "The Bitbucket REST API URL to talk to e.g. https://bitbucket.org/rest Required.",
                        "type": "string"
                      },
                      "basicAuth": {
                        "description": "BasicAuthBitbucketServer defines the username/(password or personal access token) for Basic auth.",
                        "type": "object",
                        "properties": {
                          "passwordRef": {
                            "description": "Utility struct for a reference to a secret key.",
                            "type": "object",
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "secretName": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "username": {
                            "type": "string",
                            "title": "Username for Basic auth"
                          }
                        },
                        "additionalProperties": false
                      },
                      "project": {
                        "description": "Project to scan. Required.",
                        "type": "string"
                      },
                      "repo": {
                        "description": "Repo name to scan. Required.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "filters": {
                    "description": "Filters for which pull requests should be considered.",
                    "type": "array",
                    "items": {
                      "description": "PullRequestGeneratorFilter is a single pull request filter.\nIf multiple filter types are set on a single struct, they will be AND'd together. All filters must\npass for a pull request to be included.",
                      "type": "object",
                      "properties": {
                        "branchMatch": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "gitea": {
                    "description": "PullRequestGenerator defines connection info specific to Gitea.",
                    "type": "object",
                    "properties": {
                      "api": {
                        "type": "string",
                        "title": "The Gitea API URL to talk to. Required"
                      },
                      "insecure": {
                        "description": "Allow insecure tls, for self-signed certificates; default: false.",
                        "type": "boolean"
                      },
                      "owner": {
                        "description": "Gitea org or user to scan. Required.",
                        "type": "string"
                      },
                      "repo": {
                        "description": "Gitea repo name to scan. Required.",
                        "type": "string"
                      },
                      "tokenRef": {
                        "description": "Utility struct for a reference to a secret key.",
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "secretName": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "github": {
                    "description": "PullRequestGenerator defines connection info specific to GitHub.",
                    "type": "object",
                    "properties": {
                      "api": {
                        "description": "The GitHub API URL to talk to. If blank, use https://api.github.com/.",
                        "type": "string"
                      },
                      "appSecretName": {
                        "description": "AppSecretName is a reference to a GitHub App repo-creds secret with permission to access pull requests.",
                        "type": "string"
                      },
                      "labels": {
                        "type": "array",
                        "title": "Labels is used to filter the PRs that you want to target",
                        "items": {
                          "type": "string"
                        }
                      },
                      "owner": {
                        "description": "GitHub org or user to scan. Required.",
                        "type": "string"
                      },
                      "repo": {
                        "description": "GitHub repo name to scan. Required.",
                        "type": "string"
                      },
                      "tokenRef": {
                        "description": "Utility struct for a reference to a secret key.",
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "secretName": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "gitlab": {
                    "description": "PullRequestGeneratorGitLab defines connection info specific to GitLab.",
                    "type": "object",
                    "properties": {
                      "api": {
                        "description": "The GitLab API URL to talk to. If blank, uses https://gitlab.com/.",
                        "type": "string"
                      },
                      "labels": {
                        "type": "array",
                        "title": "Labels is used to filter the MRs that you want to target",
                        "items": {
                          "type": "string"
                        }
                      },
                      "project": {
                        "description": "GitLab project to scan. Required.",
                        "type": "string"
                      },
                      "pullRequestState": {
                        "type": "string",
                        "title": "PullRequestState is an additional MRs filter to get only those with a certain state. Default: \"\" (all states)"
                      },
                      "tokenRef": {
                        "description": "Utility struct for a reference to a secret key.",
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "secretName": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "requeueAfterSeconds": {
                    "description": "Standard parameters.",
                    "type": "string",
                    "format": "int64"
                  },
                  "template": {
                    "type": "object",
                    "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
                    "properties": {
                      "metadata": {
                        "type": "object",
                        "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
                        "properties": {
                          "annotations": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "finalizers": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "namespace": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "spec": {
                        "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
                        "type": "object",
                        "properties": {
                          "destination": {
                            "type": "object",
                            "title": "ApplicationDestination holds information about the application's destination",
                            "properties": {
                              "name": {
                                "type": "string",
                                "title": "Name is an alternate way of specifying the target cluster by its symbolic name"
                              },
                              "namespace": {
                                "type": "string",
                                "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                              },
                              "server": {
                                "type": "string",
                                "title": "Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API"
                              }
                            },
                            "additionalProperties": false
                          },
                          "ignoreDifferences": {
                            "type": "array",
                            "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                            "items": {
                              "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                              "type": "object",
                              "properties": {
                                "group": {
                                  "type": "string"
                                },
                                "jqPathExpressions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "jsonPointers": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "kind": {
                                  "type": "string"
                                },
                                "managedFieldsManagers": {
                                  "type": "array",
                                  "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "name": {
                                  "type": "string"
                                },
                                "namespace": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "info": {
                            "type": "array",
                            "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "project": {
                            "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                            "type": "string"
                          },
                          "revisionHistoryLimit": {
                            "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                            "type": "string",
                            "format": "int64"
                          },
                          "source": {
                            "type": "object",
                            "title": "ApplicationSource contains all required information about the source of an application",
                            "properties": {
                              "chart": {
                                "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                "type": "string"
                              },
                              "directory": {
                                "type": "object",
                                "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                "properties": {
                                  "exclude": {
                                    "type": "string",
                                    "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                  },
                                  "include": {
                                    "type": "string",
                                    "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                  },
                                  "jsonnet": {
                                    "type": "object",
                                    "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                    "properties": {
                                      "extVars": {
                                        "type": "array",
                                        "title": "ExtVars is a list of Jsonnet External Variables",
                                        "items": {
                                          "type": "object",
                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                          "properties": {
                                            "code": {
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "libs": {
                                        "type": "array",
                                        "title": "Additional library search dirs",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "tlas": {
                                        "type": "array",
                                        "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                        "items": {
                                          "type": "object",
                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                          "properties": {
                                            "code": {
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "recurse": {
                                    "type": "boolean",
                                    "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "helm": {
                                "type": "object",
                                "title": "ApplicationSourceHelm holds helm specific options",
                                "properties": {
                                  "fileParameters": {
                                    "type": "array",
                                    "title": "FileParameters are file parameters to the helm template",
                                    "items": {
                                      "type": "object",
                                      "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the Helm parameter"
                                        },
                                        "path": {
                                          "type": "string",
                                          "title": "Path is the path to the file containing the values for the Helm parameter"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "ignoreMissingValueFiles": {
                                    "type": "boolean",
                                    "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                  },
                                  "parameters": {
                                    "type": "array",
                                    "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                    "items": {
                                      "type": "object",
                                      "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                      "properties": {
                                        "forceString": {
                                          "type": "boolean",
                                          "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                        },
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the Helm parameter"
                                        },
                                        "value": {
                                          "type": "string",
                                          "title": "Value is the value for the Helm parameter"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "passCredentials": {
                                    "type": "boolean",
                                    "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                  },
                                  "releaseName": {
                                    "type": "string",
                                    "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                  },
                                  "skipCrds": {
                                    "type": "boolean",
                                    "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                  },
                                  "valueFiles": {
                                    "type": "array",
                                    "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "values": {
                                    "type": "string",
                                    "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                                  },
                                  "version": {
                                    "type": "string",
                                    "title": "Version is the Helm version to use for templating (\"3\")"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "kustomize": {
                                "type": "object",
                                "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                "properties": {
                                  "commonAnnotations": {
                                    "type": "object",
                                    "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "commonAnnotationsEnvsubst": {
                                    "type": "boolean",
                                    "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                  },
                                  "commonLabels": {
                                    "type": "object",
                                    "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "forceCommonAnnotations": {
                                    "type": "boolean",
                                    "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                  },
                                  "forceCommonLabels": {
                                    "type": "boolean",
                                    "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                  },
                                  "images": {
                                    "type": "array",
                                    "title": "Images is a list of Kustomize image override specifications",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "namePrefix": {
                                    "type": "string",
                                    "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                  },
                                  "nameSuffix": {
                                    "type": "string",
                                    "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                  },
                                  "namespace": {
                                    "type": "string",
                                    "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                  },
                                  "replicas": {
                                    "type": "array",
                                    "title": "Replicas is a list of Kustomize Replicas override specifications",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "count": {
                                          "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                          "type": "object",
                                          "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                          "properties": {
                                            "intVal": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "strVal": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "format": "int64"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "name": {
                                          "type": "string",
                                          "title": "Name of Deployment or StatefulSet"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "version": {
                                    "type": "string",
                                    "title": "Version controls which version of Kustomize to use for rendering manifests"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "path": {
                                "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                "type": "string"
                              },
                              "plugin": {
                                "type": "object",
                                "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                "properties": {
                                  "env": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "title": "EnvEntry represents an entry in the application's environment",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the variable, usually expressed in uppercase"
                                        },
                                        "value": {
                                          "type": "string",
                                          "title": "Value is the value of the variable"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "parameters": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "array": {
                                          "description": "Array is the value of an array type parameter.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "map": {
                                          "description": "Map is the value of a map type parameter.",
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "name": {
                                          "description": "Name is the name identifying a parameter.",
                                          "type": "string"
                                        },
                                        "string": {
                                          "description": "String_ is the value of a string type parameter.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "ref": {
                                "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                "type": "string"
                              },
                              "repoURL": {
                                "type": "string",
                                "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                              },
                              "targetRevision": {
                                "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "sources": {
                            "type": "array",
                            "title": "Sources is a reference to the location of the application's manifests or chart",
                            "items": {
                              "type": "object",
                              "title": "ApplicationSource contains all required information about the source of an application",
                              "properties": {
                                "chart": {
                                  "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                  "type": "string"
                                },
                                "directory": {
                                  "type": "object",
                                  "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                  "properties": {
                                    "exclude": {
                                      "type": "string",
                                      "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                    },
                                    "include": {
                                      "type": "string",
                                      "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                    },
                                    "jsonnet": {
                                      "type": "object",
                                      "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                      "properties": {
                                        "extVars": {
                                          "type": "array",
                                          "title": "ExtVars is a list of Jsonnet External Variables",
                                          "items": {
                                            "type": "object",
                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                            "properties": {
                                              "code": {
                                                "type": "boolean"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "libs": {
                                          "type": "array",
                                          "title": "Additional library search dirs",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "tlas": {
                                          "type": "array",
                                          "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                          "items": {
                                            "type": "object",
                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                            "properties": {
                                              "code": {
                                                "type": "boolean"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "recurse": {
                                      "type": "boolean",
                                      "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "helm": {
                                  "type": "object",
                                  "title": "ApplicationSourceHelm holds helm specific options",
                                  "properties": {
                                    "fileParameters": {
                                      "type": "array",
                                      "title": "FileParameters are file parameters to the helm template",
                                      "items": {
                                        "type": "object",
                                        "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "title": "Name is the name of the Helm parameter"
                                          },
                                          "path": {
                                            "type": "string",
                                            "title": "Path is the path to the file containing the values for the Helm parameter"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "ignoreMissingValueFiles": {
                                      "type": "boolean",
                                      "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                    },
                                    "parameters": {
                                      "type": "array",
                                      "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                      "items": {
                                        "type": "object",
                                        "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                        "properties": {
                                          "forceString": {
                                            "type": "boolean",
                                            "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                          },
                                          "name": {
                                            "type": "string",
                                            "title": "Name is the name of the Helm parameter"
                                          },
                                          "value": {
                                            "type": "string",
                                            "title": "Value is the value for the Helm parameter"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "passCredentials": {
                                      "type": "boolean",
                                      "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                    },
                                    "releaseName": {
                                      "type": "string",
                                      "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                    },
                                    "skipCrds": {
                                      "type": "boolean",
                                      "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                    },
                                    "valueFiles": {
                                      "type": "array",
                                      "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "values": {
                                      "type": "string",
                                      "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                                    },
                                    "version": {
                                      "type": "string",
                                      "title": "Version is the Helm version to use for templating (\"3\")"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "kustomize": {
                                  "type": "object",
                                  "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                  "properties": {
                                    "commonAnnotations": {
                                      "type": "object",
                                      "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "commonAnnotationsEnvsubst": {
                                      "type": "boolean",
                                      "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                    },
                                    "commonLabels": {
                                      "type": "object",
                                      "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "forceCommonAnnotations": {
                                      "type": "boolean",
                                      "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                    },
                                    "forceCommonLabels": {
                                      "type": "boolean",
                                      "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                    },
                                    "images": {
                                      "type": "array",
                                      "title": "Images is a list of Kustomize image override specifications",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "namePrefix": {
                                      "type": "string",
                                      "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                    },
                                    "nameSuffix": {
                                      "type": "string",
                                      "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                    },
                                    "replicas": {
                                      "type": "array",
                                      "title": "Replicas is a list of Kustomize Replicas override specifications",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "count": {
                                            "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                            "type": "object",
                                            "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                            "properties": {
                                              "intVal": {
                                                "type": "integer",
                                                "format": "int32"
                                              },
                                              "strVal": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "format": "int64"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "name": {
                                            "type": "string",
                                            "title": "Name of Deployment or StatefulSet"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "version": {
                                      "type": "string",
                                      "title": "Version controls which version of Kustomize to use for rendering manifests"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "path": {
                                  "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                  "type": "string"
                                },
                                "plugin": {
                                  "type": "object",
                                  "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                  "properties": {
                                    "env": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "title": "EnvEntry represents an entry in the application's environment",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "title": "Name is the name of the variable, usually expressed in uppercase"
                                          },
                                          "value": {
                                            "type": "string",
                                            "title": "Value is the value of the variable"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "parameters": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "array": {
                                            "description": "Array is the value of an array type parameter.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "map": {
                                            "description": "Map is the value of a map type parameter.",
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "name": {
                                            "description": "Name is the name identifying a parameter.",
                                            "type": "string"
                                          },
                                          "string": {
                                            "description": "String_ is the value of a string type parameter.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "ref": {
                                  "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                  "type": "string"
                                },
                                "repoURL": {
                                  "type": "string",
                                  "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                },
                                "targetRevision": {
                                  "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "syncPolicy": {
                            "type": "object",
                            "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                            "properties": {
                              "automated": {
                                "type": "object",
                                "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                                "properties": {
                                  "allowEmpty": {
                                    "type": "boolean",
                                    "title": "AllowEmpty allows apps have zero live resources (default: false)"
                                  },
                                  "prune": {
                                    "type": "boolean",
                                    "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                                  },
                                  "selfHeal": {
                                    "type": "boolean",
                                    "title": "SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "managedNamespaceMetadata": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "labels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "retry": {
                                "type": "object",
                                "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                                "properties": {
                                  "backoff": {
                                    "type": "object",
                                    "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                                    "properties": {
                                      "duration": {
                                        "type": "string",
                                        "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                                      },
                                      "factor": {
                                        "type": "string",
                                        "format": "int64",
                                        "title": "Factor is a factor to multiply the base duration after each failed retry"
                                      },
                                      "maxDuration": {
                                        "type": "string",
                                        "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "limit": {
                                    "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                    "type": "string",
                                    "format": "int64"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "syncOptions": {
                                "type": "array",
                                "title": "Options allow you to specify whole app sync-options",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "scmProvider": {
                "description": "SCMProviderGenerator defines a generator that scrapes a SCMaaS API to find candidate repos.",
                "type": "object",
                "properties": {
                  "azureDevOps": {
                    "description": "SCMProviderGeneratorAzureDevOps defines connection info specific to Azure DevOps.",
                    "type": "object",
                    "properties": {
                      "accessTokenRef": {
                        "description": "Utility struct for a reference to a secret key.",
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "secretName": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "allBranches": {
                        "description": "Scan all branches instead of just the default branch.",
                        "type": "boolean"
                      },
                      "api": {
                        "description": "The URL to Azure DevOps. If blank, use https://dev.azure.com.",
                        "type": "string"
                      },
                      "organization": {
                        "description": "Azure Devops organization. Required. E.g. \"my-organization\".",
                        "type": "string"
                      },
                      "teamProject": {
                        "description": "Azure Devops team project. Required. E.g. \"my-team\".",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "bitbucket": {
                    "description": "SCMProviderGeneratorBitbucket defines connection info specific to Bitbucket Cloud (API version 2).",
                    "type": "object",
                    "properties": {
                      "allBranches": {
                        "description": "Scan all branches instead of just the main branch.",
                        "type": "boolean"
                      },
                      "appPasswordRef": {
                        "description": "Utility struct for a reference to a secret key.",
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "secretName": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "owner": {
                        "description": "Bitbucket workspace to scan. Required.",
                        "type": "string"
                      },
                      "user": {
                        "type": "string",
                        "title": "Bitbucket user to use when authenticating.  Should have a \"member\" role to be able to read all repositories and branches.  Required"
                      }
                    },
                    "additionalProperties": false
                  },
                  "bitbucketServer": {
                    "description": "SCMProviderGeneratorBitbucketServer defines connection info specific to Bitbucket Server.",
                    "type": "object",
                    "properties": {
                      "allBranches": {
                        "description": "Scan all branches instead of just the default branch.",
                        "type": "boolean"
                      },
                      "api": {
                        "description": "The Bitbucket Server REST API URL to talk to. Required.",
                        "type": "string"
                      },
                      "basicAuth": {
                        "description": "BasicAuthBitbucketServer defines the username/(password or personal access token) for Basic auth.",
                        "type": "object",
                        "properties": {
                          "passwordRef": {
                            "description": "Utility struct for a reference to a secret key.",
                            "type": "object",
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "secretName": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "username": {
                            "type": "string",
                            "title": "Username for Basic auth"
                          }
                        },
                        "additionalProperties": false
                      },
                      "project": {
                        "description": "Project to scan. Required.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "cloneProtocol": {
                    "description": "Which protocol to use for the SCM URL. Default is provider-specific but ssh if possible. Not all providers\nnecessarily support all protocols.",
                    "type": "string"
                  },
                  "filters": {
                    "description": "Filters for which repos should be considered.",
                    "type": "array",
                    "items": {
                      "description": "SCMProviderGeneratorFilter is a single repository filter.\nIf multiple filter types are set on a single struct, they will be AND'd together. All filters must\npass for a repo to be included.",
                      "type": "object",
                      "properties": {
                        "branchMatch": {
                          "description": "A regex which must match the branch name.",
                          "type": "string"
                        },
                        "labelMatch": {
                          "description": "A regex which must match at least one label.",
                          "type": "string"
                        },
                        "pathsDoNotExist": {
                          "description": "An array of paths, all of which must not exist.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "pathsExist": {
                          "description": "An array of paths, all of which must exist.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "repositoryMatch": {
                          "description": "A regex for repo names.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "gitea": {
                    "description": "SCMProviderGeneratorGitea defines a connection info specific to Gitea.",
                    "type": "object",
                    "properties": {
                      "allBranches": {
                        "description": "Scan all branches instead of just the default branch.",
                        "type": "boolean"
                      },
                      "api": {
                        "description": "The Gitea URL to talk to. For example https://gitea.mydomain.com/.",
                        "type": "string"
                      },
                      "insecure": {
                        "type": "boolean",
                        "title": "Allow self-signed TLS / Certificates; default: false"
                      },
                      "owner": {
                        "description": "Gitea organization or user to scan. Required.",
                        "type": "string"
                      },
                      "tokenRef": {
                        "description": "Utility struct for a reference to a secret key.",
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "secretName": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "github": {
                    "description": "SCMProviderGeneratorGithub defines connection info specific to GitHub.",
                    "type": "object",
                    "properties": {
                      "allBranches": {
                        "description": "Scan all branches instead of just the default branch.",
                        "type": "boolean"
                      },
                      "api": {
                        "description": "The GitHub API URL to talk to. If blank, use https://api.github.com/.",
                        "type": "string"
                      },
                      "appSecretName": {
                        "description": "AppSecretName is a reference to a GitHub App repo-creds secret.",
                        "type": "string"
                      },
                      "organization": {
                        "description": "GitHub org to scan. Required.",
                        "type": "string"
                      },
                      "tokenRef": {
                        "description": "Utility struct for a reference to a secret key.",
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "secretName": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "gitlab": {
                    "description": "SCMProviderGeneratorGitlab defines connection info specific to Gitlab.",
                    "type": "object",
                    "properties": {
                      "allBranches": {
                        "description": "Scan all branches instead of just the default branch.",
                        "type": "boolean"
                      },
                      "api": {
                        "description": "The Gitlab API URL to talk to.",
                        "type": "string"
                      },
                      "group": {
                        "description": "Gitlab group to scan. Required.  You can use either the project id (recommended) or the full namespaced path.",
                        "type": "string"
                      },
                      "includeSubgroups": {
                        "type": "boolean",
                        "title": "Recurse through subgroups (true) or scan only the base group (false).  Defaults to \"false\""
                      },
                      "tokenRef": {
                        "description": "Utility struct for a reference to a secret key.",
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "secretName": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "requeueAfterSeconds": {
                    "description": "Standard parameters.",
                    "type": "string",
                    "format": "int64"
                  },
                  "template": {
                    "type": "object",
                    "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
                    "properties": {
                      "metadata": {
                        "type": "object",
                        "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
                        "properties": {
                          "annotations": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "finalizers": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "namespace": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "spec": {
                        "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
                        "type": "object",
                        "properties": {
                          "destination": {
                            "type": "object",
                            "title": "ApplicationDestination holds information about the application's destination",
                            "properties": {
                              "name": {
                                "type": "string",
                                "title": "Name is an alternate way of specifying the target cluster by its symbolic name"
                              },
                              "namespace": {
                                "type": "string",
                                "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                              },
                              "server": {
                                "type": "string",
                                "title": "Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API"
                              }
                            },
                            "additionalProperties": false
                          },
                          "ignoreDifferences": {
                            "type": "array",
                            "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                            "items": {
                              "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                              "type": "object",
                              "properties": {
                                "group": {
                                  "type": "string"
                                },
                                "jqPathExpressions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "jsonPointers": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "kind": {
                                  "type": "string"
                                },
                                "managedFieldsManagers": {
                                  "type": "array",
                                  "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "name": {
                                  "type": "string"
                                },
                                "namespace": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "info": {
                            "type": "array",
                            "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "project": {
                            "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                            "type": "string"
                          },
                          "revisionHistoryLimit": {
                            "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                            "type": "string",
                            "format": "int64"
                          },
                          "source": {
                            "type": "object",
                            "title": "ApplicationSource contains all required information about the source of an application",
                            "properties": {
                              "chart": {
                                "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                "type": "string"
                              },
                              "directory": {
                                "type": "object",
                                "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                "properties": {
                                  "exclude": {
                                    "type": "string",
                                    "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                  },
                                  "include": {
                                    "type": "string",
                                    "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                  },
                                  "jsonnet": {
                                    "type": "object",
                                    "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                    "properties": {
                                      "extVars": {
                                        "type": "array",
                                        "title": "ExtVars is a list of Jsonnet External Variables",
                                        "items": {
                                          "type": "object",
                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                          "properties": {
                                            "code": {
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "libs": {
                                        "type": "array",
                                        "title": "Additional library search dirs",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "tlas": {
                                        "type": "array",
                                        "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                        "items": {
                                          "type": "object",
                                          "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                          "properties": {
                                            "code": {
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "recurse": {
                                    "type": "boolean",
                                    "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "helm": {
                                "type": "object",
                                "title": "ApplicationSourceHelm holds helm specific options",
                                "properties": {
                                  "fileParameters": {
                                    "type": "array",
                                    "title": "FileParameters are file parameters to the helm template",
                                    "items": {
                                      "type": "object",
                                      "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the Helm parameter"
                                        },
                                        "path": {
                                          "type": "string",
                                          "title": "Path is the path to the file containing the values for the Helm parameter"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "ignoreMissingValueFiles": {
                                    "type": "boolean",
                                    "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                  },
                                  "parameters": {
                                    "type": "array",
                                    "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                    "items": {
                                      "type": "object",
                                      "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                      "properties": {
                                        "forceString": {
                                          "type": "boolean",
                                          "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                        },
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the Helm parameter"
                                        },
                                        "value": {
                                          "type": "string",
                                          "title": "Value is the value for the Helm parameter"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "passCredentials": {
                                    "type": "boolean",
                                    "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                  },
                                  "releaseName": {
                                    "type": "string",
                                    "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                  },
                                  "skipCrds": {
                                    "type": "boolean",
                                    "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                  },
                                  "valueFiles": {
                                    "type": "array",
                                    "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "values": {
                                    "type": "string",
                                    "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                                  },
                                  "version": {
                                    "type": "string",
                                    "title": "Version is the Helm version to use for templating (\"3\")"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "kustomize": {
                                "type": "object",
                                "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                "properties": {
                                  "commonAnnotations": {
                                    "type": "object",
                                    "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "commonAnnotationsEnvsubst": {
                                    "type": "boolean",
                                    "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                  },
                                  "commonLabels": {
                                    "type": "object",
                                    "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "forceCommonAnnotations": {
                                    "type": "boolean",
                                    "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                  },
                                  "forceCommonLabels": {
                                    "type": "boolean",
                                    "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                  },
                                  "images": {
                                    "type": "array",
                                    "title": "Images is a list of Kustomize image override specifications",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "namePrefix": {
                                    "type": "string",
                                    "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                  },
                                  "nameSuffix": {
                                    "type": "string",
                                    "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                  },
                                  "namespace": {
                                    "type": "string",
                                    "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                  },
                                  "replicas": {
                                    "type": "array",
                                    "title": "Replicas is a list of Kustomize Replicas override specifications",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "count": {
                                          "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                          "type": "object",
                                          "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                          "properties": {
                                            "intVal": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "strVal": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "format": "int64"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "name": {
                                          "type": "string",
                                          "title": "Name of Deployment or StatefulSet"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "version": {
                                    "type": "string",
                                    "title": "Version controls which version of Kustomize to use for rendering manifests"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "path": {
                                "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                "type": "string"
                              },
                              "plugin": {
                                "type": "object",
                                "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                "properties": {
                                  "env": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "title": "EnvEntry represents an entry in the application's environment",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "title": "Name is the name of the variable, usually expressed in uppercase"
                                        },
                                        "value": {
                                          "type": "string",
                                          "title": "Value is the value of the variable"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "parameters": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "array": {
                                          "description": "Array is the value of an array type parameter.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "map": {
                                          "description": "Map is the value of a map type parameter.",
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "name": {
                                          "description": "Name is the name identifying a parameter.",
                                          "type": "string"
                                        },
                                        "string": {
                                          "description": "String_ is the value of a string type parameter.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "ref": {
                                "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                "type": "string"
                              },
                              "repoURL": {
                                "type": "string",
                                "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                              },
                              "targetRevision": {
                                "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "sources": {
                            "type": "array",
                            "title": "Sources is a reference to the location of the application's manifests or chart",
                            "items": {
                              "type": "object",
                              "title": "ApplicationSource contains all required information about the source of an application",
                              "properties": {
                                "chart": {
                                  "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                                  "type": "string"
                                },
                                "directory": {
                                  "type": "object",
                                  "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                                  "properties": {
                                    "exclude": {
                                      "type": "string",
                                      "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                                    },
                                    "include": {
                                      "type": "string",
                                      "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                                    },
                                    "jsonnet": {
                                      "type": "object",
                                      "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                                      "properties": {
                                        "extVars": {
                                          "type": "array",
                                          "title": "ExtVars is a list of Jsonnet External Variables",
                                          "items": {
                                            "type": "object",
                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                            "properties": {
                                              "code": {
                                                "type": "boolean"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "libs": {
                                          "type": "array",
                                          "title": "Additional library search dirs",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "tlas": {
                                          "type": "array",
                                          "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                          "items": {
                                            "type": "object",
                                            "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                            "properties": {
                                              "code": {
                                                "type": "boolean"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "recurse": {
                                      "type": "boolean",
                                      "title": "Recurse specifies whether to scan a directory recursively for manifests"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "helm": {
                                  "type": "object",
                                  "title": "ApplicationSourceHelm holds helm specific options",
                                  "properties": {
                                    "fileParameters": {
                                      "type": "array",
                                      "title": "FileParameters are file parameters to the helm template",
                                      "items": {
                                        "type": "object",
                                        "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "title": "Name is the name of the Helm parameter"
                                          },
                                          "path": {
                                            "type": "string",
                                            "title": "Path is the path to the file containing the values for the Helm parameter"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "ignoreMissingValueFiles": {
                                      "type": "boolean",
                                      "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                                    },
                                    "parameters": {
                                      "type": "array",
                                      "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                                      "items": {
                                        "type": "object",
                                        "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                                        "properties": {
                                          "forceString": {
                                            "type": "boolean",
                                            "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                          },
                                          "name": {
                                            "type": "string",
                                            "title": "Name is the name of the Helm parameter"
                                          },
                                          "value": {
                                            "type": "string",
                                            "title": "Value is the value for the Helm parameter"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "passCredentials": {
                                      "type": "boolean",
                                      "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                                    },
                                    "releaseName": {
                                      "type": "string",
                                      "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                                    },
                                    "skipCrds": {
                                      "type": "boolean",
                                      "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                                    },
                                    "valueFiles": {
                                      "type": "array",
                                      "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "values": {
                                      "type": "string",
                                      "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                                    },
                                    "version": {
                                      "type": "string",
                                      "title": "Version is the Helm version to use for templating (\"3\")"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "kustomize": {
                                  "type": "object",
                                  "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                                  "properties": {
                                    "commonAnnotations": {
                                      "type": "object",
                                      "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "commonAnnotationsEnvsubst": {
                                      "type": "boolean",
                                      "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                                    },
                                    "commonLabels": {
                                      "type": "object",
                                      "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "forceCommonAnnotations": {
                                      "type": "boolean",
                                      "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                                    },
                                    "forceCommonLabels": {
                                      "type": "boolean",
                                      "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                                    },
                                    "images": {
                                      "type": "array",
                                      "title": "Images is a list of Kustomize image override specifications",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "namePrefix": {
                                      "type": "string",
                                      "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                                    },
                                    "nameSuffix": {
                                      "type": "string",
                                      "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "title": "Namespace sets the namespace that Kustomize adds to all resources"
                                    },
                                    "replicas": {
                                      "type": "array",
                                      "title": "Replicas is a list of Kustomize Replicas override specifications",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "count": {
                                            "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                            "type": "object",
                                            "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                            "properties": {
                                              "intVal": {
                                                "type": "integer",
                                                "format": "int32"
                                              },
                                              "strVal": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "format": "int64"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "name": {
                                            "type": "string",
                                            "title": "Name of Deployment or StatefulSet"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "version": {
                                      "type": "string",
                                      "title": "Version controls which version of Kustomize to use for rendering manifests"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "path": {
                                  "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                                  "type": "string"
                                },
                                "plugin": {
                                  "type": "object",
                                  "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                                  "properties": {
                                    "env": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "title": "EnvEntry represents an entry in the application's environment",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "title": "Name is the name of the variable, usually expressed in uppercase"
                                          },
                                          "value": {
                                            "type": "string",
                                            "title": "Value is the value of the variable"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "parameters": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "array": {
                                            "description": "Array is the value of an array type parameter.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "map": {
                                            "description": "Map is the value of a map type parameter.",
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "name": {
                                            "description": "Name is the name identifying a parameter.",
                                            "type": "string"
                                          },
                                          "string": {
                                            "description": "String_ is the value of a string type parameter.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "ref": {
                                  "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                                  "type": "string"
                                },
                                "repoURL": {
                                  "type": "string",
                                  "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                                },
                                "targetRevision": {
                                  "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "syncPolicy": {
                            "type": "object",
                            "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                            "properties": {
                              "automated": {
                                "type": "object",
                                "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                                "properties": {
                                  "allowEmpty": {
                                    "type": "boolean",
                                    "title": "AllowEmpty allows apps have zero live resources (default: false)"
                                  },
                                  "prune": {
                                    "type": "boolean",
                                    "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                                  },
                                  "selfHeal": {
                                    "type": "boolean",
                                    "title": "SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "managedNamespaceMetadata": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "labels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "retry": {
                                "type": "object",
                                "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                                "properties": {
                                  "backoff": {
                                    "type": "object",
                                    "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                                    "properties": {
                                      "duration": {
                                        "type": "string",
                                        "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                                      },
                                      "factor": {
                                        "type": "string",
                                        "format": "int64",
                                        "title": "Factor is a factor to multiply the base duration after each failed retry"
                                      },
                                      "maxDuration": {
                                        "type": "string",
                                        "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "limit": {
                                    "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                    "type": "string",
                                    "format": "int64"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "syncOptions": {
                                "type": "array",
                                "title": "Options allow you to specify whole app sync-options",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "selector": {
                "type": "object",
                "title": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.\n+structType=atomic",
                "properties": {
                  "matchExpressions": {
                    "type": "array",
                    "title": "matchExpressions is a list of label selector requirements. The requirements are ANDed.\n+optional",
                    "items": {
                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "title": "key is the label key that the selector applies to.\n+patchMergeKey=key\n+patchStrategy=merge"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                          "type": "string"
                        },
                        "values": {
                          "type": "array",
                          "title": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.\n+optional",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "matchLabels": {
                    "type": "object",
                    "title": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n+optional",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "mergeKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "template": {
          "type": "object",
          "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
          "properties": {
            "metadata": {
              "type": "object",
              "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
              "properties": {
                "annotations": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "finalizers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "labels": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "spec": {
              "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
              "type": "object",
              "properties": {
                "destination": {
                  "type": "object",
                  "title": "ApplicationDestination holds information about the application's destination",
                  "properties": {
                    "name": {
                      "type": "string",
                      "title": "Name is an alternate way of specifying the target cluster by its symbolic name"
                    },
                    "namespace": {
                      "type": "string",
                      "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                    },
                    "server": {
                      "type": "string",
                      "title": "Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API"
                    }
                  },
                  "additionalProperties": false
                },
                "ignoreDifferences": {
                  "type": "array",
                  "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                  "items": {
                    "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "string"
                      },
                      "jqPathExpressions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "jsonPointers": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "kind": {
                        "type": "string"
                      },
                      "managedFieldsManagers": {
                        "type": "array",
                        "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                        "items": {
                          "type": "string"
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "namespace": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "info": {
                  "type": "array",
                  "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "project": {
                  "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                  "type": "string"
                },
                "revisionHistoryLimit": {
                  "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                  "type": "string",
                  "format": "int64"
                },
                "source": {
                  "type": "object",
                  "title": "ApplicationSource contains all required information about the source of an application",
                  "properties": {
                    "chart": {
                      "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                      "type": "string"
                    },
                    "directory": {
                      "type": "object",
                      "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                      "properties": {
                        "exclude": {
                          "type": "string",
                          "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                        },
                        "include": {
                          "type": "string",
                          "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                        },
                        "jsonnet": {
                          "type": "object",
                          "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                          "properties": {
                            "extVars": {
                              "type": "array",
                              "title": "ExtVars is a list of Jsonnet External Variables",
                              "items": {
                                "type": "object",
                                "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                "properties": {
                                  "code": {
                                    "type": "boolean"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "libs": {
                              "type": "array",
                              "title": "Additional library search dirs",
                              "items": {
                                "type": "string"
                              }
                            },
                            "tlas": {
                              "type": "array",
                              "title": "TLAS is a list of Jsonnet Top-level Arguments",
                              "items": {
                                "type": "object",
                                "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                "properties": {
                                  "code": {
                                    "type": "boolean"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            }
                          },
                          "additionalProperties": false
                        },
                        "recurse": {
                          "type": "boolean",
                          "title": "Recurse specifies whether to scan a directory recursively for manifests"
                        }
                      },
                      "additionalProperties": false
                    },
                    "helm": {
                      "type": "object",
                      "title": "ApplicationSourceHelm holds helm specific options",
                      "properties": {
                        "fileParameters": {
                          "type": "array",
                          "title": "FileParameters are file parameters to the helm template",
                          "items": {
                            "type": "object",
                            "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                            "properties": {
                              "name": {
                                "type": "string",
                                "title": "Name is the name of the Helm parameter"
                              },
                              "path": {
                                "type": "string",
                                "title": "Path is the path to the file containing the values for the Helm parameter"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "ignoreMissingValueFiles": {
                          "type": "boolean",
                          "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                        },
                        "parameters": {
                          "type": "array",
                          "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                          "items": {
                            "type": "object",
                            "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                            "properties": {
                              "forceString": {
                                "type": "boolean",
                                "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                              },
                              "name": {
                                "type": "string",
                                "title": "Name is the name of the Helm parameter"
                              },
                              "value": {
                                "type": "string",
                                "title": "Value is the value for the Helm parameter"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "passCredentials": {
                          "type": "boolean",
                          "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                        },
                        "releaseName": {
                          "type": "string",
                          "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                        },
                        "skipCrds": {
                          "type": "boolean",
                          "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                        },
                        "valueFiles": {
                          "type": "array",
                          "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                          "items": {
                            "type": "string"
                          }
                        },
                        "values": {
                          "type": "string",
                          "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                        },
                        "version": {
                          "type": "string",
                          "title": "Version is the Helm version to use for templating (\"3\")"
                        }
                      },
                      "additionalProperties": false
                    },
                    "kustomize": {
                      "type": "object",
                      "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                      "properties": {
                        "commonAnnotations": {
                          "type": "object",
                          "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "commonAnnotationsEnvsubst": {
                          "type": "boolean",
                          "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                        },
                        "commonLabels": {
                          "type": "object",
                          "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "forceCommonAnnotations": {
                          "type": "boolean",
                          "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                        },
                        "forceCommonLabels": {
                          "type": "boolean",
                          "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                        },
                        "images": {
                          "type": "array",
                          "title": "Images is a list of Kustomize image override specifications",
                          "items": {
                            "type": "string"
                          }
                        },
                        "namePrefix": {
                          "type": "string",
                          "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                        },
                        "nameSuffix": {
                          "type": "string",
                          "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                        },
                        "namespace": {
                          "type": "string",
                          "title": "Namespace sets the namespace that Kustomize adds to all resources"
                        },
                        "replicas": {
                          "type": "array",
                          "title": "Replicas is a list of Kustomize Replicas override specifications",
                          "items": {
                            "type": "object",
                            "properties": {
                              "count": {
                                "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                "type": "object",
                                "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                "properties": {
                                  "intVal": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "strVal": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string",
                                    "format": "int64"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "name": {
                                "type": "string",
                                "title": "Name of Deployment or StatefulSet"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "version": {
                          "type": "string",
                          "title": "Version controls which version of Kustomize to use for rendering manifests"
                        }
                      },
                      "additionalProperties": false
                    },
                    "path": {
                      "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                      "type": "string"
                    },
                    "plugin": {
                      "type": "object",
                      "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                      "properties": {
                        "env": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "title": "EnvEntry represents an entry in the application's environment",
                            "properties": {
                              "name": {
                                "type": "string",
                                "title": "Name is the name of the variable, usually expressed in uppercase"
                              },
                              "value": {
                                "type": "string",
                                "title": "Value is the value of the variable"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "name": {
                          "type": "string"
                        },
                        "parameters": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "array": {
                                "description": "Array is the value of an array type parameter.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "map": {
                                "description": "Map is the value of a map type parameter.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "name": {
                                "description": "Name is the name identifying a parameter.",
                                "type": "string"
                              },
                              "string": {
                                "description": "String_ is the value of a string type parameter.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "ref": {
                      "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                      "type": "string"
                    },
                    "repoURL": {
                      "type": "string",
                      "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                    },
                    "targetRevision": {
                      "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "sources": {
                  "type": "array",
                  "title": "Sources is a reference to the location of the application's manifests or chart",
                  "items": {
                    "type": "object",
                    "title": "ApplicationSource contains all required information about the source of an application",
                    "properties": {
                      "chart": {
                        "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                        "type": "string"
                      },
                      "directory": {
                        "type": "object",
                        "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                        "properties": {
                          "exclude": {
                            "type": "string",
                            "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                          },
                          "include": {
                            "type": "string",
                            "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                          },
                          "jsonnet": {
                            "type": "object",
                            "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                            "properties": {
                              "extVars": {
                                "type": "array",
                                "title": "ExtVars is a list of Jsonnet External Variables",
                                "items": {
                                  "type": "object",
                                  "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                  "properties": {
                                    "code": {
                                      "type": "boolean"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "libs": {
                                "type": "array",
                                "title": "Additional library search dirs",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "tlas": {
                                "type": "array",
                                "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                "items": {
                                  "type": "object",
                                  "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                  "properties": {
                                    "code": {
                                      "type": "boolean"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "recurse": {
                            "type": "boolean",
                            "title": "Recurse specifies whether to scan a directory recursively for manifests"
                          }
                        },
                        "additionalProperties": false
                      },
                      "helm": {
                        "type": "object",
                        "title": "ApplicationSourceHelm holds helm specific options",
                        "properties": {
                          "fileParameters": {
                            "type": "array",
                            "title": "FileParameters are file parameters to the helm template",
                            "items": {
                              "type": "object",
                              "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "title": "Name is the name of the Helm parameter"
                                },
                                "path": {
                                  "type": "string",
                                  "title": "Path is the path to the file containing the values for the Helm parameter"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "ignoreMissingValueFiles": {
                            "type": "boolean",
                            "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                          },
                          "parameters": {
                            "type": "array",
                            "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                            "items": {
                              "type": "object",
                              "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                              "properties": {
                                "forceString": {
                                  "type": "boolean",
                                  "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Name is the name of the Helm parameter"
                                },
                                "value": {
                                  "type": "string",
                                  "title": "Value is the value for the Helm parameter"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "passCredentials": {
                            "type": "boolean",
                            "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                          },
                          "releaseName": {
                            "type": "string",
                            "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                          },
                          "skipCrds": {
                            "type": "boolean",
                            "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                          },
                          "valueFiles": {
                            "type": "array",
                            "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                            "items": {
                              "type": "string"
                            }
                          },
                          "values": {
                            "type": "string",
                            "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                          },
                          "version": {
                            "type": "string",
                            "title": "Version is the Helm version to use for templating (\"3\")"
                          }
                        },
                        "additionalProperties": false
                      },
                      "kustomize": {
                        "type": "object",
                        "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                        "properties": {
                          "commonAnnotations": {
                            "type": "object",
                            "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "commonAnnotationsEnvsubst": {
                            "type": "boolean",
                            "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                          },
                          "commonLabels": {
                            "type": "object",
                            "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "forceCommonAnnotations": {
                            "type": "boolean",
                            "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                          },
                          "forceCommonLabels": {
                            "type": "boolean",
                            "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                          },
                          "images": {
                            "type": "array",
                            "title": "Images is a list of Kustomize image override specifications",
                            "items": {
                              "type": "string"
                            }
                          },
                          "namePrefix": {
                            "type": "string",
                            "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                          },
                          "nameSuffix": {
                            "type": "string",
                            "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                          },
                          "namespace": {
                            "type": "string",
                            "title": "Namespace sets the namespace that Kustomize adds to all resources"
                          },
                          "replicas": {
                            "type": "array",
                            "title": "Replicas is a list of Kustomize Replicas override specifications",
                            "items": {
                              "type": "object",
                              "properties": {
                                "count": {
                                  "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                  "type": "object",
                                  "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                  "properties": {
                                    "intVal": {
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "strVal": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string",
                                      "format": "int64"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Name of Deployment or StatefulSet"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "version": {
                            "type": "string",
                            "title": "Version controls which version of Kustomize to use for rendering manifests"
                          }
                        },
                        "additionalProperties": false
                      },
                      "path": {
                        "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                        "type": "string"
                      },
                      "plugin": {
                        "type": "object",
                        "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                        "properties": {
                          "env": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "EnvEntry represents an entry in the application's environment",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "title": "Name is the name of the variable, usually expressed in uppercase"
                                },
                                "value": {
                                  "type": "string",
                                  "title": "Value is the value of the variable"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "parameters": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "array": {
                                  "description": "Array is the value of an array type parameter.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "map": {
                                  "description": "Map is the value of a map type parameter.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "name": {
                                  "description": "Name is the name identifying a parameter.",
                                  "type": "string"
                                },
                                "string": {
                                  "description": "String_ is the value of a string type parameter.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "ref": {
                        "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                        "type": "string"
                      },
                      "repoURL": {
                        "type": "string",
                        "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                      },
                      "targetRevision": {
                        "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "syncPolicy": {
                  "type": "object",
                  "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                  "properties": {
                    "automated": {
                      "type": "object",
                      "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                      "properties": {
                        "allowEmpty": {
                          "type": "boolean",
                          "title": "AllowEmpty allows apps have zero live resources (default: false)"
                        },
                        "prune": {
                          "type": "boolean",
                          "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                        },
                        "selfHeal": {
                          "type": "boolean",
                          "title": "SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                        }
                      },
                      "additionalProperties": false
                    },
                    "managedNamespaceMetadata": {
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "labels": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "retry": {
                      "type": "object",
                      "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                      "properties": {
                        "backoff": {
                          "type": "object",
                          "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                          "properties": {
                            "duration": {
                              "type": "string",
                              "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                            },
                            "factor": {
                              "type": "string",
                              "format": "int64",
                              "title": "Factor is a factor to multiply the base duration after each failed retry"
                            },
                            "maxDuration": {
                              "type": "string",
                              "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                            }
                          },
                          "additionalProperties": false
                        },
                        "limit": {
                          "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                          "type": "string",
                          "format": "int64"
                        }
                      },
                      "additionalProperties": false
                    },
                    "syncOptions": {
                      "type": "array",
                      "title": "Options allow you to specify whole app sync-options",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "pullRequest": {
      "description": "PullRequestGenerator defines a generator that scrapes a PullRequest API to find candidate pull requests.",
      "type": "object",
      "properties": {
        "bitbucketServer": {
          "description": "PullRequestGenerator defines connection info specific to BitbucketServer.",
          "type": "object",
          "properties": {
            "api": {
              "description": "The Bitbucket REST API URL to talk to e.g. https://bitbucket.org/rest Required.",
              "type": "string"
            },
            "basicAuth": {
              "description": "BasicAuthBitbucketServer defines the username/(password or personal access token) for Basic auth.",
              "type": "object",
              "properties": {
                "passwordRef": {
                  "description": "Utility struct for a reference to a secret key.",
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "secretName": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "username": {
                  "type": "string",
                  "title": "Username for Basic auth"
                }
              },
              "additionalProperties": false
            },
            "project": {
              "description": "Project to scan. Required.",
              "type": "string"
            },
            "repo": {
              "description": "Repo name to scan. Required.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "filters": {
          "description": "Filters for which pull requests should be considered.",
          "type": "array",
          "items": {
            "description": "PullRequestGeneratorFilter is a single pull request filter.\nIf multiple filter types are set on a single struct, they will be AND'd together. All filters must\npass for a pull request to be included.",
            "type": "object",
            "properties": {
              "branchMatch": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "gitea": {
          "description": "PullRequestGenerator defines connection info specific to Gitea.",
          "type": "object",
          "properties": {
            "api": {
              "type": "string",
              "title": "The Gitea API URL to talk to. Required"
            },
            "insecure": {
              "description": "Allow insecure tls, for self-signed certificates; default: false.",
              "type": "boolean"
            },
            "owner": {
              "description": "Gitea org or user to scan. Required.",
              "type": "string"
            },
            "repo": {
              "description": "Gitea repo name to scan. Required.",
              "type": "string"
            },
            "tokenRef": {
              "description": "Utility struct for a reference to a secret key.",
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "secretName": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "github": {
          "description": "PullRequestGenerator defines connection info specific to GitHub.",
          "type": "object",
          "properties": {
            "api": {
              "description": "The GitHub API URL to talk to. If blank, use https://api.github.com/.",
              "type": "string"
            },
            "appSecretName": {
              "description": "AppSecretName is a reference to a GitHub App repo-creds secret with permission to access pull requests.",
              "type": "string"
            },
            "labels": {
              "type": "array",
              "title": "Labels is used to filter the PRs that you want to target",
              "items": {
                "type": "string"
              }
            },
            "owner": {
              "description": "GitHub org or user to scan. Required.",
              "type": "string"
            },
            "repo": {
              "description": "GitHub repo name to scan. Required.",
              "type": "string"
            },
            "tokenRef": {
              "description": "Utility struct for a reference to a secret key.",
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "secretName": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "gitlab": {
          "description": "PullRequestGeneratorGitLab defines connection info specific to GitLab.",
          "type": "object",
          "properties": {
            "api": {
              "description": "The GitLab API URL to talk to. If blank, uses https://gitlab.com/.",
              "type": "string"
            },
            "labels": {
              "type": "array",
              "title": "Labels is used to filter the MRs that you want to target",
              "items": {
                "type": "string"
              }
            },
            "project": {
              "description": "GitLab project to scan. Required.",
              "type": "string"
            },
            "pullRequestState": {
              "type": "string",
              "title": "PullRequestState is an additional MRs filter to get only those with a certain state. Default: \"\" (all states)"
            },
            "tokenRef": {
              "description": "Utility struct for a reference to a secret key.",
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "secretName": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "requeueAfterSeconds": {
          "description": "Standard parameters.",
          "type": "string",
          "format": "int64"
        },
        "template": {
          "type": "object",
          "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
          "properties": {
            "metadata": {
              "type": "object",
              "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
              "properties": {
                "annotations": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "finalizers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "labels": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "spec": {
              "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
              "type": "object",
              "properties": {
                "destination": {
                  "type": "object",
                  "title": "ApplicationDestination holds information about the application's destination",
                  "properties": {
                    "name": {
                      "type": "string",
                      "title": "Name is an alternate way of specifying the target cluster by its symbolic name"
                    },
                    "namespace": {
                      "type": "string",
                      "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                    },
                    "server": {
                      "type": "string",
                      "title": "Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API"
                    }
                  },
                  "additionalProperties": false
                },
                "ignoreDifferences": {
                  "type": "array",
                  "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                  "items": {
                    "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "string"
                      },
                      "jqPathExpressions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "jsonPointers": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "kind": {
                        "type": "string"
                      },
                      "managedFieldsManagers": {
                        "type": "array",
                        "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                        "items": {
                          "type": "string"
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "namespace": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "info": {
                  "type": "array",
                  "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "project": {
                  "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                  "type": "string"
                },
                "revisionHistoryLimit": {
                  "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                  "type": "string",
                  "format": "int64"
                },
                "source": {
                  "type": "object",
                  "title": "ApplicationSource contains all required information about the source of an application",
                  "properties": {
                    "chart": {
                      "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                      "type": "string"
                    },
                    "directory": {
                      "type": "object",
                      "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                      "properties": {
                        "exclude": {
                          "type": "string",
                          "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                        },
                        "include": {
                          "type": "string",
                          "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                        },
                        "jsonnet": {
                          "type": "object",
                          "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                          "properties": {
                            "extVars": {
                              "type": "array",
                              "title": "ExtVars is a list of Jsonnet External Variables",
                              "items": {
                                "type": "object",
                                "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                "properties": {
                                  "code": {
                                    "type": "boolean"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "libs": {
                              "type": "array",
                              "title": "Additional library search dirs",
                              "items": {
                                "type": "string"
                              }
                            },
                            "tlas": {
                              "type": "array",
                              "title": "TLAS is a list of Jsonnet Top-level Arguments",
                              "items": {
                                "type": "object",
                                "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                "properties": {
                                  "code": {
                                    "type": "boolean"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            }
                          },
                          "additionalProperties": false
                        },
                        "recurse": {
                          "type": "boolean",
                          "title": "Recurse specifies whether to scan a directory recursively for manifests"
                        }
                      },
                      "additionalProperties": false
                    },
                    "helm": {
                      "type": "object",
                      "title": "ApplicationSourceHelm holds helm specific options",
                      "properties": {
                        "fileParameters": {
                          "type": "array",
                          "title": "FileParameters are file parameters to the helm template",
                          "items": {
                            "type": "object",
                            "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                            "properties": {
                              "name": {
                                "type": "string",
                                "title": "Name is the name of the Helm parameter"
                              },
                              "path": {
                                "type": "string",
                                "title": "Path is the path to the file containing the values for the Helm parameter"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "ignoreMissingValueFiles": {
                          "type": "boolean",
                          "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                        },
                        "parameters": {
                          "type": "array",
                          "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                          "items": {
                            "type": "object",
                            "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                            "properties": {
                              "forceString": {
                                "type": "boolean",
                                "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                              },
                              "name": {
                                "type": "string",
                                "title": "Name is the name of the Helm parameter"
                              },
                              "value": {
                                "type": "string",
                                "title": "Value is the value for the Helm parameter"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "passCredentials": {
                          "type": "boolean",
                          "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                        },
                        "releaseName": {
                          "type": "string",
                          "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                        },
                        "skipCrds": {
                          "type": "boolean",
                          "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                        },
                        "valueFiles": {
                          "type": "array",
                          "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                          "items": {
                            "type": "string"
                          }
                        },
                        "values": {
                          "type": "string",
                          "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                        },
                        "version": {
                          "type": "string",
                          "title": "Version is the Helm version to use for templating (\"3\")"
                        }
                      },
                      "additionalProperties": false
                    },
                    "kustomize": {
                      "type": "object",
                      "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                      "properties": {
                        "commonAnnotations": {
                          "type": "object",
                          "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "commonAnnotationsEnvsubst": {
                          "type": "boolean",
                          "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                        },
                        "commonLabels": {
                          "type": "object",
                          "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "forceCommonAnnotations": {
                          "type": "boolean",
                          "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                        },
                        "forceCommonLabels": {
                          "type": "boolean",
                          "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                        },
                        "images": {
                          "type": "array",
                          "title": "Images is a list of Kustomize image override specifications",
                          "items": {
                            "type": "string"
                          }
                        },
                        "namePrefix": {
                          "type": "string",
                          "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                        },
                        "nameSuffix": {
                          "type": "string",
                          "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                        },
                        "namespace": {
                          "type": "string",
                          "title": "Namespace sets the namespace that Kustomize adds to all resources"
                        },
                        "replicas": {
                          "type": "array",
                          "title": "Replicas is a list of Kustomize Replicas override specifications",
                          "items": {
                            "type": "object",
                            "properties": {
                              "count": {
                                "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                "type": "object",
                                "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                "properties": {
                                  "intVal": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "strVal": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string",
                                    "format": "int64"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "name": {
                                "type": "string",
                                "title": "Name of Deployment or StatefulSet"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "version": {
                          "type": "string",
                          "title": "Version controls which version of Kustomize to use for rendering manifests"
                        }
                      },
                      "additionalProperties": false
                    },
                    "path": {
                      "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                      "type": "string"
                    },
                    "plugin": {
                      "type": "object",
                      "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                      "properties": {
                        "env": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "title": "EnvEntry represents an entry in the application's environment",
                            "properties": {
                              "name": {
                                "type": "string",
                                "title": "Name is the name of the variable, usually expressed in uppercase"
                              },
                              "value": {
                                "type": "string",
                                "title": "Value is the value of the variable"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "name": {
                          "type": "string"
                        },
                        "parameters": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "array": {
                                "description": "Array is the value of an array type parameter.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "map": {
                                "description": "Map is the value of a map type parameter.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "name": {
                                "description": "Name is the name identifying a parameter.",
                                "type": "string"
                              },
                              "string": {
                                "description": "String_ is the value of a string type parameter.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "ref": {
                      "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                      "type": "string"
                    },
                    "repoURL": {
                      "type": "string",
                      "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                    },
                    "targetRevision": {
                      "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "sources": {
                  "type": "array",
                  "title": "Sources is a reference to the location of the application's manifests or chart",
                  "items": {
                    "type": "object",
                    "title": "ApplicationSource contains all required information about the source of an application",
                    "properties": {
                      "chart": {
                        "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                        "type": "string"
                      },
                      "directory": {
                        "type": "object",
                        "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                        "properties": {
                          "exclude": {
                            "type": "string",
                            "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                          },
                          "include": {
                            "type": "string",
                            "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                          },
                          "jsonnet": {
                            "type": "object",
                            "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                            "properties": {
                              "extVars": {
                                "type": "array",
                                "title": "ExtVars is a list of Jsonnet External Variables",
                                "items": {
                                  "type": "object",
                                  "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                  "properties": {
                                    "code": {
                                      "type": "boolean"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "libs": {
                                "type": "array",
                                "title": "Additional library search dirs",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "tlas": {
                                "type": "array",
                                "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                "items": {
                                  "type": "object",
                                  "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                  "properties": {
                                    "code": {
                                      "type": "boolean"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "recurse": {
                            "type": "boolean",
                            "title": "Recurse specifies whether to scan a directory recursively for manifests"
                          }
                        },
                        "additionalProperties": false
                      },
                      "helm": {
                        "type": "object",
                        "title": "ApplicationSourceHelm holds helm specific options",
                        "properties": {
                          "fileParameters": {
                            "type": "array",
                            "title": "FileParameters are file parameters to the helm template",
                            "items": {
                              "type": "object",
                              "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "title": "Name is the name of the Helm parameter"
                                },
                                "path": {
                                  "type": "string",
                                  "title": "Path is the path to the file containing the values for the Helm parameter"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "ignoreMissingValueFiles": {
                            "type": "boolean",
                            "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                          },
                          "parameters": {
                            "type": "array",
                            "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                            "items": {
                              "type": "object",
                              "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                              "properties": {
                                "forceString": {
                                  "type": "boolean",
                                  "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Name is the name of the Helm parameter"
                                },
                                "value": {
                                  "type": "string",
                                  "title": "Value is the value for the Helm parameter"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "passCredentials": {
                            "type": "boolean",
                            "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                          },
                          "releaseName": {
                            "type": "string",
                            "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                          },
                          "skipCrds": {
                            "type": "boolean",
                            "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                          },
                          "valueFiles": {
                            "type": "array",
                            "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                            "items": {
                              "type": "string"
                            }
                          },
                          "values": {
                            "type": "string",
                            "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                          },
                          "version": {
                            "type": "string",
                            "title": "Version is the Helm version to use for templating (\"3\")"
                          }
                        },
                        "additionalProperties": false
                      },
                      "kustomize": {
                        "type": "object",
                        "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                        "properties": {
                          "commonAnnotations": {
                            "type": "object",
                            "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "commonAnnotationsEnvsubst": {
                            "type": "boolean",
                            "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                          },
                          "commonLabels": {
                            "type": "object",
                            "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "forceCommonAnnotations": {
                            "type": "boolean",
                            "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                          },
                          "forceCommonLabels": {
                            "type": "boolean",
                            "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                          },
                          "images": {
                            "type": "array",
                            "title": "Images is a list of Kustomize image override specifications",
                            "items": {
                              "type": "string"
                            }
                          },
                          "namePrefix": {
                            "type": "string",
                            "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                          },
                          "nameSuffix": {
                            "type": "string",
                            "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                          },
                          "namespace": {
                            "type": "string",
                            "title": "Namespace sets the namespace that Kustomize adds to all resources"
                          },
                          "replicas": {
                            "type": "array",
                            "title": "Replicas is a list of Kustomize Replicas override specifications",
                            "items": {
                              "type": "object",
                              "properties": {
                                "count": {
                                  "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                  "type": "object",
                                  "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                  "properties": {
                                    "intVal": {
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "strVal": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string",
                                      "format": "int64"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Name of Deployment or StatefulSet"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "version": {
                            "type": "string",
                            "title": "Version controls which version of Kustomize to use for rendering manifests"
                          }
                        },
                        "additionalProperties": false
                      },
                      "path": {
                        "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                        "type": "string"
                      },
                      "plugin": {
                        "type": "object",
                        "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                        "properties": {
                          "env": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "EnvEntry represents an entry in the application's environment",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "title": "Name is the name of the variable, usually expressed in uppercase"
                                },
                                "value": {
                                  "type": "string",
                                  "title": "Value is the value of the variable"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "parameters": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "array": {
                                  "description": "Array is the value of an array type parameter.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "map": {
                                  "description": "Map is the value of a map type parameter.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "name": {
                                  "description": "Name is the name identifying a parameter.",
                                  "type": "string"
                                },
                                "string": {
                                  "description": "String_ is the value of a string type parameter.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "ref": {
                        "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                        "type": "string"
                      },
                      "repoURL": {
                        "type": "string",
                        "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                      },
                      "targetRevision": {
                        "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "syncPolicy": {
                  "type": "object",
                  "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                  "properties": {
                    "automated": {
                      "type": "object",
                      "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                      "properties": {
                        "allowEmpty": {
                          "type": "boolean",
                          "title": "AllowEmpty allows apps have zero live resources (default: false)"
                        },
                        "prune": {
                          "type": "boolean",
                          "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                        },
                        "selfHeal": {
                          "type": "boolean",
                          "title": "SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                        }
                      },
                      "additionalProperties": false
                    },
                    "managedNamespaceMetadata": {
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "labels": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "retry": {
                      "type": "object",
                      "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                      "properties": {
                        "backoff": {
                          "type": "object",
                          "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                          "properties": {
                            "duration": {
                              "type": "string",
                              "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                            },
                            "factor": {
                              "type": "string",
                              "format": "int64",
                              "title": "Factor is a factor to multiply the base duration after each failed retry"
                            },
                            "maxDuration": {
                              "type": "string",
                              "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                            }
                          },
                          "additionalProperties": false
                        },
                        "limit": {
                          "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                          "type": "string",
                          "format": "int64"
                        }
                      },
                      "additionalProperties": false
                    },
                    "syncOptions": {
                      "type": "array",
                      "title": "Options allow you to specify whole app sync-options",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "scmProvider": {
      "description": "SCMProviderGenerator defines a generator that scrapes a SCMaaS API to find candidate repos.",
      "type": "object",
      "properties": {
        "azureDevOps": {
          "description": "SCMProviderGeneratorAzureDevOps defines connection info specific to Azure DevOps.",
          "type": "object",
          "properties": {
            "accessTokenRef": {
              "description": "Utility struct for a reference to a secret key.",
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "secretName": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "allBranches": {
              "description": "Scan all branches instead of just the default branch.",
              "type": "boolean"
            },
            "api": {
              "description": "The URL to Azure DevOps. If blank, use https://dev.azure.com.",
              "type": "string"
            },
            "organization": {
              "description": "Azure Devops organization. Required. E.g. \"my-organization\".",
              "type": "string"
            },
            "teamProject": {
              "description": "Azure Devops team project. Required. E.g. \"my-team\".",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "bitbucket": {
          "description": "SCMProviderGeneratorBitbucket defines connection info specific to Bitbucket Cloud (API version 2).",
          "type": "object",
          "properties": {
            "allBranches": {
              "description": "Scan all branches instead of just the main branch.",
              "type": "boolean"
            },
            "appPasswordRef": {
              "description": "Utility struct for a reference to a secret key.",
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "secretName": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "owner": {
              "description": "Bitbucket workspace to scan. Required.",
              "type": "string"
            },
            "user": {
              "type": "string",
              "title": "Bitbucket user to use when authenticating.  Should have a \"member\" role to be able to read all repositories and branches.  Required"
            }
          },
          "additionalProperties": false
        },
        "bitbucketServer": {
          "description": "SCMProviderGeneratorBitbucketServer defines connection info specific to Bitbucket Server.",
          "type": "object",
          "properties": {
            "allBranches": {
              "description": "Scan all branches instead of just the default branch.",
              "type": "boolean"
            },
            "api": {
              "description": "The Bitbucket Server REST API URL to talk to. Required.",
              "type": "string"
            },
            "basicAuth": {
              "description": "BasicAuthBitbucketServer defines the username/(password or personal access token) for Basic auth.",
              "type": "object",
              "properties": {
                "passwordRef": {
                  "description": "Utility struct for a reference to a secret key.",
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "secretName": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "username": {
                  "type": "string",
                  "title": "Username for Basic auth"
                }
              },
              "additionalProperties": false
            },
            "project": {
              "description": "Project to scan. Required.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "cloneProtocol": {
          "description": "Which protocol to use for the SCM URL. Default is provider-specific but ssh if possible. Not all providers\nnecessarily support all protocols.",
          "type": "string"
        },
        "filters": {
          "description": "Filters for which repos should be considered.",
          "type": "array",
          "items": {
            "description": "SCMProviderGeneratorFilter is a single repository filter.\nIf multiple filter types are set on a single struct, they will be AND'd together. All filters must\npass for a repo to be included.",
            "type": "object",
            "properties": {
              "branchMatch": {
                "description": "A regex which must match the branch name.",
                "type": "string"
              },
              "labelMatch": {
                "description": "A regex which must match at least one label.",
                "type": "string"
              },
              "pathsDoNotExist": {
                "description": "An array of paths, all of which must not exist.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "pathsExist": {
                "description": "An array of paths, all of which must exist.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "repositoryMatch": {
                "description": "A regex for repo names.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "gitea": {
          "description": "SCMProviderGeneratorGitea defines a connection info specific to Gitea.",
          "type": "object",
          "properties": {
            "allBranches": {
              "description": "Scan all branches instead of just the default branch.",
              "type": "boolean"
            },
            "api": {
              "description": "The Gitea URL to talk to. For example https://gitea.mydomain.com/.",
              "type": "string"
            },
            "insecure": {
              "type": "boolean",
              "title": "Allow self-signed TLS / Certificates; default: false"
            },
            "owner": {
              "description": "Gitea organization or user to scan. Required.",
              "type": "string"
            },
            "tokenRef": {
              "description": "Utility struct for a reference to a secret key.",
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "secretName": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "github": {
          "description": "SCMProviderGeneratorGithub defines connection info specific to GitHub.",
          "type": "object",
          "properties": {
            "allBranches": {
              "description": "Scan all branches instead of just the default branch.",
              "type": "boolean"
            },
            "api": {
              "description": "The GitHub API URL to talk to. If blank, use https://api.github.com/.",
              "type": "string"
            },
            "appSecretName": {
              "description": "AppSecretName is a reference to a GitHub App repo-creds secret.",
              "type": "string"
            },
            "organization": {
              "description": "GitHub org to scan. Required.",
              "type": "string"
            },
            "tokenRef": {
              "description": "Utility struct for a reference to a secret key.",
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "secretName": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "gitlab": {
          "description": "SCMProviderGeneratorGitlab defines connection info specific to Gitlab.",
          "type": "object",
          "properties": {
            "allBranches": {
              "description": "Scan all branches instead of just the default branch.",
              "type": "boolean"
            },
            "api": {
              "description": "The Gitlab API URL to talk to.",
              "type": "string"
            },
            "group": {
              "description": "Gitlab group to scan. Required.  You can use either the project id (recommended) or the full namespaced path.",
              "type": "string"
            },
            "includeSubgroups": {
              "type": "boolean",
              "title": "Recurse through subgroups (true) or scan only the base group (false).  Defaults to \"false\""
            },
            "tokenRef": {
              "description": "Utility struct for a reference to a secret key.",
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "secretName": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "requeueAfterSeconds": {
          "description": "Standard parameters.",
          "type": "string",
          "format": "int64"
        },
        "template": {
          "type": "object",
          "title": "ApplicationSetTemplate represents argocd ApplicationSpec",
          "properties": {
            "metadata": {
              "type": "object",
              "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)",
              "properties": {
                "annotations": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "finalizers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "labels": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "spec": {
              "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.",
              "type": "object",
              "properties": {
                "destination": {
                  "type": "object",
                  "title": "ApplicationDestination holds information about the application's destination",
                  "properties": {
                    "name": {
                      "type": "string",
                      "title": "Name is an alternate way of specifying the target cluster by its symbolic name"
                    },
                    "namespace": {
                      "type": "string",
                      "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                    },
                    "server": {
                      "type": "string",
                      "title": "Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API"
                    }
                  },
                  "additionalProperties": false
                },
                "ignoreDifferences": {
                  "type": "array",
                  "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison",
                  "items": {
                    "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.",
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "string"
                      },
                      "jqPathExpressions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "jsonPointers": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "kind": {
                        "type": "string"
                      },
                      "managedFieldsManagers": {
                        "type": "array",
                        "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs",
                        "items": {
                          "type": "string"
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "namespace": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "info": {
                  "type": "array",
                  "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "project": {
                  "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project.",
                  "type": "string"
                },
                "revisionHistoryLimit": {
                  "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10.",
                  "type": "string",
                  "format": "int64"
                },
                "source": {
                  "type": "object",
                  "title": "ApplicationSource contains all required information about the source of an application",
                  "properties": {
                    "chart": {
                      "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                      "type": "string"
                    },
                    "directory": {
                      "type": "object",
                      "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                      "properties": {
                        "exclude": {
                          "type": "string",
                          "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                        },
                        "include": {
                          "type": "string",
                          "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                        },
                        "jsonnet": {
                          "type": "object",
                          "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                          "properties": {
                            "extVars": {
                              "type": "array",
                              "title": "ExtVars is a list of Jsonnet External Variables",
                              "items": {
                                "type": "object",
                                "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                "properties": {
                                  "code": {
                                    "type": "boolean"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "libs": {
                              "type": "array",
                              "title": "Additional library search dirs",
                              "items": {
                                "type": "string"
                              }
                            },
                            "tlas": {
                              "type": "array",
                              "title": "TLAS is a list of Jsonnet Top-level Arguments",
                              "items": {
                                "type": "object",
                                "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                "properties": {
                                  "code": {
                                    "type": "boolean"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            }
                          },
                          "additionalProperties": false
                        },
                        "recurse": {
                          "type": "boolean",
                          "title": "Recurse specifies whether to scan a directory recursively for manifests"
                        }
                      },
                      "additionalProperties": false
                    },
                    "helm": {
                      "type": "object",
                      "title": "ApplicationSourceHelm holds helm specific options",
                      "properties": {
                        "fileParameters": {
                          "type": "array",
                          "title": "FileParameters are file parameters to the helm template",
                          "items": {
                            "type": "object",
                            "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                            "properties": {
                              "name": {
                                "type": "string",
                                "title": "Name is the name of the Helm parameter"
                              },
                              "path": {
                                "type": "string",
                                "title": "Path is the path to the file containing the values for the Helm parameter"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "ignoreMissingValueFiles": {
                          "type": "boolean",
                          "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                        },
                        "parameters": {
                          "type": "array",
                          "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                          "items": {
                            "type": "object",
                            "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                            "properties": {
                              "forceString": {
                                "type": "boolean",
                                "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                              },
                              "name": {
                                "type": "string",
                                "title": "Name is the name of the Helm parameter"
                              },
                              "value": {
                                "type": "string",
                                "title": "Value is the value for the Helm parameter"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "passCredentials": {
                          "type": "boolean",
                          "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                        },
                        "releaseName": {
                          "type": "string",
                          "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                        },
                        "skipCrds": {
                          "type": "boolean",
                          "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                        },
                        "valueFiles": {
                          "type": "array",
                          "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                          "items": {
                            "type": "string"
                          }
                        },
                        "values": {
                          "type": "string",
                          "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                        },
                        "version": {
                          "type": "string",
                          "title": "Version is the Helm version to use for templating (\"3\")"
                        }
                      },
                      "additionalProperties": false
                    },
                    "kustomize": {
                      "type": "object",
                      "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                      "properties": {
                        "commonAnnotations": {
                          "type": "object",
                          "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "commonAnnotationsEnvsubst": {
                          "type": "boolean",
                          "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                        },
                        "commonLabels": {
                          "type": "object",
                          "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "forceCommonAnnotations": {
                          "type": "boolean",
                          "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                        },
                        "forceCommonLabels": {
                          "type": "boolean",
                          "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                        },
                        "images": {
                          "type": "array",
                          "title": "Images is a list of Kustomize image override specifications",
                          "items": {
                            "type": "string"
                          }
                        },
                        "namePrefix": {
                          "type": "string",
                          "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                        },
                        "nameSuffix": {
                          "type": "string",
                          "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                        },
                        "namespace": {
                          "type": "string",
                          "title": "Namespace sets the namespace that Kustomize adds to all resources"
                        },
                        "replicas": {
                          "type": "array",
                          "title": "Replicas is a list of Kustomize Replicas override specifications",
                          "items": {
                            "type": "object",
                            "properties": {
                              "count": {
                                "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                "type": "object",
                                "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                "properties": {
                                  "intVal": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "strVal": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string",
                                    "format": "int64"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "name": {
                                "type": "string",
                                "title": "Name of Deployment or StatefulSet"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "version": {
                          "type": "string",
                          "title": "Version controls which version of Kustomize to use for rendering manifests"
                        }
                      },
                      "additionalProperties": false
                    },
                    "path": {
                      "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                      "type": "string"
                    },
                    "plugin": {
                      "type": "object",
                      "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                      "properties": {
                        "env": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "title": "EnvEntry represents an entry in the application's environment",
                            "properties": {
                              "name": {
                                "type": "string",
                                "title": "Name is the name of the variable, usually expressed in uppercase"
                              },
                              "value": {
                                "type": "string",
                                "title": "Value is the value of the variable"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "name": {
                          "type": "string"
                        },
                        "parameters": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "array": {
                                "description": "Array is the value of an array type parameter.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "map": {
                                "description": "Map is the value of a map type parameter.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "name": {
                                "description": "Name is the name identifying a parameter.",
                                "type": "string"
                              },
                              "string": {
                                "description": "String_ is the value of a string type parameter.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "ref": {
                      "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                      "type": "string"
                    },
                    "repoURL": {
                      "type": "string",
                      "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                    },
                    "targetRevision": {
                      "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "sources": {
                  "type": "array",
                  "title": "Sources is a reference to the location of the application's manifests or chart",
                  "items": {
                    "type": "object",
                    "title": "ApplicationSource contains all required information about the source of an application",
                    "properties": {
                      "chart": {
                        "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                        "type": "string"
                      },
                      "directory": {
                        "type": "object",
                        "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet",
                        "properties": {
                          "exclude": {
                            "type": "string",
                            "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                          },
                          "include": {
                            "type": "string",
                            "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                          },
                          "jsonnet": {
                            "type": "object",
                            "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet",
                            "properties": {
                              "extVars": {
                                "type": "array",
                                "title": "ExtVars is a list of Jsonnet External Variables",
                                "items": {
                                  "type": "object",
                                  "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                  "properties": {
                                    "code": {
                                      "type": "boolean"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "libs": {
                                "type": "array",
                                "title": "Additional library search dirs",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "tlas": {
                                "type": "array",
                                "title": "TLAS is a list of Jsonnet Top-level Arguments",
                                "items": {
                                  "type": "object",
                                  "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                                  "properties": {
                                    "code": {
                                      "type": "boolean"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "recurse": {
                            "type": "boolean",
                            "title": "Recurse specifies whether to scan a directory recursively for manifests"
                          }
                        },
                        "additionalProperties": false
                      },
                      "helm": {
                        "type": "object",
                        "title": "ApplicationSourceHelm holds helm specific options",
                        "properties": {
                          "fileParameters": {
                            "type": "array",
                            "title": "FileParameters are file parameters to the helm template",
                            "items": {
                              "type": "object",
                              "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "title": "Name is the name of the Helm parameter"
                                },
                                "path": {
                                  "type": "string",
                                  "title": "Path is the path to the file containing the values for the Helm parameter"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "ignoreMissingValueFiles": {
                            "type": "boolean",
                            "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                          },
                          "parameters": {
                            "type": "array",
                            "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                            "items": {
                              "type": "object",
                              "title": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                              "properties": {
                                "forceString": {
                                  "type": "boolean",
                                  "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Name is the name of the Helm parameter"
                                },
                                "value": {
                                  "type": "string",
                                  "title": "Value is the value for the Helm parameter"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "passCredentials": {
                            "type": "boolean",
                            "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                          },
                          "releaseName": {
                            "type": "string",
                            "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                          },
                          "skipCrds": {
                            "type": "boolean",
                            "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                          },
                          "valueFiles": {
                            "type": "array",
                            "title": "ValuesFiles is a list of Helm value files to use when generating a template",
                            "items": {
                              "type": "string"
                            }
                          },
                          "values": {
                            "type": "string",
                            "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                          },
                          "version": {
                            "type": "string",
                            "title": "Version is the Helm version to use for templating (\"3\")"
                          }
                        },
                        "additionalProperties": false
                      },
                      "kustomize": {
                        "type": "object",
                        "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize",
                        "properties": {
                          "commonAnnotations": {
                            "type": "object",
                            "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "commonAnnotationsEnvsubst": {
                            "type": "boolean",
                            "title": "CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values"
                          },
                          "commonLabels": {
                            "type": "object",
                            "title": "CommonLabels is a list of additional labels to add to rendered manifests",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "forceCommonAnnotations": {
                            "type": "boolean",
                            "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                          },
                          "forceCommonLabels": {
                            "type": "boolean",
                            "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                          },
                          "images": {
                            "type": "array",
                            "title": "Images is a list of Kustomize image override specifications",
                            "items": {
                              "type": "string"
                            }
                          },
                          "namePrefix": {
                            "type": "string",
                            "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                          },
                          "nameSuffix": {
                            "type": "string",
                            "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                          },
                          "namespace": {
                            "type": "string",
                            "title": "Namespace sets the namespace that Kustomize adds to all resources"
                          },
                          "replicas": {
                            "type": "array",
                            "title": "Replicas is a list of Kustomize Replicas override specifications",
                            "items": {
                              "type": "object",
                              "properties": {
                                "count": {
                                  "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                                  "type": "object",
                                  "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString",
                                  "properties": {
                                    "intVal": {
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "strVal": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string",
                                      "format": "int64"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Name of Deployment or StatefulSet"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "version": {
                            "type": "string",
                            "title": "Version controls which version of Kustomize to use for rendering manifests"
                          }
                        },
                        "additionalProperties": false
                      },
                      "path": {
                        "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                        "type": "string"
                      },
                      "plugin": {
                        "type": "object",
                        "title": "ApplicationSourcePlugin holds options specific to config management plugins",
                        "properties": {
                          "env": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "EnvEntry represents an entry in the application's environment",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "title": "Name is the name of the variable, usually expressed in uppercase"
                                },
                                "value": {
                                  "type": "string",
                                  "title": "Value is the value of the variable"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "parameters": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "array": {
                                  "description": "Array is the value of an array type parameter.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "map": {
                                  "description": "Map is the value of a map type parameter.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "name": {
                                  "description": "Name is the name identifying a parameter.",
                                  "type": "string"
                                },
                                "string": {
                                  "description": "String_ is the value of a string type parameter.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "ref": {
                        "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                        "type": "string"
                      },
                      "repoURL": {
                        "type": "string",
                        "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                      },
                      "targetRevision": {
                        "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "syncPolicy": {
                  "type": "object",
                  "title": "SyncPolicy controls when a sync will be performed in response to updates in git",
                  "properties": {
                    "automated": {
                      "type": "object",
                      "title": "SyncPolicyAutomated controls the behavior of an automated sync",
                      "properties": {
                        "allowEmpty": {
                          "type": "boolean",
                          "title": "AllowEmpty allows apps have zero live resources (default: false)"
                        },
                        "prune": {
                          "type": "boolean",
                          "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                        },
                        "selfHeal": {
                          "type": "boolean",
                          "title": "SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                        }
                      },
                      "additionalProperties": false
                    },
                    "managedNamespaceMetadata": {
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "labels": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "retry": {
                      "type": "object",
                      "title": "RetryStrategy contains information about the strategy to apply when a sync failed",
                      "properties": {
                        "backoff": {
                          "type": "object",
                          "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs",
                          "properties": {
                            "duration": {
                              "type": "string",
                              "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                            },
                            "factor": {
                              "type": "string",
                              "format": "int64",
                              "title": "Factor is a factor to multiply the base duration after each failed retry"
                            },
                            "maxDuration": {
                              "type": "string",
                              "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                            }
                          },
                          "additionalProperties": false
                        },
                        "limit": {
                          "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                          "type": "string",
                          "format": "int64"
                        }
                      },
                      "additionalProperties": false
                    },
                    "syncOptions": {
                      "type": "array",
                      "title": "Options allow you to specify whole app sync-options",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "selector": {
      "type": "object",
      "title": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.\n+structType=atomic",
      "properties": {
        "matchExpressions": {
          "type": "array",
          "title": "matchExpressions is a list of label selector requirements. The requirements are ANDed.\n+optional",
          "items": {
            "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "title": "key is the label key that the selector applies to.\n+patchMergeKey=key\n+patchStrategy=merge"
              },
              "operator": {
                "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                "type": "string"
              },
              "values": {
                "type": "array",
                "title": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.\n+optional",
                "items": {
                  "type": "string"
                }
              }
            },
            "additionalProperties": false
          }
        },
        "matchLabels": {
          "type": "object",
          "title": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n+optional",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}